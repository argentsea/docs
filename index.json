{
  "api/ArgentSea.html": {
    "href": "api/ArgentSea.html",
    "title": "Namespace ArgentSea | ArgentSea Docs",
    "keywords": "Namespace ArgentSea Classes DataConnectionConfiguration Abstract class implementing the data connection functionality shared by PostgreSQL and SQL Server implementations. DataResilienceConfiguration This class contains the definition for a data resiliance strategy. Specifically: when to retry and when to circuit break. This class is created as a configuration entry in an array in the DataResilienceStrategies property of the DataConfigurationOptions class. DataResilienceOptions This options class contains an array of resilience strategies (retry and circuit breaking settings). To specify as particular resilience strategy, a connection can specify a ResilienceKey. DataSecurityOptions This options class contains an array of SecurityConfiguration (login information). A connection can specify as particular login account by referencing a SecurityKey. DbDataStores<TConfiguration> This class is used by provider specific implementations. It is unlikely that you would reference this in consumer code. This generic class manages non-sharded database connections. DbDataStores<TConfiguration>.DataConnection DbDataStores<TConfiguration>.DbDataSets DbParameterCollectionExtensions ExpressionHelpers This class is used by provider specific implementations. It is unlikely that you would reference this in consumer code. InvalidMapTypeException This exception is raise when a model property has a database mapping attribute that is not of the correct type. InvalidShardArgumentsException This error is raised upon an attempt to create an Empty ShardKey or ShardChild, but the IDs are not zero. Essentially, any shard object with a DataOrigin of '0' (Empty) must also have zeroed IDs (be equal to ShardKey.Empty or ShardChild.Empty). LoggingExtensions The are extension methods for high-performance logging. Mapper This static class contains the logic for mapping database parameters to/from properties. Mapper.DummyType MapShardChildAttribute MapShardKeyAttribute MapToModel MultipleMapAttributesException This exception is invoked if a model property has multiple mapping attributes. A single value cannot be mapped to/from multiple parameters or columns. This exception is not raised in the case of ShardKey > or ShardChild properties. ParameterMapAttribute QueryParameterCollection This is an implementation of the abstract DbParameterCollecion class. Unlike most provider-specific parameter collections, it can be created without a prior DbCommand object instance. RetryLimitExceededException This exception is raise when a transient failure occurs, but automatic retries were not successful. SecurityConfiguration This class represents data security information, with a key that can be reference by any connection(s) that share the security information. ShardDataStores<TShard, TConfiguration> This class is used by provider specific implementations. It is unlikely that you would call this in consumer code. This is the generic class that defines connections for sharded data sets. ShardDataStores<TShard, TConfiguration>.DataConnection ShardDataStores<TShard, TConfiguration>.ShardDataSet ShardDataStores<TShard, TConfiguration>.ShardDataSets ShardDataStores<TShard, TConfiguration>.ShardInstance StringExtensions This static class contains extension methods for cleaning input strings of invalid characters. It does NOT sanitize input strings for protection against injection attacks (your parmemeterized queries should protect against that). UnexpectedSqlResultException The exception is thrown when an output parameter is expected, but not found, when ExecuteQueryToValueAsync is invoked. Structs DataOrigin This object help descript the “type” of data. For example, you could assign Customer data a data origin value of 'c'. When comparing data values, the ShardKey/ShardChild will not match if the data origin is not the same value — even if IDs are the same. This helps prevent accidentaly comparisions that are not valid and also prevents collisions if you choose allows values of different types to be stored in the same cache. ShardChild<TShard, TRecord, TChild> Immutable class representing a sharded record with a database compound key. The ShardChild consist of the (virtual) shardId, the recordId, and the childId. ShardKey<TShard, TRecord> Immutable class representing a sharded record with a “compound” key: the (virtual) shardId and the (database) recordId. Interfaces IConnectionConfiguration This interface is used by provider specific implementations. It is unlikely that you would reference this in consumer code. The interface defines the minimum capability of a connection definition. IDataProviderServiceFactory This interface is used by provider specific implementations. It is unlikely that you would reference this in consumer code. The interface defines the capabilities of a database providers service. IDbConnectionConfiguration This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. IDbDataConfigurationOptions This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. IShardConnectionConfiguration<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. IShardConnectionsConfiguration<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. IShardDataConfigurationOptions<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Enums DataResilienceConfiguration.SequenceLengthening LoggingExtensions.EventIdentifier ShardDataStores<TShard, TConfiguration>.ShardInstance.DataAccess StringExtensions.InputCleaningOptions Delegates QueryResultModelHandler<TShard, TArg, TModel> This delegate will be invoked for each shard (probably on different threads) to convert the cmd.Execute result to model types."
  },
  "api/ArgentSea.IShardConnectionsConfiguration-1.html": {
    "href": "api/ArgentSea.IShardConnectionsConfiguration-1.html",
    "title": "Interface IShardConnectionsConfiguration<TShard> | ArgentSea Docs",
    "keywords": "Interface IShardConnectionsConfiguration<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IShardConnectionsConfiguration<TShard> where TShard : IComparable Type Parameters Name Description TShard Properties | Improve this Doc View Source ShardSetName Declaration string ShardSetName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShardsInternal Declaration IShardConnectionConfiguration<TShard>[] ShardsInternal { get; } Property Value Type Description IShardConnectionConfiguration <TShard>[]"
  },
  "api/ArgentSea.IDbConnectionConfiguration.html": {
    "href": "api/ArgentSea.IDbConnectionConfiguration.html",
    "title": "Interface IDbConnectionConfiguration | ArgentSea Docs",
    "keywords": "Interface IDbConnectionConfiguration This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IDbConnectionConfiguration Properties | Improve this Doc View Source DatabaseKey Declaration string DatabaseKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DataConnectionInternal Declaration IConnectionConfiguration DataConnectionInternal { get; } Property Value Type Description IConnectionConfiguration"
  },
  "api/ArgentSea.IConnectionConfiguration.html": {
    "href": "api/ArgentSea.IConnectionConfiguration.html",
    "title": "Interface IConnectionConfiguration | ArgentSea Docs",
    "keywords": "Interface IConnectionConfiguration This interface is used by provider specific implementations. It is unlikely that you would reference this in consumer code. The interface defines the minimum capability of a connection definition. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IConnectionConfiguration Properties | Improve this Doc View Source ConnectionDescription Declaration string ConnectionDescription { get; } Property Value Type Description System.String | Improve this Doc View Source ResilienceKey Declaration string ResilienceKey { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetConnectionString() Declaration string GetConnectionString() Returns Type Description System.String | Improve this Doc View Source SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions) Declaration void SetConfigurationOptions(DataSecurityOptions securityOptions, DataResilienceOptions resilienceStrategiesOptions) Parameters Type Name Description DataSecurityOptions securityOptions DataResilienceOptions resilienceStrategiesOptions"
  },
  "api-sql/ArgentSea.Sql.MapToSqlIntAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlIntAttribute.html",
    "title": "Class MapToSqlIntAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlIntAttribute This attribute maps a model property to/from a SQL Int parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlIntAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlIntAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlIntAttribute(String) Map this property to the specified Int (32-bit) database column. Declaration public MapToSqlIntAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlIntAttribute(String, Boolean) Declaration public MapToSqlIntAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgIntervalAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgIntervalAttribute.html",
    "title": "Class MapToPgIntervalAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgIntervalAttribute This attribute maps a model property to/from a PostgreSQL Interval parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgIntervalAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgIntervalAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgIntervalAttribute(String) Map this property to the specified Time database column (without Timezone). Declaration public MapToPgIntervalAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgIntervalAttribute(String, Boolean) Declaration public MapToPgIntervalAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.PgDbConnectionOptions.html": {
    "href": "api-pg/ArgentSea.Pg.PgDbConnectionOptions.html",
    "title": "Class PgDbConnectionOptions | ArgentSea Docs",
    "keywords": "Class PgDbConnectionOptions This configuration class defines an array of database connection configurations . For example, you might configure your appsettings.json like this: \"PgDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"Host\": \"localhost\", \"Database\": \"MyDb\" } } ] Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match a key in the DataResilienceOptions array. Inheritance System.Object PgDbConnectionOptions Implements IDbDataConfigurationOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgDbConnectionOptions : IDbDataConfigurationOptions Properties | Improve this Doc View Source DbConnectionsInternal Declaration public IDbConnectionConfiguration[] DbConnectionsInternal { get; } Property Value Type Description IDbConnectionConfiguration [] | Improve this Doc View Source PgDbConnections Declaration public PgDbConnectionConfiguration[] PgDbConnections { get; set; } Property Value Type Description PgDbConnectionConfiguration [] Implements IDbDataConfigurationOptions"
  },
  "api-sql/ArgentSea.Sql.SqlDbConnectionOptions.html": {
    "href": "api-sql/ArgentSea.Sql.SqlDbConnectionOptions.html",
    "title": "Class SqlDbConnectionOptions | ArgentSea Docs",
    "keywords": "Class SqlDbConnectionOptions This configuration class defines an array of database SqlConnectionConfiguration . For example, you might configure your appsettings.json like this: \"SqlDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"DataSource\": \"localhost\", \"InitialCatalog\": \"MyDb\" } } ] Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match a key in the DataResilienceOptions array. Inheritance System.Object SqlDbConnectionOptions Implements IDbDataConfigurationOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlDbConnectionOptions : IDbDataConfigurationOptions Properties | Improve this Doc View Source DbConnectionsInternal Declaration public IDbConnectionConfiguration[] DbConnectionsInternal { get; } Property Value Type Description IDbConnectionConfiguration [] | Improve this Doc View Source SqlDbConnections Declaration public SqlDbConnectionConfiguration[] SqlDbConnections { get; set; } Property Value Type Description SqlDbConnectionConfiguration [] Implements IDbDataConfigurationOptions"
  },
  "api-sql/ArgentSea.Sql.MapToSqlCharAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlCharAttribute.html",
    "title": "Class MapToSqlCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlCharAttribute This attribute maps a model property to/from a SQL Char parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlCharAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlCharAttribute(String, Int32, Int32) Map this property to the specified fixed-size Ansi database column (note that because .NET is Unicode, NChar is recommended for most applications). Declaration public MapToSqlCharAttribute(string parameterName, int length, int localeId) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The length of the fixed-size Ansi string. System.Int32 localeId The Ansi code-page to use for Unicode text conversion. For en-US use: 1033. | Improve this Doc View Source MapToSqlCharAttribute(String, Int32, Int32, Boolean) Declaration public MapToSqlCharAttribute(string parameterName, int length, int localeId, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Int32 localeId System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LocaleId Declaration public int LocaleId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.PgDbConnectionConfiguration.html": {
    "href": "api-pg/ArgentSea.Pg.PgDbConnectionConfiguration.html",
    "title": "Class PgDbConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class PgDbConnectionConfiguration Inheritance System.Object PgDbConnectionConfiguration Implements IDbConnectionConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgDbConnectionConfiguration : IDbConnectionConfiguration Properties | Improve this Doc View Source DatabaseKey Declaration public string DatabaseKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DataConnection Declaration public PgConnectionConfiguration DataConnection { get; set; } Property Value Type Description PgConnectionConfiguration | Improve this Doc View Source DataConnectionInternal Declaration public IConnectionConfiguration DataConnectionInternal { get; } Property Value Type Description IConnectionConfiguration Implements IDbConnectionConfiguration"
  },
  "api/ArgentSea.DataResilienceConfiguration.html": {
    "href": "api/ArgentSea.DataResilienceConfiguration.html",
    "title": "Class DataResilienceConfiguration | ArgentSea Docs",
    "keywords": "Class DataResilienceConfiguration This class contains the definition for a data resiliance strategy. Specifically: when to retry and when to circuit break. This class is created as a configuration entry in an array in the DataResilienceStrategies property of the DataConfigurationOptions class. Inheritance System.Object DataResilienceConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DataResilienceConfiguration Properties | Improve this Doc View Source CircuitBreakerFailureCount If a connection or command consistantly fails, the circuit breaker will reject all further connections until one suceeds. This setting determines how many failures (after retries, if retry-able) before blocking all connections apart from a few periodic test attempts. Declaration public int CircuitBreakerFailureCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CircuitBreakerTestInterval If a connection or command fails, the circuit breaker will reject all further connections until one suceeds. This setting determines how long (in milliseonds) the system should wait before allowing a test connection. Declaration public int CircuitBreakerTestInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ResilienceKey Declaration public string ResilienceKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source RetryCount Declaration public int RetryCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RetryInterval This is the number of milliseconds to wait before retrying a “retry-able” connection or command error. Default is 500 ms. This interval may be extended with each retry, depending upon the RetryLengthening setting, up to RetryCount. Declaration public int RetryInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source RetryLengthening If a connection or command fails, this setting determines how much each subsequent retry should be further delayed. Declaration public DataResilienceConfiguration.SequenceLengthening RetryLengthening { get; set; } Property Value Type Description DataResilienceConfiguration.SequenceLengthening Methods | Improve this Doc View Source HandleRetryTimespan(Int32) Declaration public TimeSpan HandleRetryTimespan(int attempt) Parameters Type Name Description System.Int32 attempt Returns Type Description System.TimeSpan"
  },
  "api-sql/ArgentSea.Sql.MapToSqlSmallMoneyAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlSmallMoneyAttribute.html",
    "title": "Class MapToSqlSmallMoneyAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlSmallMoneyAttribute This attribute maps a model property to/from a SQL SmallMoney parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlSmallMoneyAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlSmallMoneyAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlSmallMoneyAttribute(String) Map this property to the specified SmallMoney database column. Declaration public MapToSqlSmallMoneyAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlSmallMoneyAttribute(String, Boolean) Declaration public MapToSqlSmallMoneyAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlDecimalAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlDecimalAttribute.html",
    "title": "Class MapToSqlDecimalAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlDecimalAttribute This attribute maps a model property to/from a SQL Decimal parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlDecimalAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlDecimalAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlDecimalAttribute(String, Byte, Byte) Map this property to the specified decimal database column. Declaration public MapToSqlDecimalAttribute(string parameterName, byte precision, byte scale) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Byte precision The maximum number of digits in the database value. System.Byte scale The number of digits to the right of the decimal point. | Improve this Doc View Source MapToSqlDecimalAttribute(String, Byte, Byte, Boolean) Declaration public MapToSqlDecimalAttribute(string parameterName, byte precision, byte scale, bool isRequired) Parameters Type Name Description System.String parameterName System.Byte precision System.Byte scale System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName | Improve this Doc View Source Precision Declaration public byte Precision { get; } Property Value Type Description System.Byte | Improve this Doc View Source Scale Declaration public byte Scale { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgTimeAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgTimeAttribute.html",
    "title": "Class MapToPgTimeAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgTimeAttribute This attribute maps a model property to/from a PostgreSQL Time parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgTimeAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgTimeAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgTimeAttribute(String) Map this property to the specified Time database column (without Timezone). Declaration public MapToPgTimeAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgTimeAttribute(String, Boolean) Declaration public MapToPgTimeAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.PgShardConnectionConfiguration.html": {
    "href": "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.PgShardConnectionConfiguration.html",
    "title": "Class PgShardConnectionOptions<TShard>.PgShardConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class PgShardConnectionOptions<TShard>.PgShardConnectionConfiguration Inheritance System.Object PgShardConnectionOptions<TShard>.PgShardConnectionConfiguration Implements IShardConnectionConfiguration <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgShardConnectionConfiguration : IShardConnectionConfiguration<TShard> Properties | Improve this Doc View Source ReadConnection Declaration public PgConnectionConfiguration ReadConnection { get; set; } Property Value Type Description PgConnectionConfiguration | Improve this Doc View Source ReadConnectionInternal Declaration public IConnectionConfiguration ReadConnectionInternal { get; } Property Value Type Description IConnectionConfiguration | Improve this Doc View Source ShardId Declaration public TShard ShardId { get; set; } Property Value Type Description TShard | Improve this Doc View Source WriteConnection Declaration public PgConnectionConfiguration WriteConnection { get; set; } Property Value Type Description PgConnectionConfiguration | Improve this Doc View Source WriteConnectionInternal Declaration public IConnectionConfiguration WriteConnectionInternal { get; } Property Value Type Description IConnectionConfiguration Implements IShardConnectionConfiguration<TShard>"
  },
  "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.PgShardConnectionsConfiguration.html": {
    "href": "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.PgShardConnectionsConfiguration.html",
    "title": "Class PgShardConnectionOptions<TShard>.PgShardConnectionsConfiguration | ArgentSea Docs",
    "keywords": "Class PgShardConnectionOptions<TShard>.PgShardConnectionsConfiguration Inheritance System.Object PgShardConnectionOptions<TShard>.PgShardConnectionsConfiguration Implements IShardConnectionsConfiguration <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgShardConnectionsConfiguration : IShardConnectionsConfiguration<TShard> Properties | Improve this Doc View Source Shards Declaration public PgShardConnectionOptions<TShard>.PgShardConnectionConfiguration[] Shards { get; set; } Property Value Type Description PgShardConnectionOptions.PgShardConnectionConfiguration <>[] | Improve this Doc View Source ShardSetName Declaration public string ShardSetName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShardsInternal Declaration public IShardConnectionConfiguration<TShard>[] ShardsInternal { get; } Property Value Type Description IShardConnectionConfiguration <TShard>[] Implements IShardConnectionsConfiguration<TShard>"
  },
  "api/ArgentSea.ShardDataStores-2.ShardInstance.html": {
    "href": "api/ArgentSea.ShardDataStores-2.ShardInstance.html",
    "title": "Class ShardDataStores<TShard, TConfiguration>.ShardInstance | ArgentSea Docs",
    "keywords": "Class ShardDataStores<TShard, TConfiguration>.ShardInstance Inheritance System.Object ShardDataStores<TShard, TConfiguration>.ShardInstance Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class ShardInstance Constructors | Improve this Doc View Source ShardInstance(ShardDataStores<TShard, TConfiguration>, TShard, IConnectionConfiguration, IConnectionConfiguration) Declaration public ShardInstance(ShardDataStores<TShard, TConfiguration> parent, TShard shardId, IConnectionConfiguration readConnection, IConnectionConfiguration writeConnection) Parameters Type Name Description ShardDataStores <TShard, TConfiguration> parent TShard shardId IConnectionConfiguration readConnection IConnectionConfiguration writeConnection Properties | Improve this Doc View Source ReadConnection Declaration public ShardDataStores<TShard, TConfiguration>.DataConnection ReadConnection { get; } Property Value Type Description ShardDataStores.DataConnection <> | Improve this Doc View Source ShardId Declaration public TShard ShardId { get; } Property Value Type Description TShard | Improve this Doc View Source WriteConnection Declaration public ShardDataStores<TShard, TConfiguration>.DataConnection WriteConnection { get; } Property Value Type Description ShardDataStores.DataConnection <>"
  },
  "api-pg/ArgentSea.Pg.MapToPgTimestampAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgTimestampAttribute.html",
    "title": "Class MapToPgTimestampAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgTimestampAttribute This attribute maps a model property to/from a PostgreSQL Timestamp parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgTimestampAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgTimestampAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgTimestampAttribute(String) Map this property to the specified Timestamp database column (without Timezone). Declaration public MapToPgTimestampAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgTimestampAttribute(String, Boolean) Declaration public MapToPgTimestampAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.IDataProviderServiceFactory.html": {
    "href": "api/ArgentSea.IDataProviderServiceFactory.html",
    "title": "Interface IDataProviderServiceFactory | ArgentSea Docs",
    "keywords": "Interface IDataProviderServiceFactory This interface is used by provider specific implementations. It is unlikely that you would reference this in consumer code. The interface defines the capabilities of a database providers service. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IDataProviderServiceFactory Methods | Improve this Doc View Source GetIsErrorTransient(Exception) Declaration bool GetIsErrorTransient(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean | Improve this Doc View Source NewCommand(String, DbConnection) Declaration DbCommand NewCommand(string storedProcedureName, DbConnection connection) Parameters Type Name Description System.String storedProcedureName System.Data.Common.DbConnection connection Returns Type Description System.Data.Common.DbCommand | Improve this Doc View Source NewConnection(String) Declaration DbConnection NewConnection(string connectionString) Parameters Type Name Description System.String connectionString Returns Type Description System.Data.Common.DbConnection | Improve this Doc View Source SetParameters(DbCommand, DbParameterCollection) Declaration void SetParameters(DbCommand cmd, DbParameterCollection parameters) Parameters Type Name Description System.Data.Common.DbCommand cmd System.Data.Common.DbParameterCollection parameters"
  },
  "api-sql/ArgentSea.Sql.MapToSqlUniqueIdentifierAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlUniqueIdentifierAttribute.html",
    "title": "Class MapToSqlUniqueIdentifierAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlUniqueIdentifierAttribute This attribute maps a model property to/from a SQL UniqueIdentifier parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlUniqueIdentifierAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlUniqueIdentifierAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlUniqueIdentifierAttribute(String) Map this property to the specified UniqueIdentifier (Guid) database column. Declaration public MapToSqlUniqueIdentifierAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlUniqueIdentifierAttribute(String, Boolean) Declaration public MapToSqlUniqueIdentifierAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.ShardDataStores-2.html": {
    "href": "api/ArgentSea.ShardDataStores-2.html",
    "title": "Class ShardDataStores<TShard, TConfiguration> | ArgentSea Docs",
    "keywords": "Class ShardDataStores<TShard, TConfiguration> This class is used by provider specific implementations. It is unlikely that you would call this in consumer code. This is the generic class that defines connections for sharded data sets. Inheritance System.Object ShardDataStores<TShard, TConfiguration> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class ShardDataStores<TShard, TConfiguration> where TShard : IComparable where TConfiguration : class, IShardDataConfigurationOptions<TShard>, new() Type Parameters Name Description TShard TConfiguration Constructors | Improve this Doc View Source ShardDataStores(IOptions<TConfiguration>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, IDataProviderServiceFactory, ILogger<ShardDataStores<TShard, TConfiguration>>) Declaration public ShardDataStores(IOptions<TConfiguration> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, IDataProviderServiceFactory dataProviderServices, ILogger<ShardDataStores<TShard, TConfiguration>> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions <TConfiguration> configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions IDataProviderServiceFactory dataProviderServices Microsoft.Extensions.Logging.ILogger < ShardDataStores <TShard, TConfiguration>> logger Properties | Improve this Doc View Source ShardSets Declaration public ShardDataStores<TShard, TConfiguration>.ShardDataSets ShardSets { get; } Property Value Type Description ShardDataStores.ShardDataSets <>"
  },
  "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.SqlShardConnectionsConfiguration.html": {
    "href": "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.SqlShardConnectionsConfiguration.html",
    "title": "Class SqlShardConnectionOptions<TShard>.SqlShardConnectionsConfiguration | ArgentSea Docs",
    "keywords": "Class SqlShardConnectionOptions<TShard>.SqlShardConnectionsConfiguration Inheritance System.Object SqlShardConnectionOptions<TShard>.SqlShardConnectionsConfiguration Implements IShardConnectionsConfiguration <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlShardConnectionsConfiguration : IShardConnectionsConfiguration<TShard> Properties | Improve this Doc View Source Shards Declaration public SqlShardConnectionOptions<TShard>.SqlShardConnectionConfiguration[] Shards { get; set; } Property Value Type Description SqlShardConnectionOptions.SqlShardConnectionConfiguration <>[] | Improve this Doc View Source ShardSetName Declaration public string ShardSetName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShardsInternal Declaration public IShardConnectionConfiguration<TShard>[] ShardsInternal { get; } Property Value Type Description IShardConnectionConfiguration <TShard>[] Implements IShardConnectionsConfiguration<TShard>"
  },
  "api-sql/ArgentSea.Sql.MapToSqlBitAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlBitAttribute.html",
    "title": "Class MapToSqlBitAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlBitAttribute This attribute maps a model property to/from a SQL Bit parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlBitAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlBitAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlBitAttribute(String) Map this property to the specified Bit (boolean) database column. Declaration public MapToSqlBitAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlBitAttribute(String, Boolean) Declaration public MapToSqlBitAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgBigintAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgBigintAttribute.html",
    "title": "Class MapToPgBigintAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgBigintAttribute This attribute maps a model property to/from a PostgreSQL Bigint parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgBigintAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgBigintAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgBigintAttribute(String) Map this property to the specified BigInt (64-bit) database column. Declaration public MapToPgBigintAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgBigintAttribute(String, Boolean) Declaration public MapToPgBigintAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.IShardDataConfigurationOptions-1.html": {
    "href": "api/ArgentSea.IShardDataConfigurationOptions-1.html",
    "title": "Interface IShardDataConfigurationOptions<TShard> | ArgentSea Docs",
    "keywords": "Interface IShardDataConfigurationOptions<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IShardDataConfigurationOptions<TShard> where TShard : IComparable Type Parameters Name Description TShard Properties | Improve this Doc View Source ShardSetsInternal Declaration IShardConnectionsConfiguration<TShard>[] ShardSetsInternal { get; } Property Value Type Description IShardConnectionsConfiguration <TShard>[]"
  },
  "api-sql/ArgentSea.Sql.MapToSqlNCharAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlNCharAttribute.html",
    "title": "Class MapToSqlNCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlNCharAttribute This attribute maps a model property to/from a SQL NChar parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlNCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlNCharAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlNCharAttribute(String, Int32) Map this property to the specified Unicode fixed-size database column. Declaration public MapToSqlNCharAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The length of the fixed-size string. | Improve this Doc View Source MapToSqlNCharAttribute(String, Int32, Boolean) Declaration public MapToSqlNCharAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgTimeTzAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgTimeTzAttribute.html",
    "title": "Class MapToPgTimeTzAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgTimeTzAttribute This attribute maps a model property to/from a PostgreSQL TimeTz parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgTimeTzAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgTimeTzAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgTimeTzAttribute(String) Map this property to the specified Time database column (without Timezone). Declaration public MapToPgTimeTzAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgTimeTzAttribute(String, Boolean) Declaration public MapToPgTimeTzAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.UnexpectedSqlResultException.html": {
    "href": "api/ArgentSea.UnexpectedSqlResultException.html",
    "title": "Class UnexpectedSqlResultException | ArgentSea Docs",
    "keywords": "Class UnexpectedSqlResultException The exception is thrown when an output parameter is expected, but not found, when ExecuteQueryToValueAsync is invoked. Inheritance System.Object System.Exception UnexpectedSqlResultException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public sealed class UnexpectedSqlResultException : Exception, ISerializable Constructors | Improve this Doc View Source UnexpectedSqlResultException() Initializes a new instance of the UnexpectedSqlResultException class with no error message. Declaration public UnexpectedSqlResultException() | Improve this Doc View Source UnexpectedSqlResultException(String) Initializes a new instance of the UnexpectedSqlResultException class with a specified error message. Declaration public UnexpectedSqlResultException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source UnexpectedSqlResultException(String, Exception) Initializes a new instance of the UnexpectedSqlResultException class. Declaration public UnexpectedSqlResultException(string message, Exception innerException) Parameters Type Name Description System.String message The message that describes the error. System.Exception innerException The exception that is the cause of the current exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/ArgentSea.DataSecurityOptions.html": {
    "href": "api/ArgentSea.DataSecurityOptions.html",
    "title": "Class DataSecurityOptions | ArgentSea Docs",
    "keywords": "Class DataSecurityOptions This options class contains an array of SecurityConfiguration (login information). A connection can specify as particular login account by referencing a SecurityKey. Inheritance System.Object DataSecurityOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DataSecurityOptions Examples For example, you might configure your usersecrets.json like this: \"Credentials\": [ { \"SecurityKey\": \"0\", \"UserName\": \"user\", \"Password\": \"123456\" }, { \"SecurityKey\": \"1\", \"WindowsAuth\": true, }, { \"SecurityKey\": \"2\", \"UserName\": \"account\", \"Password\": \"7890\" } Properties | Improve this Doc View Source Credentials Declaration public SecurityConfiguration[] Credentials { get; set; } Property Value Type Description SecurityConfiguration []"
  },
  "api-sql/ArgentSea.Sql.MapToSqlBinaryAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlBinaryAttribute.html",
    "title": "Class MapToSqlBinaryAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlBinaryAttribute This attribute maps a model property to/from a SQL Binary parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlBinaryAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlBinaryAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlBinaryAttribute(String, Int32) Map this property to the specified fixed-size Binary database column. Declaration public MapToSqlBinaryAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The size of the binary value. | Improve this Doc View Source MapToSqlBinaryAttribute(String, Int32, Boolean) Map this property to the specified fixed-size Binary database column. Declaration public MapToSqlBinaryAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The size of the binary value. System.Boolean isRequired When true, set the entire model instance to null if the parameter or column is db null. Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.SqlDbConnectionConfiguration.html": {
    "href": "api-sql/ArgentSea.Sql.SqlDbConnectionConfiguration.html",
    "title": "Class SqlDbConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class SqlDbConnectionConfiguration Inheritance System.Object SqlDbConnectionConfiguration Implements IDbConnectionConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlDbConnectionConfiguration : IDbConnectionConfiguration Properties | Improve this Doc View Source DatabaseKey Declaration public string DatabaseKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source DataConnection Declaration public SqlConnectionConfiguration DataConnection { get; set; } Property Value Type Description SqlConnectionConfiguration | Improve this Doc View Source DataConnectionInternal Declaration public IConnectionConfiguration DataConnectionInternal { get; } Property Value Type Description IConnectionConfiguration Implements IDbConnectionConfiguration"
  },
  "api/ArgentSea.ShardChild-3.html": {
    "href": "api/ArgentSea.ShardChild-3.html",
    "title": "Struct ShardChild<TShard, TRecord, TChild> | ArgentSea Docs",
    "keywords": "Struct ShardChild<TShard, TRecord, TChild> Immutable class representing a sharded record with a database compound key. The ShardChild consist of the (virtual) shardId, the recordId, and the childId. Implements System.IEquatable < ShardChild <TShard, TRecord, TChild>> Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public struct ShardChild<TShard, TRecord, TChild> : IEquatable<ShardChild<TShard, TRecord, TChild>> where TShard : IComparable where TRecord : IComparable where TChild : IComparable Type Parameters Name Description TShard TRecord TChild Constructors | Improve this Doc View Source ShardChild(DataOrigin, TShard, TRecord, TChild) Declaration public ShardChild(DataOrigin origin, TShard shardId, TRecord recordId, TChild childRecordId) Parameters Type Name Description DataOrigin origin TShard shardId TRecord recordId TChild childRecordId | Improve this Doc View Source ShardChild(ShardKey<TShard, TRecord>, TChild) Declaration public ShardChild(ShardKey<TShard, TRecord> key, TChild childRecordId) Parameters Type Name Description ShardKey <TShard, TRecord> key TChild childRecordId | Improve this Doc View Source ShardChild(Char, TShard, TRecord, TChild) Declaration public ShardChild(char dataOrigin, TShard shardId, TRecord recordId, TChild childId) Parameters Type Name Description System.Char dataOrigin TShard shardId TRecord recordId TChild childId Properties | Improve this Doc View Source ChildId Declaration public TChild ChildId { get; } Property Value Type Description TChild | Improve this Doc View Source Empty Declaration public static ShardChild<TShard, TRecord, TChild> Empty { get; } Property Value Type Description ShardChild <TShard, TRecord, TChild> | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Key Declaration public ShardKey<TShard, TRecord> Key { get; } Property Value Type Description ShardKey <TShard, TRecord> | Improve this Doc View Source Origin Declaration public DataOrigin Origin { get; } Property Value Type Description DataOrigin | Improve this Doc View Source RecordId Declaration public TRecord RecordId { get; } Property Value Type Description TRecord | Improve this Doc View Source ShardId Declaration public TShard ShardId { get; } Property Value Type Description TShard Methods | Improve this Doc View Source Equals(ShardChild<TShard, TRecord, TChild>) Declaration public bool Equals(ShardChild<TShard, TRecord, TChild> other) Parameters Type Name Description ShardChild <TShard, TRecord, TChild> other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source FromExternalString(String) Declaration public static ShardChild<TShard, TRecord, TChild> FromExternalString(string value) Parameters Type Name Description System.String value Returns Type Description ShardChild <TShard, TRecord, TChild> | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToExternalString() Serializes ShardChild data into a URL-safe string with a checksum, optionally including a concurrency stamp. Declaration public string ToExternalString() Returns Type Description System.String A URL-safe string that can be re-serialized into a shard child. | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Equality(ShardChild<TShard, TRecord, TChild>, ShardChild<TShard, TRecord, TChild>) Declaration public static bool operator ==(ShardChild<TShard, TRecord, TChild> sc1, ShardChild<TShard, TRecord, TChild> sc2) Parameters Type Name Description ShardChild <TShard, TRecord, TChild> sc1 ShardChild <TShard, TRecord, TChild> sc2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(ShardChild<TShard, TRecord, TChild>, ShardChild<TShard, TRecord, TChild>) Declaration public static bool operator !=(ShardChild<TShard, TRecord, TChild> sc1, ShardChild<TShard, TRecord, TChild> sc2) Parameters Type Name Description ShardChild <TShard, TRecord, TChild> sc1 ShardChild <TShard, TRecord, TChild> sc2 Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/ArgentSea.DbDataStores-1.DataConnection.html": {
    "href": "api/ArgentSea.DbDataStores-1.DataConnection.html",
    "title": "Class DbDataStores<TConfiguration>.DataConnection | ArgentSea Docs",
    "keywords": "Class DbDataStores<TConfiguration>.DataConnection Inheritance System.Object DbDataStores<TConfiguration>.DataConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DataConnection Properties | Improve this Doc View Source ConnectionString Declaration public string ConnectionString { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ListAsync<TResult>(String, DbParameterCollection, CancellationToken) Connect to the database and return the values as a list of objects. Declaration public Task<IList<TResult>> ListAsync<TResult>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TResult : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IList <TResult>> A list containing an object for each data row. Type Parameters Name Description TResult The type of object to be listed. | Improve this Doc View Source LookupAsync<TValue>(String, DbParameterCollection, CancellationToken) Connect to the database and return a single value. Declaration public Task<TValue> LookupAsync<TValue>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the value. System.Data.Common.DbParameterCollection parameters A parameters collction. Input parameters may be used to find the parameter; will return the value of the first output (or input/output) parameter. If TValue is an int, will also return the sproc return value. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TValue> The retrieved value. Type Parameters Name Description TValue The expected type of the return value. | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, QueryResultModelHandler<Int32, Object, TModel>, Boolean, CancellationToken) Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, QueryResultModelHandler<int, object, TModel> resultHandler, bool isTopOne, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters QueryResultModelHandler < System.Int32 , System.Object , TModel> resultHandler System.Boolean isTopOne System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding output parameters. Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel The type of the object to be returned. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TReaderResult7 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TReaderResult7 The eighth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TArg, TModel>(String, DbParameterCollection, QueryResultModelHandler<Int32, TArg, TModel>, Boolean, TArg, CancellationToken) Declaration public Task<TModel> QueryAsync<TArg, TModel>(string sprocName, DbParameterCollection parameters, QueryResultModelHandler<int, TArg, TModel> resultHandler, bool isTopOne, TArg optionalArgument, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters QueryResultModelHandler < System.Int32 , TArg, TModel> resultHandler System.Boolean isTopOne TArg optionalArgument System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TArg TModel | Improve this Doc View Source QueryAsync<TModel, TReaderResult, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult The data reader result set will be mapped an object or property of this type. If TOutParmaters is set to Mapper.DummyType then this must be a single row result of type TModel. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source RunAsync(String, DbParameterCollection, CancellationToken) Declaration public Task RunAsync(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "api/ArgentSea.ShardKey-2.html": {
    "href": "api/ArgentSea.ShardKey-2.html",
    "title": "Struct ShardKey<TShard, TRecord> | ArgentSea Docs",
    "keywords": "Struct ShardKey<TShard, TRecord> Immutable class representing a sharded record with a “compound” key: the (virtual) shardId and the (database) recordId. Implements System.IEquatable < ShardKey <TShard, TRecord>> Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public struct ShardKey<TShard, TRecord> : IEquatable<ShardKey<TShard, TRecord>> where TShard : IComparable where TRecord : IComparable Type Parameters Name Description TShard TRecord Constructors | Improve this Doc View Source ShardKey(DataOrigin, TShard, TRecord) Declaration public ShardKey(DataOrigin origin, TShard shardId, TRecord recordId) Parameters Type Name Description DataOrigin origin TShard shardId TRecord recordId | Improve this Doc View Source ShardKey(Char, TShard, TRecord) Declaration public ShardKey(char dataOrigin, TShard shardId, TRecord recordId) Parameters Type Name Description System.Char dataOrigin TShard shardId TRecord recordId Properties | Improve this Doc View Source Empty Declaration public static ShardKey<TShard, TRecord> Empty { get; } Property Value Type Description ShardKey <TShard, TRecord> | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Origin Declaration public DataOrigin Origin { get; } Property Value Type Description DataOrigin | Improve this Doc View Source RecordId Declaration public TRecord RecordId { get; } Property Value Type Description TRecord | Improve this Doc View Source ShardId Declaration public TShard ShardId { get; } Property Value Type Description TShard Methods | Improve this Doc View Source Equals(ShardKey<TShard, TRecord>) Declaration public bool Equals(ShardKey<TShard, TRecord> other) Parameters Type Name Description ShardKey <TShard, TRecord> other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source FromExternalString(String) Declaration public static ShardKey<TShard, TRecord> FromExternalString(string value) Parameters Type Name Description System.String value Returns Type Description ShardKey <TShard, TRecord> | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToExternalString() Serializes ShardKey data into a URL-safe string with a checksum Declaration public string ToExternalString() Returns Type Description System.String A string which includes the concurrency stamp if defined and includeConcurrencyStamp is true, otherwise returns a smaller string . | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Equality(ShardKey<TShard, TRecord>, ShardKey<TShard, TRecord>) Declaration public static bool operator ==(ShardKey<TShard, TRecord> sk1, ShardKey<TShard, TRecord> sk2) Parameters Type Name Description ShardKey <TShard, TRecord> sk1 ShardKey <TShard, TRecord> sk2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(ShardKey<TShard, TRecord>, ShardKey<TShard, TRecord>) Declaration public static bool operator !=(ShardKey<TShard, TRecord> sk1, ShardKey<TShard, TRecord> sk2) Parameters Type Name Description ShardKey <TShard, TRecord> sk1 ShardKey <TShard, TRecord> sk2 Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api/ArgentSea.ShardDataStores-2.DataConnection.html": {
    "href": "api/ArgentSea.ShardDataStores-2.DataConnection.html",
    "title": "Class ShardDataStores<TShard, TConfiguration>.DataConnection | ArgentSea Docs",
    "keywords": "Class ShardDataStores<TShard, TConfiguration>.DataConnection Inheritance System.Object ShardDataStores<TShard, TConfiguration>.DataConnection Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DataConnection Properties | Improve this Doc View Source ConnectionString Declaration public string ConnectionString { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ListAsync<TResult>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return the values as a list of objects. Declaration public Task<IList<TResult>> ListAsync<TResult>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TResult : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IList <TResult>> A list containing an object for each data row. Type Parameters Name Description TResult The type of object to be listed. | Improve this Doc View Source ListAsync<TResult>(String, DbParameterCollection, CancellationToken) Connect to the database and return the values as a list of objects. Declaration public Task<IList<TResult>> ListAsync<TResult>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TResult : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IList <TResult>> A list containing an object for each data row. Type Parameters Name Description TResult The type of object to be listed. | Improve this Doc View Source LookupAsync<TValue>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return a single value. Declaration public Task<TValue> LookupAsync<TValue>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the value. System.Data.Common.DbParameterCollection parameters A parameters collction. Input parameters may be used to find the parameter; will return the value of the first output (or input/output) parameter. If TValue is an int, will also return the sproc return value. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TValue> The retrieved value. Type Parameters Name Description TValue The expected type of the return value. | Improve this Doc View Source LookupAsync<TValue>(String, DbParameterCollection, CancellationToken) Connect to the database and return a single value. Declaration public Task<TValue> LookupAsync<TValue>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the value. System.Data.Common.DbParameterCollection parameters A parameters collction. Input parameters may be used to find the parameter; will return the value of the first output (or input/output) parameter. If TValue is an int, will also return the sproc return value. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TValue> The retrieved value. Type Parameters Name Description TValue The expected type of the return value. | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, QueryResultModelHandler<TShard, Object, TModel>, Boolean, CancellationToken) Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, QueryResultModelHandler<TShard, object, TModel> resultHandler, bool isTopOne, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters QueryResultModelHandler <TShard, System.Object , TModel> resultHandler System.Boolean isTopOne System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, Int32, QueryResultModelHandler<TShard, Object, TModel>, Boolean, CancellationToken) Connect to the database and send the result to a custom handler for processing. Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, QueryResultModelHandler<TShard, object, TModel> resultHandler, bool isTopOne, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. QueryResultModelHandler <TShard, System.Object , TModel> resultHandler System.Boolean isTopOne If only one result is expected from the data ready, set to true. This is a mild optimization. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> The object created by the delegate handler. Type Parameters Name Description TModel This is the expected return type of the query. | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding output parameters. Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel The type of the object to be returned. | Improve this Doc View Source QueryAsync<TModel>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding output parameters. Declaration public Task<TModel> QueryAsync<TModel>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel The type of the object to be returned. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TReaderResult7 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TReaderResult7 The eighth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TReaderResult7 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TReaderResult7 The eighth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TArg, TModel>(String, DbParameterCollection, QueryResultModelHandler<TShard, TArg, TModel>, Boolean, TArg, CancellationToken) Declaration public Task<TModel> QueryAsync<TArg, TModel>(string sprocName, DbParameterCollection parameters, QueryResultModelHandler<TShard, TArg, TModel> resultHandler, bool isTopOne, TArg optionalArgument, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters QueryResultModelHandler <TShard, TArg, TModel> resultHandler System.Boolean isTopOne TArg optionalArgument System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TArg TModel | Improve this Doc View Source QueryAsync<TArg, TModel>(String, DbParameterCollection, Int32, QueryResultModelHandler<TShard, TArg, TModel>, Boolean, TArg, CancellationToken) Declaration public Task<TModel> QueryAsync<TArg, TModel>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, QueryResultModelHandler<TShard, TArg, TModel> resultHandler, bool isTopOne, TArg optionalArgument, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters System.Int32 shardParameterOrdinal QueryResultModelHandler <TShard, TArg, TModel> resultHandler System.Boolean isTopOne TArg optionalArgument System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TArg TModel | Improve this Doc View Source QueryAsync<TModel, TReaderResult, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult The data reader result set will be mapped an object or property of this type. If TOutParmaters is set to Mapper.DummyType then this must be a single row result of type TModel. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult The data reader result set will be mapped an object or property of this type. If TOutParmaters is set to Mapper.DummyType then this must be a single row result of type TModel. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(String, DbParameterCollection, Int32, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Int32 shardParameterOrdinal The ordinal position of a parameter that should be automatically set to the current shard number value. If there is no such parameter, set to -1. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(String, DbParameterCollection, CancellationToken) Connect to the database and return an object of the specified type built from the corresponding data reader results and/or output parameters. Declaration public Task<TModel> QueryAsync<TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TOutParameters>(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TOutParameters : class, new() Parameters Type Name Description System.String sprocName The stored procedure to call to fetch the data. System.Data.Common.DbParameterCollection parameters The query parameters. System.Threading.CancellationToken cancellationToken A token to cancel the asynchronous operation. Returns Type Description System.Threading.Tasks.Task <TModel> Type Parameters Name Description TModel This is the expected return type of the query. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. TReaderResult1 The second result set from data reader will be mapped an object or property of this type.. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. TOutParameters This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source RunAsync(String, DbParameterCollection, Int32, CancellationToken) Declaration public Task RunAsync(string sprocName, DbParameterCollection parameters, int shardParameterOrdinal, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters System.Int32 shardParameterOrdinal System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source RunAsync(String, DbParameterCollection, CancellationToken) Declaration public Task RunAsync(string sprocName, DbParameterCollection parameters, CancellationToken cancellationToken) Parameters Type Name Description System.String sprocName System.Data.Common.DbParameterCollection parameters System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task"
  },
  "api-sql/ArgentSea.Sql.SqlConnectionConfiguration.html": {
    "href": "api-sql/ArgentSea.Sql.SqlConnectionConfiguration.html",
    "title": "Class SqlConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class SqlConnectionConfiguration This class represents is a (non-sharded) database connection. Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match as key in the DataResilienceOptions array. If the ResilienceKey is not defined, a default data resilience strategy will be used. Inheritance System.Object DataConnectionConfiguration SqlConnectionConfiguration Implements IConnectionConfiguration Inherited Members DataConnectionConfiguration.hasConnectionPropertyChanged DataConnectionConfiguration.SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions) DataConnectionConfiguration.GetResilienceStrategy(ILogger) DataConnectionConfiguration.GetSecurityConfiguration() DataConnectionConfiguration.SecurityKey DataConnectionConfiguration.ResilienceKey System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlConnectionConfiguration : DataConnectionConfiguration, IConnectionConfiguration Properties | Improve this Doc View Source ApplicationIntent Declares the application workload type when connecting to a database in an SQL Server Availability Group. Declaration public ApplicationIntent ApplicationIntent { get; set; } Property Value Type Description System.Data.SqlClient.ApplicationIntent | Improve this Doc View Source ApplicationName The optional application name parameter to be sent to the backend during connection initiation. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ConnectionDescription Declaration public override string ConnectionDescription { get; } Property Value Type Description System.String Overrides DataConnectionConfiguration.ConnectionDescription | Improve this Doc View Source ConnectRetryCount The number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures. Declaration public int ConnectRetryCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ConnectRetryInterval Amount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds. Declaration public int ConnectRetryInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ConnectTimeout Gets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error. Declaration public int ConnectTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CurrentLanguage Gets or sets the SQL Server Language record name. Declaration public string CurrentLanguage { get; set; } Property Value Type Description System.String | Improve this Doc View Source DataSource Gets or sets the name or network address of the instance of SQL Server to connect to. Declaration public string DataSource { get; set; } Property Value Type Description System.String | Improve this Doc View Source Encrypt Gets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed. Declaration public bool Encrypt { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FailoverPartner Gets or sets the name or address of the partner server to connect to if the primary server is down. Declaration public string FailoverPartner { get; set; } Property Value Type Description System.String | Improve this Doc View Source InitialCatalog Gets or sets the name of the database associated with the connection. Declaration public string InitialCatalog { get; set; } Property Value Type Description System.String | Improve this Doc View Source LoadBalanceTimeout Gets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed. Declaration public int LoadBalanceTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxPoolSize Gets or sets the maximum number of connections allowed in the connection pool for this specific connection string. Declaration public int MaxPoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MinPoolSize Gets or sets the minimum number of connections allowed in the connection pool for this specific connection string. Declaration public int MinPoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MultipleActiveResultSets When true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection. Declaration public bool MultipleActiveResultSets { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MultiSubnetFailover If your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server. Declaration public bool MultiSubnetFailover { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PacketSize Gets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server. Declaration public int PacketSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PersistSecurityInfo Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state. Declaration public bool PersistSecurityInfo { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pooling Gets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested. Declaration public bool Pooling { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Replication Gets or sets a Boolean value that indicates whether replication is supported using the connection. Declaration public bool Replication { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TrustServerCertificate Gets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust. Declaration public bool TrustServerCertificate { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TypeSystemVersion Gets or sets a string value that indicates the type system the application expects. Declaration public string TypeSystemVersion { get; set; } Property Value Type Description System.String | Improve this Doc View Source WorkstationID Gets or sets the name of the workstation connecting to SQL Server. Declaration public string WorkstationID { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Add(KeyValuePair<String, Object>) Adds an item to the configuration Declaration public void Add(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item | Improve this Doc View Source ContainsKey(String) Determines whether the configuration contains a specific key. Declaration public bool ContainsKey(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean | Improve this Doc View Source GetConnectionString() Declaration public override string GetConnectionString() Returns Type Description System.String Overrides DataConnectionConfiguration.GetConnectionString() | Improve this Doc View Source Remove(KeyValuePair<String, Object>) Removes the entry from the configuration instance. Declaration public void Remove(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item | Improve this Doc View Source Remove(String) Removes the entry from the configuration instance. Declaration public void Remove(string key) Parameters Type Name Description System.String key | Improve this Doc View Source TryGetValue(String, out Object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description System.String key System.Object value Returns Type Description System.Boolean Implements IConnectionConfiguration"
  },
  "api/ArgentSea.ShardDataStores-2.ShardDataSet.html": {
    "href": "api/ArgentSea.ShardDataStores-2.ShardDataSet.html",
    "title": "Class ShardDataStores<TShard, TConfiguration>.ShardDataSet | ArgentSea Docs",
    "keywords": "Class ShardDataStores<TShard, TConfiguration>.ShardDataSet Inheritance System.Object ShardDataStores<TShard, TConfiguration>.ShardDataSet Implements System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class ShardDataSet : ICollection, IEnumerable Constructors | Improve this Doc View Source ShardDataSet(ShardDataStores<TShard, TConfiguration>, IShardConnectionsConfiguration<TShard>) Declaration public ShardDataSet(ShardDataStores<TShard, TConfiguration> parent, IShardConnectionsConfiguration<TShard> config) Parameters Type Name Description ShardDataStores <TShard, TConfiguration> parent IShardConnectionsConfiguration <TShard> config Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[TShard] Declaration public ShardDataStores<TShard, TConfiguration>.ShardInstance this[TShard shardId] { get; } Parameters Type Name Description TShard shardId Property Value Type Description ShardDataStores.ShardInstance <> | Improve this Doc View Source Key Declaration public string Key { get; set; } Property Value Type Description System.String | Improve this Doc View Source SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description System.Array array System.Int32 index | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description System.Collections.IEnumerator | Improve this Doc View Source QueryAllAsync<TModel>(String, TShard[], DbParameterCollection, Int32, QueryResultModelHandler<TShard, Object, TModel>, CancellationToken) Declaration public Task<List<TModel>> QueryAllAsync<TModel>(string sprocName, TShard[] exclude, DbParameterCollection parameters, int shardIdParameterIndex, QueryResultModelHandler<TShard, object, TModel> resultHandler, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName TShard[] exclude System.Data.Common.DbParameterCollection parameters System.Int32 shardIdParameterIndex QueryResultModelHandler <TShard, System.Object , TModel> resultHandler System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TModel>> Type Parameters Name Description TModel | Improve this Doc View Source QueryAllAsync<TArg, TModel>(String, TShard[], DbParameterCollection, Int32, QueryResultModelHandler<TShard, TArg, TModel>, TArg, CancellationToken) Declaration public Task<List<TModel>> QueryAllAsync<TArg, TModel>(string sprocName, TShard[] exclude, DbParameterCollection parameters, int shardIdParameterIndex, QueryResultModelHandler<TShard, TArg, TModel> resultHandler, TArg dataObject, CancellationToken cancellationToken) where TModel : class, new() Parameters Type Name Description System.String sprocName TShard[] exclude System.Data.Common.DbParameterCollection parameters System.Int32 shardIdParameterIndex QueryResultModelHandler <TShard, TArg, TModel> resultHandler TArg dataObject System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.List <TModel>> Type Parameters Name Description TArg TModel | Improve this Doc View Source QueryFirstAsync<TArg, TResult>(String, TShard[], DbParameterCollection, Int32, QueryResultModelHandler<TShard, TArg, TResult>, TArg, CancellationToken) Declaration public Task<TResult> QueryFirstAsync<TArg, TResult>(string sprocName, TShard[] exclude, DbParameterCollection parameters, int shardIdParameterIndex, QueryResultModelHandler<TShard, TArg, TResult> resultHandler, TArg dataObject, CancellationToken cancellationToken) where TResult : class, new() Parameters Type Name Description System.String sprocName TShard[] exclude System.Data.Common.DbParameterCollection parameters System.Int32 shardIdParameterIndex QueryResultModelHandler <TShard, TArg, TResult> resultHandler TArg dataObject System.Threading.CancellationToken cancellationToken Returns Type Description System.Threading.Tasks.Task <TResult> Type Parameters Name Description TArg TResult Implements System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/ArgentSea.MapToModel.html": {
    "href": "api/ArgentSea.MapToModel.html",
    "title": "Class MapToModel | ArgentSea Docs",
    "keywords": "Class MapToModel Inheritance System.Object System.Attribute MapToModel Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = false, AllowMultiple = false)] public class MapToModel : Attribute"
  },
  "api-sql/ArgentSea.Sql.MapToSqlSmallIntAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlSmallIntAttribute.html",
    "title": "Class MapToSqlSmallIntAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlSmallIntAttribute This attribute maps a model property to/from a SQL SmallInt parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlSmallIntAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlSmallIntAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlSmallIntAttribute(String) Map this property to the specified SmallInt (16-bit) database column. Declaration public MapToSqlSmallIntAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlSmallIntAttribute(String, Boolean) Declaration public MapToSqlSmallIntAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgUuidAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgUuidAttribute.html",
    "title": "Class MapToPgUuidAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgUuidAttribute This attribute maps a model property to/from a PostgreSQL Uuid parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgUuidAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgUuidAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgUuidAttribute(String) Map this property to the specified UniqueIdentifier (Guid) database column. Declaration public MapToPgUuidAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgUuidAttribute(String, Boolean) Declaration public MapToPgUuidAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.ShardDataStores-2.ShardInstance.DataAccess.html": {
    "href": "api/ArgentSea.ShardDataStores-2.ShardInstance.DataAccess.html",
    "title": "Enum ShardDataStores<TShard, TConfiguration>.ShardInstance.DataAccess | ArgentSea Docs",
    "keywords": "Enum ShardDataStores<TShard, TConfiguration>.ShardInstance.DataAccess Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public enum DataAccess Fields Name Description ReadOnly WriteAccess"
  },
  "api-pg/ArgentSea.Pg.MapToPgTimestampTzAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgTimestampTzAttribute.html",
    "title": "Class MapToPgTimestampTzAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgTimestampTzAttribute This attribute maps a model property to/from a PostgreSQL TimestampTz parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgTimestampTzAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgTimestampTzAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgTimestampTzAttribute(String) Map this property to the specified Timestamp database column (with Timezone). Declaration public MapToPgTimestampTzAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgTimestampTzAttribute(String, Boolean) Declaration public MapToPgTimestampTzAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.html": {
    "href": "api-pg/ArgentSea.Pg.html",
    "title": "Namespace ArgentSea.Pg | ArgentSea Docs",
    "keywords": "Namespace ArgentSea.Pg Classes DataProviderServiceFactory This class is a provider-specific resouce to enable provider-neutral code to execute. It is unlikely that you would reference this in consumer code. MapToPgArrayAttribute This attribute maps a model property to/from a PostgreSQL Array parameter or column. MapToPgBigintAttribute This attribute maps a model property to/from a PostgreSQL Bigint parameter or column. MapToPgBooleanAttribute This attribute maps a model property to/from a PostgreSQL Boolean parameter or column. MapToPgByteaAttribute This attribute maps a model property to/from a PostgreSQL Byteea parameter or column. MapToPgCharAttribute This attribute maps a model property to/from a PostgreSQL Char parameter or column. MapToPgDateAttribute This attribute maps a model property to/from a PostgreSQL Date parameter or column. MapToPgDoubleAttribute This attribute maps a model property to/from a PostgreSQL Double parameter or column. MapToPgHstoreAttribute This attribute maps a model property to/from a PostgreSQL Hstore parameter or column. MapToPgIntegerAttribute This attribute maps a model property to/from a PostgreSQL Integer parameter or column. MapToPgInternalCharAttribute This attribute maps a model property to/from a PostgreSQL InternalChar parameter or column. MapToPgIntervalAttribute This attribute maps a model property to/from a PostgreSQL Interval parameter or column. MapToPgMoneyAttribute This attribute maps a model property to/from a PostgreSQL Money parameter or column. MapToPgNumericAttribute This attribute maps a model property to/from a PostgreSQL Numeric parameter or column. MapToPgRealAttribute This attribute maps a model property to/from a PostgreSQL Real parameter or column. MapToPgSmallintAttribute This attribute maps a model property to/from a PostgreSQL Smallint parameter or column. MapToPgTextAttribute This attribute maps a model property to/from a PostgreSQL Text parameter or column. MapToPgTimeAttribute This attribute maps a model property to/from a PostgreSQL Time parameter or column. MapToPgTimestampAttribute This attribute maps a model property to/from a PostgreSQL Timestamp parameter or column. MapToPgTimestampTzAttribute This attribute maps a model property to/from a PostgreSQL TimestampTz parameter or column. MapToPgTimeTzAttribute This attribute maps a model property to/from a PostgreSQL TimeTz parameter or column. MapToPgUuidAttribute This attribute maps a model property to/from a PostgreSQL Uuid parameter or column. MapToPgVarCharAttribute This attribute maps a model property to/from a PostgreSQL VarChar parameter or column. PgConnectionConfiguration This class represents is a (non-sharded) database connection. Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match as key in the DataResilienceOptions array. If the ResilienceKey is not defined, a default data resilience strategy will be used. PgDatabases This class manages the non-sharded SQL database connections. PgDbConnectionConfiguration PgDbConnectionOptions This configuration class defines an array of database connection configurations . For example, you might configure your appsettings.json like this: \"PgDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"Host\": \"localhost\", \"Database\": \"MyDb\" } } ] Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match a key in the DataResilienceOptions array. PgParameterCollectionExtensions This class adds extension methods which simplify setting PostgreSQL parameter values from .NET types. PgParameterMapAttribute This abstract class is a PostgreSQL-specific implementation of the ParameterMapAttribute class. PgShardConnectionOptions<TShard> This options class contains the shard dataset configuration information. PgShardConnectionOptions<TShard>.PgShardConnectionConfiguration PgShardConnectionOptions<TShard>.PgShardConnectionsConfiguration PgShardSets<TShard> This configuration class contains the configuration information for a shard set."
  },
  "api/ArgentSea.StringExtensions.html": {
    "href": "api/ArgentSea.StringExtensions.html",
    "title": "Class StringExtensions | ArgentSea Docs",
    "keywords": "Class StringExtensions This static class contains extension methods for cleaning input strings of invalid characters. It does NOT sanitize input strings for protection against injection attacks (your parmemeterized queries should protect against that). Inheritance System.Object StringExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source CleanInput(String) Removes leading/trailing whitespace, control charactors (cr, lf, tab, etc.), and emojis from input string. Declaration public static string CleanInput(this string value) Parameters Type Name Description System.String value Input string, resumably provided by user. Returns Type Description System.String Input string with undesired characters removed. | Improve this Doc View Source CleanInput(String, StringExtensions.InputCleaningOptions) Declaration public static string CleanInput(this string value, StringExtensions.InputCleaningOptions flags) Parameters Type Name Description System.String value StringExtensions.InputCleaningOptions flags Returns Type Description System.String"
  },
  "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.SqlShardConnectionConfiguration.html": {
    "href": "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.SqlShardConnectionConfiguration.html",
    "title": "Class SqlShardConnectionOptions<TShard>.SqlShardConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class SqlShardConnectionOptions<TShard>.SqlShardConnectionConfiguration Inheritance System.Object SqlShardConnectionOptions<TShard>.SqlShardConnectionConfiguration Implements IShardConnectionConfiguration <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlShardConnectionConfiguration : IShardConnectionConfiguration<TShard> Properties | Improve this Doc View Source ReadConnection Declaration public SqlConnectionConfiguration ReadConnection { get; set; } Property Value Type Description SqlConnectionConfiguration | Improve this Doc View Source ReadConnectionInternal Declaration public IConnectionConfiguration ReadConnectionInternal { get; } Property Value Type Description IConnectionConfiguration | Improve this Doc View Source ShardId Declaration public TShard ShardId { get; set; } Property Value Type Description TShard | Improve this Doc View Source WriteConnection Declaration public SqlConnectionConfiguration WriteConnection { get; set; } Property Value Type Description SqlConnectionConfiguration | Improve this Doc View Source WriteConnectionInternal Declaration public IConnectionConfiguration WriteConnectionInternal { get; } Property Value Type Description IConnectionConfiguration Implements IShardConnectionConfiguration<TShard>"
  },
  "api/ArgentSea.InvalidMapTypeException.html": {
    "href": "api/ArgentSea.InvalidMapTypeException.html",
    "title": "Class InvalidMapTypeException | ArgentSea Docs",
    "keywords": "Class InvalidMapTypeException This exception is raise when a model property has a database mapping attribute that is not of the correct type. Inheritance System.Object System.Exception InvalidMapTypeException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public sealed class InvalidMapTypeException : Exception, ISerializable Examples An attempt to map a string property to an integer parameter would generate this error. Constructors | Improve this Doc View Source InvalidMapTypeException() Initializes a new instance of the InvalidMapTypeException class with no error message. Declaration public InvalidMapTypeException() | Improve this Doc View Source InvalidMapTypeException(PropertyInfo, Int32) Initializes a new instance of the InvalidMapTypeException class. Declaration public InvalidMapTypeException(PropertyInfo property, int sqlType) Parameters Type Name Description System.Reflection.PropertyInfo property The property decorated with the mapping attribute. System.Int32 sqlType The stored procedure parameter type (int, not enum, due to provider discrepancies). | Improve this Doc View Source InvalidMapTypeException(String) Initializes a new instance of the InvalidMapTypeException class with a specified error message. Declaration public InvalidMapTypeException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source InvalidMapTypeException(String, Exception) Initializes a new instance of the InvalidMapTypeException class. Declaration public InvalidMapTypeException(string message, Exception innerException) Parameters Type Name Description System.String message The message that describes the error. System.Exception innerException The exception that is the cause of the current exception. | Improve this Doc View Source InvalidMapTypeException(String, Type, Int32) Declaration public InvalidMapTypeException(string variableName, Type type, int sqlType) Parameters Type Name Description System.String variableName System.Type type System.Int32 sqlType Implements System.Runtime.Serialization.ISerializable"
  },
  "api/ArgentSea.Test.html": {
    "href": "api/ArgentSea.Test.html",
    "title": "Namespace ArgentSea.Test | ArgentSea Docs",
    "keywords": "Namespace ArgentSea.Test Classes ShardSerializationTests StringExtensionTests"
  },
  "api-sql/ArgentSea.Sql.MapToSqlMoneyAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlMoneyAttribute.html",
    "title": "Class MapToSqlMoneyAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlMoneyAttribute This attribute maps a model property to/from a SQL Money parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlMoneyAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlMoneyAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlMoneyAttribute(String) Map this property to the specified Money database column. Declaration public MapToSqlMoneyAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlMoneyAttribute(String, Boolean) Declaration public MapToSqlMoneyAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.Test.StringExtensionTests.html": {
    "href": "api/ArgentSea.Test.StringExtensionTests.html",
    "title": "Class StringExtensionTests | ArgentSea Docs",
    "keywords": "Class StringExtensionTests Inheritance System.Object StringExtensionTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Test Assembly : ArgentSea.Test.dll Syntax public class StringExtensionTests Methods | Improve this Doc View Source TestEmojiLineStringCleaning() Declaration [Fact] public void TestEmojiLineStringCleaning() | Improve this Doc View Source TestEmojiTwoLineEndStringCleaning() Declaration [Fact] public void TestEmojiTwoLineEndStringCleaning() | Improve this Doc View Source TestNormalStringCleaning() Declaration [Fact] public void TestNormalStringCleaning() | Improve this Doc View Source TestNornalEmojiStringCleaning() Declaration [Fact] public void TestNornalEmojiStringCleaning() | Improve this Doc View Source TestTwoLineEmojiStringCleaning() Declaration [Fact] public void TestTwoLineEmojiStringCleaning() | Improve this Doc View Source TestWhitespaceStringCleaning() Declaration [Fact] public void TestWhitespaceStringCleaning()"
  },
  "api-pg/ArgentSea.Pg.MapToPgDateAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgDateAttribute.html",
    "title": "Class MapToPgDateAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgDateAttribute This attribute maps a model property to/from a PostgreSQL Date parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgDateAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgDateAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgDateAttribute(String) Map this property to the specified Date database column. Declaration public MapToPgDateAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgDateAttribute(String, Boolean) Declaration public MapToPgDateAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.DataResilienceOptions.html": {
    "href": "api/ArgentSea.DataResilienceOptions.html",
    "title": "Class DataResilienceOptions | ArgentSea Docs",
    "keywords": "Class DataResilienceOptions This options class contains an array of resilience strategies (retry and circuit breaking settings). To specify as particular resilience strategy, a connection can specify a ResilienceKey. Inheritance System.Object DataResilienceOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DataResilienceOptions Examples For example, you might configure your appsettings.json like this: \"ResilienceStrategies\": [ { \"ResilienceKey\": \"remote\", \"RetryCount\": \"6\", \"RetryInterval\": \"250\", \"RetryLengthening\": \"Finonacci\", \"CircuitBreakerFailureCount\": \"20\", \"CircuitBreakerTestInterval\": \"5000\" }, { \"ResilienceKey\": \"local\", \"RetryCount\": \"6\", \"RetryInterval\": \"150\", \"RetryLengthening\": \"Linear\", \"CircuitBreakerFailureCount\": \"10\", \"CircuitBreakerTestInterval\": \"5000\" } ] Properties | Improve this Doc View Source DataResilienceStrategies Declaration public DataResilienceConfiguration[] DataResilienceStrategies { get; set; } Property Value Type Description DataResilienceConfiguration []"
  },
  "api-pg/ArgentSea.Pg.MapToPgInternalCharAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgInternalCharAttribute.html",
    "title": "Class MapToPgInternalCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgInternalCharAttribute This attribute maps a model property to/from a PostgreSQL InternalChar parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgInternalCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgInternalCharAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgInternalCharAttribute(String) Map this property to the specified TinyInt (unsigned 8-bit) database column. Declaration public MapToPgInternalCharAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgInternalCharAttribute(String, Boolean) Declaration public MapToPgInternalCharAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlVarBinaryAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlVarBinaryAttribute.html",
    "title": "Class MapToSqlVarBinaryAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlVarBinaryAttribute This attribute maps a model property to/from a SQL VarBinary parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlVarBinaryAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlVarBinaryAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlVarBinaryAttribute(String, Int32) Map this property to the specified VarBinary database column. Declaration public MapToSqlVarBinaryAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The maximum length of the binary value or blob. Set to -1 for VarBinary(max). | Improve this Doc View Source MapToSqlVarBinaryAttribute(String, Int32, Boolean) Declaration public MapToSqlVarBinaryAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.LoggingExtensions.EventIdentifier.html": {
    "href": "api/ArgentSea.LoggingExtensions.EventIdentifier.html",
    "title": "Enum LoggingExtensions.EventIdentifier | ArgentSea Docs",
    "keywords": "Enum LoggingExtensions.EventIdentifier Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public enum EventIdentifier Fields Name Description LogCircuitBreakerOff LogCircuitBreakerOn LogCircuitBreakerTest LogCmdExecuted LogCommandRetry LogConnectRetry LogExpressionTreeCreation MapperGetOutTrace MapperInParameterCacheStatus MapperInTrace MapperRdrTrace MapperReaderCacheStatus MapperReadOutParameterCacheStatus MapperResultsReaderInvalid MapperSetOutParameterCache MapperSetOutParameterCacheStatus MapperSetOutTrace MapperShardChildNull MapperShardKeyNull MapperSqlColumnNotFound MapperSqlParameterNotFound RequiredPropertyIsDbNull"
  },
  "api-pg/ArgentSea.Pg.PgParameterMapAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.PgParameterMapAttribute.html",
    "title": "Class PgParameterMapAttribute | ArgentSea Docs",
    "keywords": "Class PgParameterMapAttribute This abstract class is a PostgreSQL-specific implementation of the ParameterMapAttribute class. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgArrayAttribute MapToPgBigintAttribute MapToPgBooleanAttribute MapToPgByteaAttribute MapToPgCharAttribute MapToPgDateAttribute MapToPgDoubleAttribute MapToPgHstoreAttribute MapToPgIntegerAttribute MapToPgInternalCharAttribute MapToPgIntervalAttribute MapToPgMoneyAttribute MapToPgNumericAttribute MapToPgRealAttribute MapToPgSmallintAttribute MapToPgTextAttribute MapToPgTimeAttribute MapToPgTimestampAttribute MapToPgTimestampTzAttribute MapToPgTimeTzAttribute MapToPgUuidAttribute MapToPgVarCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired ParameterMapAttribute.IsValidType(Type) ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, Int32, Type, ParameterExpression, ILogger) System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public abstract class PgParameterMapAttribute : ParameterMapAttribute Constructors | Improve this Doc View Source PgParameterMapAttribute(String, NpgsqlDbType) Declaration public PgParameterMapAttribute(string parameterName, NpgsqlDbType pgType) Parameters Type Name Description System.String parameterName NpgsqlTypes.NpgsqlDbType pgType | Improve this Doc View Source PgParameterMapAttribute(String, NpgsqlDbType, Boolean) Declaration public PgParameterMapAttribute(string parameterName, NpgsqlDbType pgType, bool isRequired) Parameters Type Name Description System.String parameterName NpgsqlTypes.NpgsqlDbType pgType System.Boolean isRequired"
  },
  "api/ArgentSea.Test.ShardSerializationTests.html": {
    "href": "api/ArgentSea.Test.ShardSerializationTests.html",
    "title": "Class ShardSerializationTests | ArgentSea Docs",
    "keywords": "Class ShardSerializationTests Inheritance System.Object ShardSerializationTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Test Assembly : ArgentSea.Test.dll Syntax public class ShardSerializationTests Methods | Improve this Doc View Source TestShardChildSerializationInts() Declaration [Fact] public void TestShardChildSerializationInts() | Improve this Doc View Source TestShardKeySerializationFloat() Declaration [Fact] public void TestShardKeySerializationFloat() | Improve this Doc View Source TestShardKeySerializationInts1() Declaration [Fact] public void TestShardKeySerializationInts1() | Improve this Doc View Source TestShardKeySerializationInts2() Declaration [Fact] public void TestShardKeySerializationInts2() | Improve this Doc View Source TestShardKeySerializationMore1() Declaration [Fact] public void TestShardKeySerializationMore1() | Improve this Doc View Source TestShardKeySerializationMore2() Declaration [Fact] public void TestShardKeySerializationMore2() | Improve this Doc View Source TestShardKeySerializationStr() Declaration [Fact] public void TestShardKeySerializationStr()"
  },
  "api/ArgentSea.DataConnectionConfiguration.html": {
    "href": "api/ArgentSea.DataConnectionConfiguration.html",
    "title": "Class DataConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class DataConnectionConfiguration Abstract class implementing the data connection functionality shared by PostgreSQL and SQL Server implementations. Inheritance System.Object DataConnectionConfiguration Implements IConnectionConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public abstract class DataConnectionConfiguration : IConnectionConfiguration Fields | Improve this Doc View Source hasConnectionPropertyChanged Declaration protected bool hasConnectionPropertyChanged Field Value Type Description System.Boolean Properties | Improve this Doc View Source ConnectionDescription Declaration public abstract string ConnectionDescription { get; } Property Value Type Description System.String | Improve this Doc View Source ResilienceKey Declaration public string ResilienceKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source SecurityKey Declaration public string SecurityKey { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetConnectionString() Declaration public abstract string GetConnectionString() Returns Type Description System.String | Improve this Doc View Source GetResilienceStrategy(ILogger) Declaration protected DataResilienceConfiguration GetResilienceStrategy(ILogger logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger Returns Type Description DataResilienceConfiguration | Improve this Doc View Source GetSecurityConfiguration() Declaration protected SecurityConfiguration GetSecurityConfiguration() Returns Type Description SecurityConfiguration | Improve this Doc View Source SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions) Declaration public void SetConfigurationOptions(DataSecurityOptions securityOptions, DataResilienceOptions resilienceStrategiesOptions) Parameters Type Name Description DataSecurityOptions securityOptions DataResilienceOptions resilienceStrategiesOptions Implements IConnectionConfiguration"
  },
  "api/ArgentSea.DataResilienceConfiguration.SequenceLengthening.html": {
    "href": "api/ArgentSea.DataResilienceConfiguration.SequenceLengthening.html",
    "title": "Enum DataResilienceConfiguration.SequenceLengthening | ArgentSea Docs",
    "keywords": "Enum DataResilienceConfiguration.SequenceLengthening Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public enum SequenceLengthening Fields Name Description Fibonacci HalfSquare Linear Squaring"
  },
  "api-sql/ArgentSea.Sql.MapToSqlDateTimeAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlDateTimeAttribute.html",
    "title": "Class MapToSqlDateTimeAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlDateTimeAttribute This attribute maps a model property to/from a SQL DateTime parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlDateTimeAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlDateTimeAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlDateTimeAttribute(String) Map this property to the specified DateTime database column. Declaration public MapToSqlDateTimeAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlDateTimeAttribute(String, Boolean) Declaration public MapToSqlDateTimeAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgTextAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgTextAttribute.html",
    "title": "Class MapToPgTextAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgTextAttribute This attribute maps a model property to/from a PostgreSQL Text parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgTextAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgTextAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgTextAttribute(String) Map this property to the specified Unicode database column, with any size length. Declaration public MapToPgTextAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix ':' as needed. | Improve this Doc View Source MapToPgTextAttribute(String, Boolean) Declaration public MapToPgTextAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmPgRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmPgRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.IShardConnectionConfiguration-1.html": {
    "href": "api/ArgentSea.IShardConnectionConfiguration-1.html",
    "title": "Interface IShardConnectionConfiguration<TShard> | ArgentSea Docs",
    "keywords": "Interface IShardConnectionConfiguration<TShard> This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IShardConnectionConfiguration<TShard> where TShard : IComparable Type Parameters Name Description TShard Properties | Improve this Doc View Source ReadConnectionInternal Declaration IConnectionConfiguration ReadConnectionInternal { get; } Property Value Type Description IConnectionConfiguration | Improve this Doc View Source ShardId Declaration TShard ShardId { get; set; } Property Value Type Description TShard | Improve this Doc View Source WriteConnectionInternal Declaration IConnectionConfiguration WriteConnectionInternal { get; } Property Value Type Description IConnectionConfiguration"
  },
  "api-pg/ArgentSea.Pg.MapToPgCharAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgCharAttribute.html",
    "title": "Class MapToPgCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgCharAttribute This attribute maps a model property to/from a PostgreSQL Char parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgCharAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgCharAttribute(String, Int32) Map this property to the specified Unicode fixed-size database column. Declaration public MapToPgCharAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix ':' as needed. System.Int32 length The length of the fixed-size string. | Improve this Doc View Source MapToPgCharAttribute(String, Int32, Boolean) Declaration public MapToPgCharAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.RetryLimitExceededException.html": {
    "href": "api/ArgentSea.RetryLimitExceededException.html",
    "title": "Class RetryLimitExceededException | ArgentSea Docs",
    "keywords": "Class RetryLimitExceededException This exception is raise when a transient failure occurs, but automatic retries were not successful. Inheritance System.Object System.Exception RetryLimitExceededException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public sealed class RetryLimitExceededException : Exception, ISerializable Constructors | Improve this Doc View Source RetryLimitExceededException() Initializes a new instance of the RetryLimitExceededException class with no error message. Declaration public RetryLimitExceededException() | Improve this Doc View Source RetryLimitExceededException(String) Initializes a new instance of the RetryLimitExceededException class with a specified error message. Declaration public RetryLimitExceededException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source RetryLimitExceededException(String, Exception) Initializes a new instance of the RetryLimitExceededException class. Declaration public RetryLimitExceededException(string message, Exception innerException) Parameters Type Name Description System.String message The message that describes the error. System.Exception innerException The exception that is the cause of the current exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/ArgentSea.ExpressionHelpers.html": {
    "href": "api/ArgentSea.ExpressionHelpers.html",
    "title": "Class ExpressionHelpers | ArgentSea Docs",
    "keywords": "Class ExpressionHelpers This class is used by provider specific implementations. It is unlikely that you would reference this in consumer code. Inheritance System.Object ExpressionHelpers Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public static class ExpressionHelpers Methods | Improve this Doc View Source InParameterEnumXIntExpressionBuilder(String, Type, String, Type, IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration public static void InParameterEnumXIntExpressionBuilder(string parameterName, Type staticType, string addMethodName, Type nullableBaseType, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression propValue, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type staticType System.String addMethodName System.Type nullableBaseType System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression propValue System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source InParameterSimpleBuilder(String, Type, ParameterExpression, ParameterExpression, Expression, IList<Expression>, Type, String, ConstantExpression, ConstantExpression, HashSet<String>, ParameterExpression, ILogger) Declaration public static void InParameterSimpleBuilder(string parameterName, Type propertyType, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, Expression expProperty, IList<Expression> expressions, Type staticType, string addMethod, ConstantExpression thirdArg, ConstantExpression forthArg, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type propertyType System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Type staticType System.String addMethod System.Linq.Expressions.ConstantExpression thirdArg System.Linq.Expressions.ConstantExpression forthArg System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source InParameterStringExpressionBuilder(String, Int32, Type, String, ConstantExpression, IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration public static void InParameterStringExpressionBuilder(string parameterName, int length, Type staticType, string methodName, ConstantExpression expLocale, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression propValue, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Int32 length System.Type staticType System.String methodName System.Linq.Expressions.ConstantExpression expLocale System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression propValue System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source InParmHelper(String, ParameterExpression, Expression, Type, String, ConstantExpression, ConstantExpression, ParameterExpression) Declaration public static Expression InParmHelper(string parameterName, ParameterExpression expSprocParameters, Expression propValue, Type staticType, string addMethod, ConstantExpression thirdArg, ConstantExpression forthArg, ParameterExpression expIgnoreParameters) Parameters Type Name Description System.String parameterName System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.Expression propValue System.Type staticType System.String addMethod System.Linq.Expressions.ConstantExpression thirdArg System.Linq.Expressions.ConstantExpression forthArg System.Linq.Expressions.ParameterExpression expIgnoreParameters Returns Type Description System.Linq.Expressions.Expression | Improve this Doc View Source OutParameterBuilder(String, ParameterExpression, IList<Expression>, Type, String, ConstantExpression, ConstantExpression, HashSet<String>, ParameterExpression, ILogger) Declaration public static void OutParameterBuilder(string parameterName, ParameterExpression expSprocParameters, IList<Expression> expressions, Type staticType, string addMethod, ConstantExpression secondArg, ConstantExpression thirdArg, HashSet<string> parameterNames, ParameterExpression expIgnoreParameters, ILogger logger) Parameters Type Name Description System.String parameterName System.Linq.Expressions.ParameterExpression expSprocParameters System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Type staticType System.String addMethod System.Linq.Expressions.ConstantExpression secondArg System.Linq.Expressions.ConstantExpression thirdArg System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expIgnoreParameters Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReaderEnumXIntExpressions(String, Expression, Type, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration public static void ReaderEnumXIntExpressions(string columnName, Expression expProperty, Type baseType, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String columnName System.Linq.Expressions.Expression expProperty System.Type baseType System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReaderNullableValueTypeExpressions(String, Expression, ConstantExpression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration public static void ReaderNullableValueTypeExpressions(string columnName, Expression expProperty, ConstantExpression expNullResult, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String columnName System.Linq.Expressions.Expression expProperty System.Linq.Expressions.ConstantExpression expNullResult System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReaderSimpleValueExpressions(String, Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration public static void ReaderSimpleValueExpressions(string columnName, Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String columnName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReaderStringExpressions(String, Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration public static void ReaderStringExpressions(string columnName, Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String columnName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReadOutParameterBinaryExpressions(String, Type, String, Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration public static void ReadOutParameterBinaryExpressions(string parameterName, Type staticType, string getMethodName, Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type staticType System.String getMethodName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReadOutParameterEnumXIntExpressions(String, Type, String, String, Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration public static void ReadOutParameterEnumXIntExpressions(string parameterName, Type staticType, string getMethodName, string nullableGetMethodName, Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type staticType System.String getMethodName System.String nullableGetMethodName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReadOutParameterSimpleValueExpressions(String, Type, String, String, Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration public static void ReadOutParameterSimpleValueExpressions(string parameterName, Type staticType, string getMethodName, string nullableGetMethodName, Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type staticType System.String getMethodName System.String nullableGetMethodName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source ReadOutParameterStringExpressions(String, Type, String, Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration public static void ReadOutParameterStringExpressions(string parameterName, Type staticType, string getMethodName, Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.String parameterName System.Type staticType System.String getMethodName System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger"
  },
  "api/ArgentSea.StringExtensions.InputCleaningOptions.html": {
    "href": "api/ArgentSea.StringExtensions.InputCleaningOptions.html",
    "title": "Enum StringExtensions.InputCleaningOptions | ArgentSea Docs",
    "keywords": "Enum StringExtensions.InputCleaningOptions Namespace : ArgentSea Assembly : ArgentSea.dll Syntax [Flags] public enum InputCleaningOptions Fields Name Description AllowEmojis Do not remove Unicode surrogate values, like Emoji. AllowMultiline All “control” characters are removed by default; setting this flag preserve keep CrLf and/or Cr. It also ensures Windows line endings (Cr+Lf) when encountering Lf only (Unix line endings). CleanAll Remove starting and trailing whitespace, “control” characters including Lf and Cr, and extended characters like Emoji icons."
  },
  "api/ArgentSea.IDbDataConfigurationOptions.html": {
    "href": "api/ArgentSea.IDbDataConfigurationOptions.html",
    "title": "Interface IDbDataConfigurationOptions | ArgentSea Docs",
    "keywords": "Interface IDbDataConfigurationOptions This interface is used by provider specific implementations. It is unlikely that you would implement this in consumer code. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public interface IDbDataConfigurationOptions Properties | Improve this Doc View Source DbConnectionsInternal Declaration IDbConnectionConfiguration[] DbConnectionsInternal { get; } Property Value Type Description IDbConnectionConfiguration []"
  },
  "api-sql/ArgentSea.Sql.html": {
    "href": "api-sql/ArgentSea.Sql.html",
    "title": "Namespace ArgentSea.Sql | ArgentSea Docs",
    "keywords": "Namespace ArgentSea.Sql Classes DataProviderServiceFactory This class is a provider-specific resouce to enable provider-neutral code to execute. It is unlikely that you would reference this in consumer code. MapToSqlBigIntAttribute This attribute maps a model property to/from a SQL BigInt parameter or column. MapToSqlBinaryAttribute This attribute maps a model property to/from a SQL Binary parameter or column. MapToSqlBitAttribute This attribute maps a model property to/from a SQL Bit parameter or column. MapToSqlCharAttribute This attribute maps a model property to/from a SQL Char parameter or column. MapToSqlDateAttribute This attribute maps a model property to/from a SQL Date parameter or column. MapToSqlDateTime2Attribute This attribute maps a model property to/from a SQL DateTime2 parameter or column. MapToSqlDateTimeAttribute This attribute maps a model property to/from a SQL DateTime parameter or column. MapToSqlDateTimeOffsetAttribute This attribute maps a model property to/from a SQL DateTimeOffset parameter or column. MapToSqlDecimalAttribute This attribute maps a model property to/from a SQL Decimal parameter or column. MapToSqlFloatAttribute This attribute maps a model property to/from a SQL Float parameter or column. MapToSqlIntAttribute This attribute maps a model property to/from a SQL Int parameter or column. MapToSqlMoneyAttribute This attribute maps a model property to/from a SQL Money parameter or column. MapToSqlNCharAttribute This attribute maps a model property to/from a SQL NChar parameter or column. MapToSqlNVarCharAttribute This attribute maps a model property to/from a SQL NVarChar parameter or column. MapToSqlRealAttribute This attribute maps a model property to/from a SQL Real parameter or column. MapToSqlSmallIntAttribute This attribute maps a model property to/from a SQL SmallInt parameter or column. MapToSqlSmallMoneyAttribute This attribute maps a model property to/from a SQL SmallMoney parameter or column. MapToSqlTimeAttribute This attribute maps a model property to/from a SQL Time parameter or column. MapToSqlTinyIntAttribute This attribute maps a model property to/from a SQL TinyInt parameter or column. MapToSqlUniqueIdentifierAttribute This attribute maps a model property to/from a SQL UniqueIdentifier parameter or column. MapToSqlVarBinaryAttribute This attribute maps a model property to/from a SQL VarBinary parameter or column. MapToSqlVarCharAttribute This attributes maps a model property to/from a SQL VarChar parameter or column. SqlConnectionConfiguration This class represents is a (non-sharded) database connection. Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match as key in the DataResilienceOptions array. If the ResilienceKey is not defined, a default data resilience strategy will be used. SqlDatabases This class manages the non-sharded SQL database connections. SqlDbConnectionConfiguration SqlDbConnectionOptions This configuration class defines an array of database SqlConnectionConfiguration . For example, you might configure your appsettings.json like this: \"SqlDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"DataSource\": \"localhost\", \"InitialCatalog\": \"MyDb\" } } ] Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match a key in the DataResilienceOptions array. SqlLoggingExtensions This static class provides the logging extension methods for handling table-valued parameter (TVP) mapping. SqlParameterCollectionExtensions This class adds extension methods which simplify setting SQL parameter values from .NET types. SqlParameterMapAttribute This abstract class is a SQL-specific implementation of the ParameterMapAttribute class. SqlShardConnectionOptions<TShard> This options class contains the shard dataset configuration information. SqlShardConnectionOptions<TShard>.SqlShardConnectionConfiguration SqlShardConnectionOptions<TShard>.SqlShardConnectionsConfiguration SqlShardSets<TShard> This configuration class contains the configuration information for a shard set. TvpMapper This class adds the ability to map model properties to SQL table-valued parameters. Enums SqlLoggingExtensions.SqlEventIdentifier"
  },
  "api/ArgentSea.MultipleMapAttributesException.html": {
    "href": "api/ArgentSea.MultipleMapAttributesException.html",
    "title": "Class MultipleMapAttributesException | ArgentSea Docs",
    "keywords": "Class MultipleMapAttributesException This exception is invoked if a model property has multiple mapping attributes. A single value cannot be mapped to/from multiple parameters or columns. This exception is not raised in the case of ShardKey > or ShardChild properties. Inheritance System.Object System.Exception MultipleMapAttributesException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public sealed class MultipleMapAttributesException : Exception, ISerializable Constructors | Improve this Doc View Source MultipleMapAttributesException() Initializes a new instance of the MultipleMapAttributesException class with no error message. Declaration public MultipleMapAttributesException() | Improve this Doc View Source MultipleMapAttributesException(PropertyInfo) Initializes a new instance of the MultipleMapAttributesException class. Declaration public MultipleMapAttributesException(PropertyInfo property) Parameters Type Name Description System.Reflection.PropertyInfo property The property that is decorated with multiple mapping attributes. | Improve this Doc View Source MultipleMapAttributesException(String) Initializes a new instance of the MultipleMapAttributesException class with a specified error message. Declaration public MultipleMapAttributesException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source MultipleMapAttributesException(String, Exception) Initializes a new instance of the MultipleMapAttributesException class. Declaration public MultipleMapAttributesException(string message, Exception innerException) Parameters Type Name Description System.String message The message that describes the error. System.Exception innerException The exception that is the cause of the current exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api-pg/ArgentSea.Pg.MapToPgArrayAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgArrayAttribute.html",
    "title": "Class MapToPgArrayAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgArrayAttribute This attribute maps a model property to/from a PostgreSQL Array parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgArrayAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgArrayAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgArrayAttribute(String) Declaration public MapToPgArrayAttribute(string parameterName) Parameters Type Name Description System.String parameterName | Improve this Doc View Source MapToPgArrayAttribute(String, Boolean) Declaration public MapToPgArrayAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.MapShardChildAttribute.html": {
    "href": "api/ArgentSea.MapShardChildAttribute.html",
    "title": "Class MapShardChildAttribute | ArgentSea Docs",
    "keywords": "Class MapShardChildAttribute Inheritance System.Object System.Attribute MapShardChildAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class MapShardChildAttribute : Attribute Constructors | Improve this Doc View Source MapShardChildAttribute(DataOrigin, String, String) Declaration public MapShardChildAttribute(DataOrigin origin, string recordIdName, string childIdName) Parameters Type Name Description DataOrigin origin System.String recordIdName System.String childIdName | Improve this Doc View Source MapShardChildAttribute(DataOrigin, String, String, String) Declaration public MapShardChildAttribute(DataOrigin origin, string shardIdName, string recordIdName, string childIdName) Parameters Type Name Description DataOrigin origin System.String shardIdName System.String recordIdName System.String childIdName | Improve this Doc View Source MapShardChildAttribute(Char, String, String) Declaration public MapShardChildAttribute(char originValue, string recordIdName, string childIdName) Parameters Type Name Description System.Char originValue System.String recordIdName System.String childIdName | Improve this Doc View Source MapShardChildAttribute(Char, String, String, String) Declaration public MapShardChildAttribute(char originValue, string shardIdName, string recordIdName, string childIdName) Parameters Type Name Description System.Char originValue System.String shardIdName System.String recordIdName System.String childIdName Properties | Improve this Doc View Source ChildIdName Declaration public virtual string ChildIdName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Origin Declaration public DataOrigin Origin { get; set; } Property Value Type Description DataOrigin | Improve this Doc View Source RecordIdName Declaration public virtual string RecordIdName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShardIdName Declaration public virtual string ShardIdName { get; set; } Property Value Type Description System.String"
  },
  "api-pg/ArgentSea.Pg.MapToPgIntegerAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgIntegerAttribute.html",
    "title": "Class MapToPgIntegerAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgIntegerAttribute This attribute maps a model property to/from a PostgreSQL Integer parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgIntegerAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgIntegerAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgIntegerAttribute(String) Map this property to the specified Int (32-bit) database column. Declaration public MapToPgIntegerAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgIntegerAttribute(String, Boolean) Declaration public MapToPgIntegerAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.Mapper.DummyType.html": {
    "href": "api/ArgentSea.Mapper.DummyType.html",
    "title": "Class Mapper.DummyType | ArgentSea Docs",
    "keywords": "Class Mapper.DummyType Inheritance System.Object Mapper.DummyType Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DummyType"
  },
  "api-sql/ArgentSea.Sql.MapToSqlRealAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlRealAttribute.html",
    "title": "Class MapToSqlRealAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlRealAttribute This attribute maps a model property to/from a SQL Real parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlRealAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlRealAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlRealAttribute(String) Map this property to the specified Real (32-bit floating point or .NET float) database column. Declaration public MapToSqlRealAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlRealAttribute(String, Boolean) Declaration public MapToSqlRealAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgRealAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgRealAttribute.html",
    "title": "Class MapToPgRealAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgRealAttribute This attribute maps a model property to/from a PostgreSQL Real parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgRealAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgRealAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgRealAttribute(String) Map this property to the specified Real (32-bit floating point or .NET float) database column. Declaration public MapToPgRealAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgRealAttribute(String, Boolean) Declaration public MapToPgRealAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgBooleanAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgBooleanAttribute.html",
    "title": "Class MapToPgBooleanAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgBooleanAttribute This attribute maps a model property to/from a PostgreSQL Boolean parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgBooleanAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgBooleanAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgBooleanAttribute(String) Map this property to the specified Bit (boolean) database column. Declaration public MapToPgBooleanAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgBooleanAttribute(String, Boolean) Declaration public MapToPgBooleanAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlDateTimeOffsetAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlDateTimeOffsetAttribute.html",
    "title": "Class MapToSqlDateTimeOffsetAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlDateTimeOffsetAttribute This attribute maps a model property to/from a SQL DateTimeOffset parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlDateTimeOffsetAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlDateTimeOffsetAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlDateTimeOffsetAttribute(String) Map this property to the specified DateTimeOffset database column. Declaration public MapToSqlDateTimeOffsetAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlDateTimeOffsetAttribute(String, Boolean) Declaration public MapToSqlDateTimeOffsetAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgSmallintAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgSmallintAttribute.html",
    "title": "Class MapToPgSmallintAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgSmallintAttribute This attribute maps a model property to/from a PostgreSQL Smallint parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgSmallintAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgSmallintAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgSmallintAttribute(String) Map this property to the specified SmallInt (16-bit) database column. Declaration public MapToPgSmallintAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgSmallintAttribute(String, Boolean) Declaration public MapToPgSmallintAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgByteaAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgByteaAttribute.html",
    "title": "Class MapToPgByteaAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgByteaAttribute This attribute maps a model property to/from a PostgreSQL Byteea parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgByteaAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgByteaAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgByteaAttribute(String, Int32) Declaration public MapToPgByteaAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName System.Int32 length | Improve this Doc View Source MapToPgByteaAttribute(String, Int32, Boolean) Declaration public MapToPgByteaAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.MapShardKeyAttribute.html": {
    "href": "api/ArgentSea.MapShardKeyAttribute.html",
    "title": "Class MapShardKeyAttribute | ArgentSea Docs",
    "keywords": "Class MapShardKeyAttribute Inheritance System.Object System.Attribute MapShardKeyAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class MapShardKeyAttribute : Attribute Constructors | Improve this Doc View Source MapShardKeyAttribute(DataOrigin, String) Declaration public MapShardKeyAttribute(DataOrigin origin, string recordIdName) Parameters Type Name Description DataOrigin origin System.String recordIdName | Improve this Doc View Source MapShardKeyAttribute(DataOrigin, String, String) Declaration public MapShardKeyAttribute(DataOrigin origin, string shardIdName, string recordIdName) Parameters Type Name Description DataOrigin origin System.String shardIdName System.String recordIdName | Improve this Doc View Source MapShardKeyAttribute(Char, String) Declaration public MapShardKeyAttribute(char originValue, string recordIdName) Parameters Type Name Description System.Char originValue System.String recordIdName | Improve this Doc View Source MapShardKeyAttribute(Char, String, String) Declaration public MapShardKeyAttribute(char originValue, string shardIdName, string recordIdName) Parameters Type Name Description System.Char originValue System.String shardIdName System.String recordIdName Properties | Improve this Doc View Source Origin Declaration public DataOrigin Origin { get; set; } Property Value Type Description DataOrigin | Improve this Doc View Source RecordIdName Declaration public virtual string RecordIdName { get; set; } Property Value Type Description System.String | Improve this Doc View Source ShardIdName Declaration public virtual string ShardIdName { get; set; } Property Value Type Description System.String"
  },
  "api/ArgentSea.DbDataStores-1.html": {
    "href": "api/ArgentSea.DbDataStores-1.html",
    "title": "Class DbDataStores<TConfiguration> | ArgentSea Docs",
    "keywords": "Class DbDataStores<TConfiguration> This class is used by provider specific implementations. It is unlikely that you would reference this in consumer code. This generic class manages non-sharded database connections. Inheritance System.Object DbDataStores<TConfiguration> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DbDataStores<TConfiguration> where TConfiguration : class, IDbDataConfigurationOptions, new() Type Parameters Name Description TConfiguration The provider-specific connection implementation. Constructors | Improve this Doc View Source DbDataStores(IOptions<TConfiguration>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, IDataProviderServiceFactory, ILogger<DbDataStores<TConfiguration>>) Declaration public DbDataStores(IOptions<TConfiguration> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, IDataProviderServiceFactory dataProviderServices, ILogger<DbDataStores<TConfiguration>> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions <TConfiguration> configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions IDataProviderServiceFactory dataProviderServices Microsoft.Extensions.Logging.ILogger < DbDataStores <TConfiguration>> logger Properties | Improve this Doc View Source DbConnections Declaration public DbDataStores<TConfiguration>.DbDataSets DbConnections { get; } Property Value Type Description DbDataStores.DbDataSets <>"
  },
  "api-pg/ArgentSea.Pg.MapToPgVarCharAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgVarCharAttribute.html",
    "title": "Class MapToPgVarCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgVarCharAttribute This attribute maps a model property to/from a PostgreSQL VarChar parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgVarCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgVarCharAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgVarCharAttribute(String, Int32) Map this property to the specified Unicode database column, with a variable but maximum length. Declaration public MapToPgVarCharAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix ':' as needed. System.Int32 length The maximum length of the string. | Improve this Doc View Source MapToPgVarCharAttribute(String, Int32, Boolean) Declaration public MapToPgVarCharAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlDateTime2Attribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlDateTime2Attribute.html",
    "title": "Class MapToSqlDateTime2Attribute | ArgentSea Docs",
    "keywords": "Class MapToSqlDateTime2Attribute This attribute maps a model property to/from a SQL DateTime2 parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlDateTime2Attribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlDateTime2Attribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlDateTime2Attribute(String) Map this property to the specified DateTime2 database column. Declaration public MapToSqlDateTime2Attribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlDateTime2Attribute(String, Boolean) Declaration public MapToSqlDateTime2Attribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.DbDataStores-1.DbDataSets.html": {
    "href": "api/ArgentSea.DbDataStores-1.DbDataSets.html",
    "title": "Class DbDataStores<TConfiguration>.DbDataSets | ArgentSea Docs",
    "keywords": "Class DbDataStores<TConfiguration>.DbDataSets Inheritance System.Object DbDataStores<TConfiguration>.DbDataSets Implements System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class DbDataSets : ICollection, IEnumerable Constructors | Improve this Doc View Source DbDataSets(DbDataStores<TConfiguration>, IDbConnectionConfiguration[]) Declaration public DbDataSets(DbDataStores<TConfiguration> parent, IDbConnectionConfiguration[] config) Parameters Type Name Description DbDataStores <TConfiguration> parent IDbConnectionConfiguration [] config Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[String] Declaration public DbDataStores<TConfiguration>.DataConnection this[string key] { get; } Parameters Type Name Description System.String key Property Value Type Description DbDataStores.DataConnection <> | Improve this Doc View Source SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description System.Array array System.Int32 index | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/ArgentSea.ShardDataStores-2.ShardDataSets.html": {
    "href": "api/ArgentSea.ShardDataStores-2.ShardDataSets.html",
    "title": "Class ShardDataStores<TShard, TConfiguration>.ShardDataSets | ArgentSea Docs",
    "keywords": "Class ShardDataStores<TShard, TConfiguration>.ShardDataSets Inheritance System.Object ShardDataStores<TShard, TConfiguration>.ShardDataSets Implements System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class ShardDataSets : ICollection, IEnumerable Constructors | Improve this Doc View Source ShardDataSets(ShardDataStores<TShard, TConfiguration>, IShardConnectionsConfiguration<TShard>[]) Declaration public ShardDataSets(ShardDataStores<TShard, TConfiguration> parent, IShardConnectionsConfiguration<TShard>[] config) Parameters Type Name Description ShardDataStores <TShard, TConfiguration> parent IShardConnectionsConfiguration <TShard>[] config Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsSynchronized Declaration public bool IsSynchronized { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Item[String] Declaration public ShardDataStores<TShard, TConfiguration>.ShardDataSet this[string key] { get; } Parameters Type Name Description System.String key Property Value Type Description ShardDataStores.ShardDataSet <> | Improve this Doc View Source SyncRoot Declaration public object SyncRoot { get; } Property Value Type Description System.Object Methods | Improve this Doc View Source CopyTo(Array, Int32) Declaration public void CopyTo(Array array, int index) Parameters Type Name Description System.Array array System.Int32 index | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/ArgentSea.Mapper.html": {
    "href": "api/ArgentSea.Mapper.html",
    "title": "Class Mapper | ArgentSea Docs",
    "keywords": "Class Mapper This static class contains the logic for mapping database parameters to/from properties. Inheritance System.Object Mapper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public static class Mapper Methods | Improve this Doc View Source FromDataReader<TModel>(DbDataReader, ILogger) Accepts a data reader object and returns a list of objects of the specified type, one for each record. Declaration public static IList<TModel> FromDataReader<TModel>(DbDataReader rdr, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbDataReader rdr The data reader, set to the current result set. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Collections.Generic.IList <TModel> A list of objects of the specified type, one for each result. Type Parameters Name Description TModel The type of the list result | Improve this Doc View Source FromDataReader<TShard, TModel>(TShard, DbDataReader, ILogger) Accepts a data reader object and returns a list of objects of the specified type, one for each record. Declaration public static IList<TModel> FromDataReader<TShard, TModel>(TShard shardId, DbDataReader rdr, ILogger logger) where TShard : IComparable where TModel : class, new() Parameters Type Name Description TShard shardId System.Data.Common.DbDataReader rdr The data reader, set to the current result set. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Collections.Generic.IList <TModel> A list of objects of the specified type, one for each result. Type Parameters Name Description TShard TModel The type of the list result | Improve this Doc View Source MapToInParameters<TModel>(DbParameterCollection, TModel, ILogger) Accepts a Sql Parameter collection and appends Sql input parameters whose values correspond to the provided object properties and MapTo attributes. Declaration public static DbParameterCollection MapToInParameters<TModel>(this DbParameterCollection parameters, TModel model, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, generally belonging to a ADO.Net Command object. TModel model An object model instance. The property values are use as parameter values. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection Type Parameters Name Description TModel The type of the object. The \"MapTo\" attributes are used to create the Sql metadata and columns. | Improve this Doc View Source MapToInParameters<TModel>(DbParameterCollection, TModel, HashSet<String>, ILogger) Accepts a Sql Parameter collection and appends Sql input parameters whose values correspond to the provided object properties and MapTo attributes. Declaration public static DbParameterCollection MapToInParameters<TModel>(this DbParameterCollection parameters, TModel model, HashSet<string> ignoreParameters, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, generally belonging to a ADO.Net Command object. TModel model An object model instance. The property values are use as parameter values. System.Collections.Generic.HashSet < System.String > ignoreParameters A lists of parameter names that should not be created. Each entry must exactly match the parameter name, including prefix and casing. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection Type Parameters Name Description TModel The type of the object. The \"MapTo\" attributes are used to create the Sql metadata and columns. | Improve this Doc View Source MapToOutParameters(DbParameterCollection, Type, ILogger) Accepts a Sql Parameter collection and appends Sql output parameters corresponding to the MapTo attributes. Declaration public static DbParameterCollection MapToOutParameters(this DbParameterCollection parameters, Type TModel, ILogger logger) Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, possibly belonging to a ADO.Net Command object or a QueryParmaters object. System.Type TModel The type of the object. The \"MapTo\" attributes are used to create the Sql parameter types. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection | Improve this Doc View Source MapToOutParameters(DbParameterCollection, Type, HashSet<String>, ILogger) Accepts a Sql Parameter collection and appends Sql output parameters corresponding to the MapTo attributes. Declaration public static DbParameterCollection MapToOutParameters(this DbParameterCollection parameters, Type TModel, HashSet<string> ignoreParameters, ILogger logger) Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, generally belonging to a ADO.Net Command object. System.Type TModel System.Collections.Generic.HashSet < System.String > ignoreParameters A lists of parameter names that should not be created. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection | Improve this Doc View Source MapToOutParameters<TModel>(DbParameterCollection, ILogger) Accepts a Sql Parameter collection and appends Sql output parameters corresponding to the MapTo attributes. Declaration public static DbParameterCollection MapToOutParameters<TModel>(this DbParameterCollection parameters, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, possibly belonging to a ADO.Net Command object or a QueryParmaters object. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection, enabling a fluent API. Type Parameters Name Description TModel The type of the object. The \"MapTo\" attributes are used to create the Sql parameter types. | Improve this Doc View Source MapToOutParameters<TModel>(DbParameterCollection, HashSet<String>, ILogger) Accepts a Sql Parameter collection and appends Sql output parameters corresponding to the MapTo attributes. Declaration public static DbParameterCollection MapToOutParameters<TModel>(this DbParameterCollection parameters, HashSet<string> ignoreParameters, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, possibly belonging to a ADO.Net Command object or a QueryParmaters object. System.Collections.Generic.HashSet < System.String > ignoreParameters A lists of parameter names that should not be created. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection, enabling a fluent API. Type Parameters Name Description TModel The type of the object. The \"MapTo\" attributes are used to create the Sql parameter types. | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutResult>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) A function whose signature cooresponds to delegate QueryResultModelHandler and is used to map the provided model type(s) to query results. Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TReaderResult6, TReaderResult7, TOutResult>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TReaderResult6 : class, new() where TReaderResult7 : class, new() where TOutResult : class, new() Parameters Type Name Description TShard shardId This value will be provided to ShardKey or ShardChild objects. If not using sharded data, any provided value will be ignored. System.String sprocName The name of the stored procedure is used to cache the mapping metadata and also for provide richer logging information. System.Object notUsed This parameter is required to conform to the QueryResultModelHandler delegate signature. This argument should be null. System.Data.Common.DbDataReader rdr The data reader returned by the query. System.Data.Common.DbParameterCollection parameters The output parameters returned by the query. System.String connectionDescription The connection description is used to enrich logging information. Microsoft.Extensions.Logging.ILogger logger The logging instance to use for any logging requirements. Returns Type Description TModel An instance of TResult, with properties matching the provided data. Type Parameters Name Description TShard The type of the shardId value. Can be any value type if not used. TModel This is the expected return type of the handler. TReaderResult0 The first result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult1 The second result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult2 The third result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult3 The forth result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult4 The fifth result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult5 The sixth result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult6 The seventh result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TReaderResult7 The eighth result set from data reader will be mapped an object or property of this type. Set to Mapper.DummyType if not used. TOutResult This must be either type TModel or Mapper.DummyType. If set to TModel the TModel properties will be mapped to cooresponding output parameters; if set to DummyType, the output parameters are ignored. | Improve this Doc View Source QueryResultsHandler<TShard, TModel>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult, TOutParameters>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult, TOutParameters>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult TOutParameters | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TOutParameters>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TOutParameters>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult0 TReaderResult1 TOutParameters | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(TShard, String, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TOutParameters>(TShard shardId, string sprocName, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult0 TReaderResult1 TReaderResult2 TOutParameters | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TOutParameters>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult0 TReaderResult1 TReaderResult2 TReaderResult3 TOutParameters | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TOutParameters>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult0 TReaderResult1 TReaderResult2 TReaderResult3 TReaderResult4 TOutParameters | Improve this Doc View Source QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(TShard, String, Object, DbDataReader, DbParameterCollection, String, ILogger) Declaration public static TModel QueryResultsHandler<TShard, TModel, TReaderResult0, TReaderResult1, TReaderResult2, TReaderResult3, TReaderResult4, TReaderResult5, TOutParameters>(TShard shardId, string sprocName, object notUsed, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new() where TReaderResult0 : class, new() where TReaderResult1 : class, new() where TReaderResult2 : class, new() where TReaderResult3 : class, new() where TReaderResult4 : class, new() where TReaderResult5 : class, new() where TOutParameters : class, new() Parameters Type Name Description TShard shardId System.String sprocName System.Object notUsed System.Data.Common.DbDataReader rdr System.Data.Common.DbParameterCollection parameters System.String connectionDescription Microsoft.Extensions.Logging.ILogger logger Returns Type Description TModel Type Parameters Name Description TShard TModel TReaderResult0 TReaderResult1 TReaderResult2 TReaderResult3 TReaderResult4 TReaderResult5 TOutParameters | Improve this Doc View Source ReadOutParameters<TModel>(DbParameterCollection, ILogger) Creates a new object with property values based upon the provided output parameters which correspond to the MapTo attributes. Declaration public static TModel ReadOutParameters<TModel>(this DbParameterCollection parameters, ILogger logger) where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, generally belonging to a ADO.Net Command object after a database query. Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description TModel An object of the specified type, with properties set to parameter values. Type Parameters Name Description TModel The type of the object. The \"MapTo\" attributes are used to read the Sql parameter collection values. | Improve this Doc View Source ReadOutParameters<TShard, TModel>(DbParameterCollection, TShard, ILogger) Creates a new object with property values based upon the provided output parameters which correspond to the MapTo attributes. Declaration public static TModel ReadOutParameters<TShard, TModel>(this DbParameterCollection parameters, TShard shardId, ILogger logger) where TShard : IComparable where TModel : class, new() Parameters Type Name Description System.Data.Common.DbParameterCollection parameters A parameter collection, generally belonging to a ADO.Net Command object after a database query. TShard shardId Microsoft.Extensions.Logging.ILogger logger The logger instance to write any processing or debug information to. Returns Type Description TModel An object of the specified type, with properties set to parameter values. Type Parameters Name Description TShard TModel The type of the object. The \"MapTo\" attributes are used to read the Sql parameter collection values."
  },
  "api/ArgentSea.InvalidShardArgumentsException.html": {
    "href": "api/ArgentSea.InvalidShardArgumentsException.html",
    "title": "Class InvalidShardArgumentsException | ArgentSea Docs",
    "keywords": "Class InvalidShardArgumentsException This error is raised upon an attempt to create an Empty ShardKey or ShardChild, but the IDs are not zero. Essentially, any shard object with a DataOrigin of '0' (Empty) must also have zeroed IDs (be equal to ShardKey.Empty or ShardChild.Empty). Inheritance System.Object System.Exception InvalidShardArgumentsException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public sealed class InvalidShardArgumentsException : Exception, ISerializable Constructors | Improve this Doc View Source InvalidShardArgumentsException() Initializes a new instance of the InvalidShardArgumentsException class with no error message. Declaration public InvalidShardArgumentsException() | Improve this Doc View Source InvalidShardArgumentsException(String) Initializes a new instance of the InvalidShardArgumentsException class with a specified error message. Declaration public InvalidShardArgumentsException(string message) Parameters Type Name Description System.String message The message that describes the error. | Improve this Doc View Source InvalidShardArgumentsException(String, Exception) Initializes a new instance of the InvalidShardArgumentsException class. Declaration public InvalidShardArgumentsException(string message, Exception innerException) Parameters Type Name Description System.String message The message that describes the error. System.Exception innerException The exception that is the cause of the current exception. Implements System.Runtime.Serialization.ISerializable"
  },
  "api/ArgentSea.ParameterMapAttribute.html": {
    "href": "api/ArgentSea.ParameterMapAttribute.html",
    "title": "Class ParameterMapAttribute | ArgentSea Docs",
    "keywords": "Class ParameterMapAttribute Inheritance System.Object System.Attribute ParameterMapAttribute Inherited Members System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax [AttributeUsage(AttributeTargets.Property, Inherited = true, AllowMultiple = true)] public abstract class ParameterMapAttribute : Attribute Constructors | Improve this Doc View Source ParameterMapAttribute(String, Int32) Declaration public ParameterMapAttribute(string name, int sqlType) Parameters Type Name Description System.String name System.Int32 sqlType | Improve this Doc View Source ParameterMapAttribute(String, Int32, Boolean) Declaration public ParameterMapAttribute(string name, int sqlType, bool isRequired) Parameters Type Name Description System.String name System.Int32 sqlType System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public virtual string ColumnName { get; } Property Value Type Description System.String | Improve this Doc View Source IsRequired Declaration public bool IsRequired { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParameterName Declaration public virtual string ParameterName { get; } Property Value Type Description System.String | Improve this Doc View Source SqlType Declaration public int SqlType { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected abstract void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected abstract void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected abstract void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected abstract void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger | Improve this Doc View Source IsValidType(Type) Declaration public abstract bool IsValidType(Type candidate) Parameters Type Name Description System.Type candidate Returns Type Description System.Boolean"
  },
  "api-sql/ArgentSea.Sql.MapToSqlVarCharAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlVarCharAttribute.html",
    "title": "Class MapToSqlVarCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlVarCharAttribute This attributes maps a model property to/from a SQL VarChar parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlVarCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlVarCharAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlVarCharAttribute(String, Int32, Int32) Map this property to the specified Ansi database column (note that because .NET is Unicode, NVarChar is recommended for most applications). Declaration public MapToSqlVarCharAttribute(string parameterName, int length, int localeId) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The maximum length of the string. Set to -1 for VarChar(max). System.Int32 localeId The Ansi code-page to use for Unicode text conversion. For en-US use: 1033. | Improve this Doc View Source MapToSqlVarCharAttribute(String, Int32, Int32, Boolean) Declaration public MapToSqlVarCharAttribute(string parameterName, int length, int localeId, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Int32 localeId System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source LocaleId Declaration public int LocaleId { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlNVarCharAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlNVarCharAttribute.html",
    "title": "Class MapToSqlNVarCharAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlNVarCharAttribute This attribute maps a model property to/from a SQL NVarChar parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlNVarCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlNVarCharAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlNVarCharAttribute(String, Int32) Map this property to the specified Unicode database column. Declaration public MapToSqlNVarCharAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Int32 length The maximum length of the string. Set to -1 for NVarChar(max). | Improve this Doc View Source MapToSqlNVarCharAttribute(String, Int32, Boolean) Declaration public MapToSqlNVarCharAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-sql/ArgentSea.Sql.MapToSqlFloatAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlFloatAttribute.html",
    "title": "Class MapToSqlFloatAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlFloatAttribute This attribute maps a model property to/from a SQL Float parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlFloatAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlFloatAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlFloatAttribute(String) Map this property to the specified Float (64-bit floating point or .NET double) database column. Declaration public MapToSqlFloatAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlFloatAttribute(String, Boolean) Declaration public MapToSqlFloatAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.QueryResultModelHandler-3.html": {
    "href": "api/ArgentSea.QueryResultModelHandler-3.html",
    "title": "Delegate QueryResultModelHandler<TShard, TArg, TModel> | ArgentSea Docs",
    "keywords": "Delegate QueryResultModelHandler<TShard, TArg, TModel> This delegate will be invoked for each shard (probably on different threads) to convert the cmd.Execute result to model types. Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public delegate TModel QueryResultModelHandler<TShard, TArg, TModel>(TShard shardId, string sprocName, TArg optionalArgument, DbDataReader rdr, DbParameterCollection parameters, string connectionDescription, ILogger logger) where TShard : IComparable where TModel : class, new(); Parameters Type Name Description TShard shardId The value of the Shard Number. System.String sprocName Used to uniquely identify any cached Expression Trees (along with TModel type) and also included in any logging information. TArg optionalArgument System.Data.Common.DbDataReader rdr A data reader instance supplied by the data provider when a query is executed. System.Data.Common.DbParameterCollection parameters An output parameter set supplied by the data provider when a query is executed. System.String connectionDescription Provides any logging writes with connection information to help troubleshoot any errors. Microsoft.Extensions.Logging.ILogger logger A logger instance for writing logs. Returns Type Description TModel An object of the defined type. Type Parameters Name Description TShard The Type of the ShardId. TArg The Type of an optional parameter that can be passed to the parsing function. If not used, simply use Type \"object\" and pass null if required. TModel"
  },
  "api-sql/ArgentSea.Sql.MapToSqlTimeAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlTimeAttribute.html",
    "title": "Class MapToSqlTimeAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlTimeAttribute This attribute maps a model property to/from a SQL Time parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlTimeAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlTimeAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlTimeAttribute(String) Map this property to the specified Time database column. Declaration public MapToSqlTimeAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlTimeAttribute(String, Boolean) Declaration public MapToSqlTimeAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgMoneyAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgMoneyAttribute.html",
    "title": "Class MapToPgMoneyAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgMoneyAttribute This attribute maps a model property to/from a PostgreSQL Money parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgMoneyAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgMoneyAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgMoneyAttribute(String) Map this property to the specified Money database column. Declaration public MapToPgMoneyAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgMoneyAttribute(String, Boolean) Declaration public MapToPgMoneyAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.SecurityConfiguration.html": {
    "href": "api/ArgentSea.SecurityConfiguration.html",
    "title": "Class SecurityConfiguration | ArgentSea Docs",
    "keywords": "Class SecurityConfiguration This class represents data security information, with a key that can be reference by any connection(s) that share the security information. Inheritance System.Object SecurityConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class SecurityConfiguration Properties | Improve this Doc View Source Password Declaration public string Password { get; set; } Property Value Type Description System.String | Improve this Doc View Source SecurityKey Used by data connection classes to identify the corresponding security information. Declaration public string SecurityKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source WindowsAuth Declaration public bool WindowsAuth { get; set; } Property Value Type Description System.Boolean"
  },
  "api-sql/ArgentSea.Sql.SqlParameterMapAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.SqlParameterMapAttribute.html",
    "title": "Class SqlParameterMapAttribute | ArgentSea Docs",
    "keywords": "Class SqlParameterMapAttribute This abstract class is a SQL-specific implementation of the ParameterMapAttribute class. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlBigIntAttribute MapToSqlBinaryAttribute MapToSqlBitAttribute MapToSqlCharAttribute MapToSqlDateAttribute MapToSqlDateTime2Attribute MapToSqlDateTimeAttribute MapToSqlDateTimeOffsetAttribute MapToSqlDecimalAttribute MapToSqlFloatAttribute MapToSqlIntAttribute MapToSqlMoneyAttribute MapToSqlNCharAttribute MapToSqlNVarCharAttribute MapToSqlRealAttribute MapToSqlSmallIntAttribute MapToSqlSmallMoneyAttribute MapToSqlTimeAttribute MapToSqlTinyIntAttribute MapToSqlUniqueIdentifierAttribute MapToSqlVarBinaryAttribute MapToSqlVarCharAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired ParameterMapAttribute.IsValidType(Type) ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, Int32, Type, ParameterExpression, ILogger) System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public abstract class SqlParameterMapAttribute : ParameterMapAttribute Constructors | Improve this Doc View Source SqlParameterMapAttribute(String, SqlDbType) Declaration public SqlParameterMapAttribute(string parameterName, SqlDbType sqlType) Parameters Type Name Description System.String parameterName System.Data.SqlDbType sqlType | Improve this Doc View Source SqlParameterMapAttribute(String, SqlDbType, Boolean) Declaration public SqlParameterMapAttribute(string parameterName, SqlDbType sqlType, bool isRequired) Parameters Type Name Description System.String parameterName System.Data.SqlDbType sqlType System.Boolean isRequired Methods | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected abstract void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger"
  },
  "api-sql/ArgentSea.Sql.MapToSqlBigIntAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlBigIntAttribute.html",
    "title": "Class MapToSqlBigIntAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlBigIntAttribute This attribute maps a model property to/from a SQL BigInt parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlBigIntAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlBigIntAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlBigIntAttribute(String) Map this property to the specified BigInt (64-bit) database column. Declaration public MapToSqlBigIntAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlBigIntAttribute(String, Boolean) Declaration public MapToSqlBigIntAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.QueryParameterCollection.html": {
    "href": "api/ArgentSea.QueryParameterCollection.html",
    "title": "Class QueryParameterCollection | ArgentSea Docs",
    "keywords": "Class QueryParameterCollection This is an implementation of the abstract DbParameterCollecion class. Unlike most provider-specific parameter collections, it can be created without a prior DbCommand object instance. Inheritance System.Object System.MarshalByRefObject System.Data.Common.DbParameterCollection QueryParameterCollection Implements System.Data.IDataParameterCollection System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Data.Common.DbParameterCollection.System.Collections.IList.get_Item(System.Int32) System.Data.Common.DbParameterCollection.System.Collections.IList.set_Item(System.Int32, System.Object) System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.get_Item(System.String) System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.set_Item(System.String, System.Object) System.Data.Common.DbParameterCollection.Item[System.Int32] System.Data.Common.DbParameterCollection.Item[System.String] System.Data.Common.DbParameterCollection.System.Collections.IList.Item[System.Int32] System.Data.Common.DbParameterCollection.System.Data.IDataParameterCollection.Item[System.String] System.MarshalByRefObject.GetLifetimeService() System.MarshalByRefObject.InitializeLifetimeService() System.MarshalByRefObject.MemberwiseClone(System.Boolean) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public class QueryParameterCollection : DbParameterCollection, IDataParameterCollection, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Count Declaration public override int Count { get; } Property Value Type Description System.Int32 Overrides System.Data.Common.DbParameterCollection.Count | Improve this Doc View Source SyncRoot Declaration public override object SyncRoot { get; } Property Value Type Description System.Object Overrides System.Data.Common.DbParameterCollection.SyncRoot Methods | Improve this Doc View Source Add(Object) Declaration public override int Add(object value) Parameters Type Name Description System.Object value Returns Type Description System.Int32 Overrides System.Data.Common.DbParameterCollection.Add(System.Object) | Improve this Doc View Source AddRange(Array) Declaration public override void AddRange(Array values) Parameters Type Name Description System.Array values Overrides System.Data.Common.DbParameterCollection.AddRange(System.Array) | Improve this Doc View Source Clear() Declaration public override void Clear() Overrides System.Data.Common.DbParameterCollection.Clear() | Improve this Doc View Source Contains(Object) Declaration public override bool Contains(object value) Parameters Type Name Description System.Object value Returns Type Description System.Boolean Overrides System.Data.Common.DbParameterCollection.Contains(System.Object) | Improve this Doc View Source Contains(String) Declaration public override bool Contains(string value) Parameters Type Name Description System.String value Returns Type Description System.Boolean Overrides System.Data.Common.DbParameterCollection.Contains(System.String) | Improve this Doc View Source CopyTo(Array, Int32) Declaration public override void CopyTo(Array array, int index) Parameters Type Name Description System.Array array System.Int32 index Overrides System.Data.Common.DbParameterCollection.CopyTo(System.Array, System.Int32) | Improve this Doc View Source GetEnumerator() Declaration public override IEnumerator GetEnumerator() Returns Type Description System.Collections.IEnumerator Overrides System.Data.Common.DbParameterCollection.GetEnumerator() | Improve this Doc View Source GetParameter(Int32) Declaration protected override DbParameter GetParameter(int index) Parameters Type Name Description System.Int32 index Returns Type Description System.Data.Common.DbParameter Overrides System.Data.Common.DbParameterCollection.GetParameter(System.Int32) | Improve this Doc View Source GetParameter(String) Declaration protected override DbParameter GetParameter(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Data.Common.DbParameter Overrides System.Data.Common.DbParameterCollection.GetParameter(System.String) | Improve this Doc View Source IndexOf(Object) Declaration public override int IndexOf(object value) Parameters Type Name Description System.Object value Returns Type Description System.Int32 Overrides System.Data.Common.DbParameterCollection.IndexOf(System.Object) | Improve this Doc View Source IndexOf(String) Declaration public override int IndexOf(string parameterName) Parameters Type Name Description System.String parameterName Returns Type Description System.Int32 Overrides System.Data.Common.DbParameterCollection.IndexOf(System.String) | Improve this Doc View Source Insert(Int32, Object) Declaration public override void Insert(int index, object value) Parameters Type Name Description System.Int32 index System.Object value Overrides System.Data.Common.DbParameterCollection.Insert(System.Int32, System.Object) | Improve this Doc View Source Remove(Object) Declaration public override void Remove(object value) Parameters Type Name Description System.Object value Overrides System.Data.Common.DbParameterCollection.Remove(System.Object) | Improve this Doc View Source RemoveAt(Int32) Declaration public override void RemoveAt(int index) Parameters Type Name Description System.Int32 index Overrides System.Data.Common.DbParameterCollection.RemoveAt(System.Int32) | Improve this Doc View Source RemoveAt(String) Declaration public override void RemoveAt(string parameterName) Parameters Type Name Description System.String parameterName Overrides System.Data.Common.DbParameterCollection.RemoveAt(System.String) | Improve this Doc View Source SetParameter(Int32, DbParameter) Declaration protected override void SetParameter(int index, DbParameter value) Parameters Type Name Description System.Int32 index System.Data.Common.DbParameter value Overrides System.Data.Common.DbParameterCollection.SetParameter(System.Int32, System.Data.Common.DbParameter) | Improve this Doc View Source SetParameter(String, DbParameter) Declaration protected override void SetParameter(string parameterName, DbParameter value) Parameters Type Name Description System.String parameterName System.Data.Common.DbParameter value Overrides System.Data.Common.DbParameterCollection.SetParameter(System.String, System.Data.Common.DbParameter) Implements System.Data.IDataParameterCollection System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Extension Methods Mapper.MapToInParameters<TModel>(DbParameterCollection, TModel, ILogger) Mapper.MapToInParameters<TModel>(DbParameterCollection, TModel, HashSet<String>, ILogger) Mapper.MapToOutParameters(DbParameterCollection, Type, ILogger) Mapper.MapToOutParameters<TModel>(DbParameterCollection, ILogger) Mapper.MapToOutParameters<TModel>(DbParameterCollection, HashSet<String>, ILogger) Mapper.MapToOutParameters(DbParameterCollection, Type, HashSet<String>, ILogger) Mapper.ReadOutParameters<TModel>(DbParameterCollection, ILogger) Mapper.ReadOutParameters<TShard, TModel>(DbParameterCollection, TShard, ILogger)"
  },
  "api-pg/ArgentSea.Pg.MapToPgDoubleAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgDoubleAttribute.html",
    "title": "Class MapToPgDoubleAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgDoubleAttribute This attribute maps a model property to/from a PostgreSQL Double parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgDoubleAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgDoubleAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgDoubleAttribute(String) Map this property to the specified Float (64-bit floating point or .NET double) database column. Declaration public MapToPgDoubleAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToPgDoubleAttribute(String, Boolean) Declaration public MapToPgDoubleAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.PgConnectionConfiguration.html": {
    "href": "api-pg/ArgentSea.Pg.PgConnectionConfiguration.html",
    "title": "Class PgConnectionConfiguration | ArgentSea Docs",
    "keywords": "Class PgConnectionConfiguration This class represents is a (non-sharded) database connection. Note that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match as key in the DataResilienceOptions array. If the ResilienceKey is not defined, a default data resilience strategy will be used. Inheritance System.Object DataConnectionConfiguration PgConnectionConfiguration Implements IConnectionConfiguration Inherited Members DataConnectionConfiguration.hasConnectionPropertyChanged DataConnectionConfiguration.SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions) DataConnectionConfiguration.GetResilienceStrategy(ILogger) DataConnectionConfiguration.GetSecurityConfiguration() DataConnectionConfiguration.SecurityKey DataConnectionConfiguration.ResilienceKey System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgConnectionConfiguration : DataConnectionConfiguration, IConnectionConfiguration Properties | Improve this Doc View Source ApplicationName The optional application name parameter to be sent to the backend during connection initiation. Declaration public string ApplicationName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AutoPrepareMinUsages The minimum number of usages an SQL statement is used before it's automatically prepared. Defaults to 5 Declaration public int AutoPrepareMinUsages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CheckCertificateRevocation Whether to check the certificate revocation list during authentication. False by default. Declaration public bool CheckCertificateRevocation { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ClientEncoding Gets or sets the client_encoding parameter. Declaration public string ClientEncoding { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommandTimeout The time to wait (in seconds) while trying to execute a command before terminating the attempt and generating an error. Defaults to 30 seconds. Declaration public int CommandTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ConnectionDescription Declaration public override string ConnectionDescription { get; } Property Value Type Description System.String Overrides DataConnectionConfiguration.ConnectionDescription | Improve this Doc View Source ConnectionIdleLifetime The time to wait before closing idle connections in the pool if the count of all connections exceeds MinPoolSize. Declaration public int ConnectionIdleLifetime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ConnectionPruningInterval How many seconds the pool waits before attempting to prune idle connections that are beyond idle lifetime. Declaration public int ConnectionPruningInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ConvertInfinityDateTime Makes MaxValue and MinValue timestamps and dates readable as infinity and negative infinity. Declaration public bool ConvertInfinityDateTime { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Database The PostgreSQL database to connect to. Declaration public string Database { get; set; } Property Value Type Description System.String | Improve this Doc View Source Encoding Gets or sets the .NET encoding that will be used to encode/decode PostgreSQL string data. Declaration public string Encoding { get; set; } Property Value Type Description System.String | Improve this Doc View Source Enlist Whether to enlist in an ambient TransactionScope. Declaration public bool Enlist { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Host The hostname or IP address of the PostgreSQL server to connect to. Declaration public string Host { get; set; } Property Value Type Description System.String | Improve this Doc View Source IncludeRealm The Kerberos realm to be used for authentication Declaration public bool IncludeRealm { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source InternalCommandTimeout The time to wait (in seconds) while trying to execute a an internal command before terminating the attempt and generating an error. Declaration public int InternalCommandTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source KeepAlive The number of seconds of connection inactivity before Npgsql sends a keepalive query. Set to 0 (the default) to disable. Declaration public int KeepAlive { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source KerberosServiceName The Kerberos service name to be used for authentication. Declaration public string KerberosServiceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source MaxAutoPrepare The maximum number SQL statements that can be automatically prepared at any given point. Beyond this number the least-recently-used statement will be recycled. Zero (the default) disables automatic preparation. Declaration public int MaxAutoPrepare { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaxPoolSize The maximum connection pool size. Declaration public int MaxPoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MinPoolSize The minimum connection pool size. Declaration public int MinPoolSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NoResetOnClose If set to true, a pool connection's state won't be reset when it is closed (improves performance). Do not specify this unless you know what you're doing. Declaration public bool NoResetOnClose { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PersistSecurityInfo Gets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state. Declaration public bool PersistSecurityInfo { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Pooling Whether connection pooling should be used. Declaration public bool Pooling { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Port The TCP/IP port of the PostgreSQL server. Declaration public int Port { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ReadBufferSize Determines the size of the internal buffer Npgsql uses when reading. Increasing may improve performance if transferring large values from the database. Declaration public int ReadBufferSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SearchPath Gets or sets the schema search path. Declaration public string SearchPath { get; set; } Property Value Type Description System.String | Improve this Doc View Source ServerCompatibilityMode A compatibility mode for special PostgreSQL server types. Declaration public ServerCompatibilityMode ServerCompatibilityMode { get; set; } Property Value Type Description Npgsql.ServerCompatibilityMode | Improve this Doc View Source SocketReceiveBufferSize Determines the size of socket read buffer. Declaration public int SocketReceiveBufferSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SocketSendBufferSize Determines the size of socket send buffer. Declaration public int SocketSendBufferSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SslMode Controls whether SSL is required, disabled or preferred, depending on server support. Declaration public SslMode SslMode { get; set; } Property Value Type Description Npgsql.SslMode | Improve this Doc View Source TcpKeepAliveInterval The interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. Defaults to the value of TcpKeepAliveTime. TcpKeepAliveTime must be non-zero as well. Supported only on Windows. Declaration public int TcpKeepAliveInterval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TcpKeepAliveTime The number of seconds of connection inactivity before a TCP keepalive query is sent. Use of this option is discouraged, use KeepAlive instead if possible. Set to 0 (the default) to disable. Supported only on Windows. Declaration public int TcpKeepAliveTime { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Timeout The time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error. Defaults to 15 seconds. Declaration public int Timeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TrustServerCertificate Whether to trust the server certificate without validating it. Declaration public bool TrustServerCertificate { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UsePerfCounters Writes connection performance information to performance counters. Declaration public bool UsePerfCounters { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UseSslStream Npgsql uses its own internal implementation of TLS/SSL. Turn this on to use .NET SslStream instead. Declaration public bool UseSslStream { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WriteBufferSize Determines the size of the internal buffer Npgsql uses when writing. Increasing may improve performance if transferring large values to the database. Declaration public int WriteBufferSize { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source Add(KeyValuePair<String, Object>) Adds an item to the configuration Declaration public void Add(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item | Improve this Doc View Source Contains(KeyValuePair<String, Object>) Determines whether the configuration contains a specific key-value pair. Declaration public bool Contains(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item Returns Type Description System.Boolean | Improve this Doc View Source ContainsKey(String) Determines whether the configuration contains a specific key. Declaration public bool ContainsKey(string key) Parameters Type Name Description System.String key Returns Type Description System.Boolean | Improve this Doc View Source GetConnectionString() Declaration public override string GetConnectionString() Returns Type Description System.String Overrides DataConnectionConfiguration.GetConnectionString() | Improve this Doc View Source Remove(KeyValuePair<String, Object>) Removes the entry from the configuration instance. Declaration public void Remove(KeyValuePair<string, object> item) Parameters Type Name Description System.Collections.Generic.KeyValuePair < System.String , System.Object > item | Improve this Doc View Source Remove(String) Removes the entry from the configuration instance. Declaration public void Remove(string key) Parameters Type Name Description System.String key | Improve this Doc View Source TryGetValue(String, out Object) Declaration public bool TryGetValue(string key, out object value) Parameters Type Name Description System.String key System.Object value Returns Type Description System.Boolean Implements IConnectionConfiguration"
  },
  "api/ArgentSea.DataOrigin.html": {
    "href": "api/ArgentSea.DataOrigin.html",
    "title": "Struct DataOrigin | ArgentSea Docs",
    "keywords": "Struct DataOrigin This object help descript the “type” of data. For example, you could assign Customer data a data origin value of 'c'. When comparing data values, the ShardKey/ShardChild will not match if the data origin is not the same value — even if IDs are the same. This helps prevent accidentaly comparisions that are not valid and also prevents collisions if you choose allows values of different types to be stored in the same cache. Implements System.IEquatable < System.Object > Inherited Members System.ValueType.ToString() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public struct DataOrigin : IEquatable<object> Constructors | Improve this Doc View Source DataOrigin(Char) Declaration public DataOrigin(char sourceIndicator) Parameters Type Name Description System.Char sourceIndicator Properties | Improve this Doc View Source SourceIndicator Declaration public char SourceIndicator { get; } Property Value Type Description System.Char Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object other) Parameters Type Name Description System.Object other Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() Operators | Improve this Doc View Source Equality(DataOrigin, DataOrigin) Declaration public static bool operator ==(DataOrigin do1, DataOrigin do2) Parameters Type Name Description DataOrigin do1 DataOrigin do2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(DataOrigin, DataOrigin) Declaration public static bool operator !=(DataOrigin do1, DataOrigin do2) Parameters Type Name Description DataOrigin do1 DataOrigin do2 Returns Type Description System.Boolean Implements System.IEquatable<T>"
  },
  "api-sql/ArgentSea.Sql.MapToSqlDateAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlDateAttribute.html",
    "title": "Class MapToSqlDateAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlDateAttribute This attribute maps a model property to/from a SQL Date parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlDateAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlDateAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlDateAttribute(String) Map this property to the specified Date database column. Declaration public MapToSqlDateAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlDateAttribute(String, Boolean) Declaration public MapToSqlDateAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgNumericAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgNumericAttribute.html",
    "title": "Class MapToPgNumericAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgNumericAttribute This attribute maps a model property to/from a PostgreSQL Numeric parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgNumericAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgNumericAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgNumericAttribute(String, Byte, Byte) Map this property to the specified decimal database column. Declaration public MapToPgNumericAttribute(string parameterName, byte precision, byte scale) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. System.Byte precision The maximum number of digits in the database value. System.Byte scale The number of digits to the right of the decimal point. | Improve this Doc View Source MapToPgNumericAttribute(String, Byte, Byte, Boolean) Declaration public MapToPgNumericAttribute(string parameterName, byte precision, byte scale, bool isRequired) Parameters Type Name Description System.String parameterName System.Byte precision System.Byte scale System.Boolean isRequired Properties | Improve this Doc View Source Precision Declaration public byte Precision { get; } Property Value Type Description System.Byte | Improve this Doc View Source Scale Declaration public byte Scale { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.DbParameterCollectionExtensions.html": {
    "href": "api/ArgentSea.DbParameterCollectionExtensions.html",
    "title": "Class DbParameterCollectionExtensions | ArgentSea Docs",
    "keywords": "Class DbParameterCollectionExtensions Inheritance System.Object DbParameterCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public static class DbParameterCollectionExtensions Methods | Improve this Doc View Source GetBoolean(DbParameter) Declaration public static bool GetBoolean(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Boolean | Improve this Doc View Source GetByte(DbParameter) Declaration public static byte GetByte(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Byte | Improve this Doc View Source GetBytes(DbParameter) Returns a byte array, or null if the parameter value is DbNull. Declaration public static byte[] GetBytes(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Byte [] Parameter value as a byte[]. | Improve this Doc View Source GetDateTime(DbParameter) Declaration public static DateTime GetDateTime(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.DateTime | Improve this Doc View Source GetDateTimeOffset(DbParameter) Declaration public static DateTimeOffset GetDateTimeOffset(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.DateTimeOffset | Improve this Doc View Source GetDecimal(DbParameter) Declaration public static decimal GetDecimal(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Decimal | Improve this Doc View Source GetDouble(DbParameter) Returns a double (64-bit floating point) value from the parameter, or NaN (Not a Number) if the value is DbNull. Declaration public static double GetDouble(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Double Parameter value as double. | Improve this Doc View Source GetFloat(DbParameter) Returns a double (32-bit floating point) value from the parameter, or NaN (Not a Number) if the value is DbNull. Declaration public static float GetFloat(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Single Parameter value as float. | Improve this Doc View Source GetGuid(DbParameter) Returns a Guid value from the parameter, or Guid.Emtpy if the value is DbNull. Declaration public static Guid GetGuid(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Guid Parameter value as Guid. | Improve this Doc View Source GetInteger(DbParameter) Declaration public static int GetInteger(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Int32 | Improve this Doc View Source GetLong(DbParameter) Returns a Char value from the parameter, or NUL (char 0) if the value is DbNull. Declaration public static long GetLong(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Int64 Parameter value as Char. | Improve this Doc View Source GetNullableBoolean(DbParameter) Declaration public static bool? GetNullableBoolean(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Boolean > | Improve this Doc View Source GetNullableByte(DbParameter) Declaration public static byte? GetNullableByte(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Byte > | Improve this Doc View Source GetNullableDateTime(DbParameter) Declaration public static DateTime? GetNullableDateTime(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.DateTime > | Improve this Doc View Source GetNullableDateTimeOffset(DbParameter) Declaration public static DateTimeOffset? GetNullableDateTimeOffset(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.DateTimeOffset > | Improve this Doc View Source GetNullableDecimal(DbParameter) Declaration public static decimal? GetNullableDecimal(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Decimal > | Improve this Doc View Source GetNullableDouble(DbParameter) Declaration public static double? GetNullableDouble(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Double > | Improve this Doc View Source GetNullableFloat(DbParameter) Declaration public static float? GetNullableFloat(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Single > | Improve this Doc View Source GetNullableGuid(DbParameter) Declaration public static Guid? GetNullableGuid(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Guid > | Improve this Doc View Source GetNullableInteger(DbParameter) Declaration public static int? GetNullableInteger(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Int32 > | Improve this Doc View Source GetNullableLong(DbParameter) Declaration public static long? GetNullableLong(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Int64 > | Improve this Doc View Source GetNullableShort(DbParameter) Declaration public static short? GetNullableShort(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.Int16 > | Improve this Doc View Source GetNullableTimeSpan(DbParameter) Declaration public static TimeSpan? GetNullableTimeSpan(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Nullable < System.TimeSpan > | Improve this Doc View Source GetShort(DbParameter) Declaration public static short GetShort(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.Int16 | Improve this Doc View Source GetString(DbParameter) Returns a string, or null if the parameter value is DbNull. Declaration public static string GetString(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.String Parameter value as a string. | Improve this Doc View Source GetTimeSpan(DbParameter) Declaration public static TimeSpan GetTimeSpan(this DbParameter prm) Parameters Type Name Description System.Data.Common.DbParameter prm Returns Type Description System.TimeSpan"
  },
  "api-sql/ArgentSea.Sql.MapToSqlTinyIntAttribute.html": {
    "href": "api-sql/ArgentSea.Sql.MapToSqlTinyIntAttribute.html",
    "title": "Class MapToSqlTinyIntAttribute | ArgentSea Docs",
    "keywords": "Class MapToSqlTinyIntAttribute This attribute maps a model property to/from a SQL TinyInt parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute SqlParameterMapAttribute MapToSqlTinyIntAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class MapToSqlTinyIntAttribute : SqlParameterMapAttribute Constructors | Improve this Doc View Source MapToSqlTinyIntAttribute(String) Map this property to the specified TinyInt (unsigned 8-bit) database column. Declaration public MapToSqlTinyIntAttribute(string parameterName) Parameters Type Name Description System.String parameterName The name of the parameter or column that contains the value. The system will automatically add or remove the prefix '@' as needed. | Improve this Doc View Source MapToSqlTinyIntAttribute(String, Boolean) Declaration public MapToSqlTinyIntAttribute(string parameterName, bool isRequired) Parameters Type Name Description System.String parameterName System.Boolean isRequired Properties | Improve this Doc View Source ColumnName Declaration public override string ColumnName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ColumnName | Improve this Doc View Source ParameterName Declaration public override string ParameterName { get; } Property Value Type Description System.String Overrides ParameterMapAttribute.ParameterName Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendTvpExpressions(ParameterExpression expRecord, Expression expProperty, IList<Expression> setExpressions, IList<NewExpression> sqlMetaDataTypeExpressions, HashSet<string> parameterNames, ref int ordinal, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.ParameterExpression expRecord System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > setExpressions System.Collections.Generic.IList < System.Linq.Expressions.NewExpression > sqlMetaDataTypeExpressions System.Collections.Generic.HashSet < System.String > parameterNames System.Int32 ordinal System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides SqlParameterMapAttribute.AppendTvpExpressions(ParameterExpression, Expression, IList<Expression>, IList<NewExpression>, HashSet<String>, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api-pg/ArgentSea.Pg.MapToPgHstoreAttribute.html": {
    "href": "api-pg/ArgentSea.Pg.MapToPgHstoreAttribute.html",
    "title": "Class MapToPgHstoreAttribute | ArgentSea Docs",
    "keywords": "Class MapToPgHstoreAttribute This attribute maps a model property to/from a PostgreSQL Hstore parameter or column. Inheritance System.Object System.Attribute ParameterMapAttribute PgParameterMapAttribute MapToPgHstoreAttribute Inherited Members ParameterMapAttribute.Name ParameterMapAttribute.ParameterName ParameterMapAttribute.ColumnName ParameterMapAttribute.SqlType ParameterMapAttribute.IsRequired System.Attribute.Equals(System.Object) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Boolean) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type) System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.GetHashCode() System.Attribute.IsDefaultAttribute() System.Attribute.IsDefined(System.Reflection.Assembly, System.Type) System.Attribute.IsDefined(System.Reflection.Assembly, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type) System.Attribute.IsDefined(System.Reflection.MemberInfo, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.Module, System.Type) System.Attribute.IsDefined(System.Reflection.Module, System.Type, System.Boolean) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type) System.Attribute.IsDefined(System.Reflection.ParameterInfo, System.Type, System.Boolean) System.Attribute.Match(System.Object) System.Attribute.TypeId System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class MapToPgHstoreAttribute : PgParameterMapAttribute Constructors | Improve this Doc View Source MapToPgHstoreAttribute(String, Int32) Declaration public MapToPgHstoreAttribute(string parameterName, int length) Parameters Type Name Description System.String parameterName System.Int32 length | Improve this Doc View Source MapToPgHstoreAttribute(String, Int32, Boolean) Declaration public MapToPgHstoreAttribute(string parameterName, int length, bool isRequired) Parameters Type Name Description System.String parameterName System.Int32 length System.Boolean isRequired Properties | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) Declaration protected override void AppendInParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, Expression expProperty, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.Expression expProperty System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendInParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, Expression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) Declaration protected override void AppendReaderExpressions(Expression expProperty, IList<MethodCallExpression> columnLookupExpressions, IList<Expression> expressions, ParameterExpression prmSqlRdr, ParameterExpression expOrdinals, ParameterExpression expOrdinal, ref int propIndex, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.MethodCallExpression > columnLookupExpressions System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression prmSqlRdr System.Linq.Expressions.ParameterExpression expOrdinals System.Linq.Expressions.ParameterExpression expOrdinal System.Int32 propIndex System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReaderExpressions(Expression, IList<MethodCallExpression>, IList<Expression>, ParameterExpression, ParameterExpression, ParameterExpression, ref Int32, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) Declaration protected override void AppendReadOutParameterExpressions(Expression expProperty, IList<Expression> expressions, ParameterExpression expPrms, ParameterExpression expPrm, Type propertyType, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Linq.Expressions.Expression expProperty System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expPrms System.Linq.Expressions.ParameterExpression expPrm System.Type propertyType System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendReadOutParameterExpressions(Expression, IList<Expression>, ParameterExpression, ParameterExpression, Type, ParameterExpression, ILogger) | Improve this Doc View Source AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) Declaration protected override void AppendSetOutParameterExpressions(IList<Expression> expressions, ParameterExpression expSprocParameters, ParameterExpression expIgnoreParameters, HashSet<string> parameterNames, ParameterExpression expLogger, ILogger logger) Parameters Type Name Description System.Collections.Generic.IList < System.Linq.Expressions.Expression > expressions System.Linq.Expressions.ParameterExpression expSprocParameters System.Linq.Expressions.ParameterExpression expIgnoreParameters System.Collections.Generic.HashSet < System.String > parameterNames System.Linq.Expressions.ParameterExpression expLogger Microsoft.Extensions.Logging.ILogger logger Overrides ParameterMapAttribute.AppendSetOutParameterExpressions(IList<Expression>, ParameterExpression, ParameterExpression, HashSet<String>, ParameterExpression, ILogger) | Improve this Doc View Source IsValidType(Type) Declaration public override bool IsValidType(Type candidateType) Parameters Type Name Description System.Type candidateType Returns Type Description System.Boolean Overrides ParameterMapAttribute.IsValidType(Type)"
  },
  "api/ArgentSea.LoggingExtensions.html": {
    "href": "api/ArgentSea.LoggingExtensions.html",
    "title": "Class LoggingExtensions | ArgentSea Docs",
    "keywords": "Class LoggingExtensions The are extension methods for high-performance logging. Inheritance System.Object LoggingExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea Assembly : ArgentSea.dll Syntax public static class LoggingExtensions Methods | Improve this Doc View Source BuildSqlResultsHandlerScope(ILogger, String, Type) Declaration public static IDisposable BuildSqlResultsHandlerScope(this ILogger logger, string procedureName, Type model) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String procedureName System.Type model Returns Type Description System.IDisposable | Improve this Doc View Source CiruitBreakingDbCommand(ILogger, String, String) Declaration public static void CiruitBreakingDbCommand(this ILogger logger, string commandName, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String connectionName | Improve this Doc View Source CiruitBreakingDbConnection(ILogger, String) Declaration public static void CiruitBreakingDbConnection(this ILogger logger, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String connectionName | Improve this Doc View Source CiruitBrokenDbCommandRestored(ILogger, String, String) Declaration public static void CiruitBrokenDbCommandRestored(this ILogger logger, string commandName, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String connectionName | Improve this Doc View Source CiruitBrokenDbCommandTest(ILogger, String, String) Declaration public static void CiruitBrokenDbCommandTest(this ILogger logger, string commandName, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String connectionName | Improve this Doc View Source CiruitBrokenDbConnectionRestored(ILogger, String) Declaration public static void CiruitBrokenDbConnectionRestored(this ILogger logger, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String connectionName | Improve this Doc View Source CiruitBrokenDbConnectionTest(ILogger, String) Declaration public static void CiruitBrokenDbConnectionTest(this ILogger logger, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String connectionName | Improve this Doc View Source CreatedExpressionTreeForModel(ILogger, Type, String, Expression) Declaration public static void CreatedExpressionTreeForModel(this ILogger logger, Type model, string procedureName, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.String procedureName System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source CreatedExpressionTreeForReaderOrdinals(ILogger, Type, Expression) Declaration public static void CreatedExpressionTreeForReaderOrdinals(this ILogger logger, Type model, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source CreatedExpressionTreeForReaderRowData(ILogger, Type, Expression) Declaration public static void CreatedExpressionTreeForReaderRowData(this ILogger logger, Type model, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source CreatedExpressionTreeForReadOutParameters(ILogger, Type, Expression) Declaration public static void CreatedExpressionTreeForReadOutParameters(this ILogger logger, Type model, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source CreatedExpressionTreeForSetInParameters(ILogger, Type, Expression) Declaration public static void CreatedExpressionTreeForSetInParameters(this ILogger logger, Type model, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source CreatedExpressionTreeForSetOutParameters(ILogger, Type, Expression) Declaration public static void CreatedExpressionTreeForSetOutParameters(this ILogger logger, Type model, Expression codeBlock) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model System.Linq.Expressions.Expression codeBlock | Improve this Doc View Source DataReaderIsClosed(ILogger, String, String) Declaration public static void DataReaderIsClosed(this ILogger logger, string sprocName, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String sprocName System.String connectionName | Improve this Doc View Source DataReaderIsNull(ILogger, String, String) Declaration public static void DataReaderIsNull(this ILogger logger, string sprocName, string connectionName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String sprocName System.String connectionName | Improve this Doc View Source NullShardChildArguments<TShard, TRecord, TChild>(ILogger, String, ShardChild<TShard, TRecord, TChild>) Declaration public static void NullShardChildArguments<TShard, TRecord, TChild>(this ILogger logger, string propertyName, ShardChild<TShard, TRecord, TChild> shardChild) where TShard : IComparable where TRecord : IComparable where TChild : IComparable Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName ShardChild <TShard, TRecord, TChild> shardChild Type Parameters Name Description TShard TRecord TChild | Improve this Doc View Source NullShardKeyArguments<TShard, TRecord>(ILogger, String, ShardKey<TShard, TRecord>) Declaration public static void NullShardKeyArguments<TShard, TRecord>(this ILogger logger, string propertyName, ShardKey<TShard, TRecord> shardKey) where TShard : IComparable where TRecord : IComparable Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName ShardKey <TShard, TRecord> shardKey Type Parameters Name Description TShard TRecord | Improve this Doc View Source RequiredPropertyIsDbNull(ILogger, String, String) Declaration public static void RequiredPropertyIsDbNull(this ILogger logger, string modelName, string parameterName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String modelName System.String parameterName | Improve this Doc View Source RetryingDbCommand(ILogger, String, String, Int32, Exception) Declaration public static void RetryingDbCommand(this ILogger logger, string commandName, string connectionName, int attemptCount, Exception exception) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String connectionName System.Int32 attemptCount System.Exception exception | Improve this Doc View Source RetryingDbConnection(ILogger, String, Int32, Exception) Declaration public static void RetryingDbConnection(this ILogger logger, string connectionName, int attemptCount, Exception exception) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String connectionName System.Int32 attemptCount System.Exception exception | Improve this Doc View Source SqlFieldNotFound(ILogger, String, Type) Declaration public static void SqlFieldNotFound(this ILogger logger, string columnName, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String columnName System.Type TModel | Improve this Doc View Source SqlInParametersCacheHit(ILogger, Type) Declaration public static void SqlInParametersCacheHit(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlInParametersCacheMiss(ILogger, Type) Declaration public static void SqlInParametersCacheMiss(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlParameterNotFound(ILogger, String, Type) Declaration public static void SqlParameterNotFound(this ILogger logger, string parameterName, Type propertyType) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String parameterName System.Type propertyType | Improve this Doc View Source SqlReaderCacheHit(ILogger, Type) Declaration public static void SqlReaderCacheHit(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlReaderCacheMiss(ILogger, Type) Declaration public static void SqlReaderCacheMiss(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlReadOutParametersCacheHit(ILogger, Type) Declaration public static void SqlReadOutParametersCacheHit(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlReadOutParametersCacheMiss(ILogger, Type) Declaration public static void SqlReadOutParametersCacheMiss(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlSetOutParametersCacheHit(ILogger, Type) Declaration public static void SqlSetOutParametersCacheHit(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source SqlSetOutParametersCacheMiss(ILogger, Type) Declaration public static void SqlSetOutParametersCacheMiss(this ILogger logger, Type TModel) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type TModel | Improve this Doc View Source TraceDbCmdExecuted(ILogger, String, String, Int64) Declaration public static void TraceDbCmdExecuted(this ILogger logger, string commandName, string connectionName, long milliseconds) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String connectionName System.Int64 milliseconds | Improve this Doc View Source TraceGetOutMapperProperty(ILogger, String) Declaration public static void TraceGetOutMapperProperty(this ILogger logger, string propertyName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName | Improve this Doc View Source TraceInMapperProperty(ILogger, String) Declaration public static void TraceInMapperProperty(this ILogger logger, string propertyName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName | Improve this Doc View Source TraceRdrMapperProperty(ILogger, String) Declaration public static void TraceRdrMapperProperty(this ILogger logger, string propertyName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName | Improve this Doc View Source TraceSetOutMapperProperty(ILogger, String) Declaration public static void TraceSetOutMapperProperty(this ILogger logger, string propertyName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName | Improve this Doc View Source TraceShardCmdExecuted<TShard>(ILogger, String, String, TShard, Int64) Declaration public static void TraceShardCmdExecuted<TShard>(this ILogger logger, string commandName, string shardSetKey, TShard shardId, long milliseconds) where TShard : IComparable Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String commandName System.String shardSetKey TShard shardId System.Int64 milliseconds Type Parameters Name Description TShard"
  },
  "api-pg/ArgentSea.Pg.PgShardSets-1.html": {
    "href": "api-pg/ArgentSea.Pg.PgShardSets-1.html",
    "title": "Class PgShardSets<TShard> | ArgentSea Docs",
    "keywords": "Class PgShardSets<TShard> This configuration class contains the configuration information for a shard set. Inheritance System.Object ShardDataStores <TShard, PgShardConnectionOptions <TShard>> PgShardSets<TShard> Inherited Members ShardDataStores<TShard, PgShardConnectionOptions<TShard>>.ShardSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgShardSets<TShard> : ShardDataStores<TShard, PgShardConnectionOptions<TShard>> where TShard : IComparable Type Parameters Name Description TShard Constructors | Improve this Doc View Source PgShardSets(IOptions<PgShardConnectionOptions<TShard>>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<PgShardSets<TShard>>) Declaration public PgShardSets(IOptions<PgShardConnectionOptions<TShard>> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<PgShardSets<TShard>> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < PgShardConnectionOptions <TShard>> configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions Microsoft.Extensions.Logging.ILogger < PgShardSets <TShard>> logger"
  },
  "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.html": {
    "href": "api-sql/ArgentSea.Sql.SqlShardConnectionOptions-1.html",
    "title": "Class SqlShardConnectionOptions<TShard> | ArgentSea Docs",
    "keywords": "Class SqlShardConnectionOptions<TShard> This options class contains the shard dataset configuration information. Inheritance System.Object SqlShardConnectionOptions<TShard> Implements IShardDataConfigurationOptions <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlShardConnectionOptions<TShard> : IShardDataConfigurationOptions<TShard> where TShard : IComparable Type Parameters Name Description TShard Properties | Improve this Doc View Source ShardSetsInternal Declaration public IShardConnectionsConfiguration<TShard>[] ShardSetsInternal { get; } Property Value Type Description IShardConnectionsConfiguration <TShard>[] | Improve this Doc View Source SqlShardSets Declaration public SqlShardConnectionOptions<TShard>.SqlShardConnectionsConfiguration[] SqlShardSets { get; set; } Property Value Type Description SqlShardConnectionOptions.SqlShardConnectionsConfiguration <>[] Implements IShardDataConfigurationOptions<TShard>"
  },
  "api-sql/ArgentSea.Sql.TvpMapper.html": {
    "href": "api-sql/ArgentSea.Sql.TvpMapper.html",
    "title": "Class TvpMapper | ArgentSea Docs",
    "keywords": "Class TvpMapper This class adds the ability to map model properties to SQL table-valued parameters. Inheritance System.Object TvpMapper Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class TvpMapper Methods | Improve this Doc View Source ToTvpRecord<TModel>(TModel, ILogger) Converts an object instance to a SqlMetaData instance. To convert an object list to an table-value input parameter, use: var prm = lst.ConvertAll(x => MapToTableParameterRecord(x)); Declaration public static SqlDataRecord ToTvpRecord<TModel>(TModel model, ILogger logger) where TModel : class Parameters Type Name Description TModel model An object model instance. The property values are provided as table row values. Microsoft.Extensions.Logging.ILogger logger Returns Type Description Microsoft.SqlServer.Server.SqlDataRecord A SqlMetaData object. A list of these can be used as a Sql table-valued parameter. Type Parameters Name Description TModel The type of the model object. The \"MapTo\" attributes are used to create the Sql metadata and columns. The object property order become the column order."
  },
  "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.html": {
    "href": "api-pg/ArgentSea.Pg.PgShardConnectionOptions-1.html",
    "title": "Class PgShardConnectionOptions<TShard> | ArgentSea Docs",
    "keywords": "Class PgShardConnectionOptions<TShard> This options class contains the shard dataset configuration information. Inheritance System.Object PgShardConnectionOptions<TShard> Implements IShardDataConfigurationOptions <TShard> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgShardConnectionOptions<TShard> : IShardDataConfigurationOptions<TShard> where TShard : IComparable Type Parameters Name Description TShard Properties | Improve this Doc View Source PgShardSets Declaration public PgShardConnectionOptions<TShard>.PgShardConnectionsConfiguration[] PgShardSets { get; set; } Property Value Type Description PgShardConnectionOptions.PgShardConnectionsConfiguration <>[] | Improve this Doc View Source ShardSetsInternal Declaration public IShardConnectionsConfiguration<TShard>[] ShardSetsInternal { get; } Property Value Type Description IShardConnectionsConfiguration <TShard>[] Implements IShardDataConfigurationOptions<TShard>"
  },
  "api-sql/ArgentSea.Sql.SqlShardSets-1.html": {
    "href": "api-sql/ArgentSea.Sql.SqlShardSets-1.html",
    "title": "Class SqlShardSets<TShard> | ArgentSea Docs",
    "keywords": "Class SqlShardSets<TShard> This configuration class contains the configuration information for a shard set. Inheritance System.Object ShardDataStores <TShard, SqlShardConnectionOptions <TShard>> SqlShardSets<TShard> Inherited Members ShardDataStores<TShard, SqlShardConnectionOptions<TShard>>.ShardSets System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlShardSets<TShard> : ShardDataStores<TShard, SqlShardConnectionOptions<TShard>> where TShard : IComparable Type Parameters Name Description TShard Constructors | Improve this Doc View Source SqlShardSets(IOptions<SqlShardConnectionOptions<TShard>>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlShardSets<TShard>>) Declaration public SqlShardSets(IOptions<SqlShardConnectionOptions<TShard>> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<SqlShardSets<TShard>> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < SqlShardConnectionOptions <TShard>> configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions Microsoft.Extensions.Logging.ILogger < SqlShardSets <TShard>> logger"
  },
  "api-pg/Microsoft.Extensions.DependencyInjection.PgServiceBuilderExtensions.html": {
    "href": "api-pg/Microsoft.Extensions.DependencyInjection.PgServiceBuilderExtensions.html",
    "title": "Class PgServiceBuilderExtensions | ArgentSea Docs",
    "keywords": "Class PgServiceBuilderExtensions This static class adds the injectable PostgreSQL data services into the services collection. Inheritance System.Object PgServiceBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : ArgentSea.Pg.dll Syntax public static class PgServiceBuilderExtensions Methods | Improve this Doc View Source AddPgServices(IServiceCollection, IConfiguration) Loads configuration into injectable Options and the DbDataStores service. This overload does not load ShardSets. ILogger service should have already be created. Declaration public static IServiceCollection AddPgServices(this IServiceCollection services, IConfiguration config) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Microsoft.Extensions.Configuration.IConfiguration config Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddPgServices<TShard>(IServiceCollection, IConfiguration) Loads configuration into injectable Options and the DbDataStores and ShardDataStores services. ILogger service should have already be created. Declaration public static IServiceCollection AddPgServices<TShard>(this IServiceCollection services, IConfiguration config) where TShard : IComparable Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Microsoft.Extensions.Configuration.IConfiguration config Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Type Parameters Name Description TShard"
  },
  "api-pg/ArgentSea.Pg.DataProviderServiceFactory.html": {
    "href": "api-pg/ArgentSea.Pg.DataProviderServiceFactory.html",
    "title": "Class DataProviderServiceFactory | ArgentSea Docs",
    "keywords": "Class DataProviderServiceFactory This class is a provider-specific resouce to enable provider-neutral code to execute. It is unlikely that you would reference this in consumer code. Inheritance System.Object DataProviderServiceFactory Implements IDataProviderServiceFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class DataProviderServiceFactory : IDataProviderServiceFactory Methods | Improve this Doc View Source GetIsErrorTransient(Exception) Declaration public bool GetIsErrorTransient(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean | Improve this Doc View Source NewCommand(String, DbConnection) Declaration public DbCommand NewCommand(string storedProcedureName, DbConnection connection) Parameters Type Name Description System.String storedProcedureName System.Data.Common.DbConnection connection Returns Type Description System.Data.Common.DbCommand | Improve this Doc View Source NewConnection(String) Declaration public DbConnection NewConnection(string connectionString) Parameters Type Name Description System.String connectionString Returns Type Description System.Data.Common.DbConnection | Improve this Doc View Source SetParameters(DbCommand, DbParameterCollection) Declaration public void SetParameters(DbCommand cmd, DbParameterCollection parameters) Parameters Type Name Description System.Data.Common.DbCommand cmd System.Data.Common.DbParameterCollection parameters Implements IDataProviderServiceFactory"
  },
  "api-pg/ArgentSea.Pg.PgDatabases.html": {
    "href": "api-pg/ArgentSea.Pg.PgDatabases.html",
    "title": "Class PgDatabases | ArgentSea Docs",
    "keywords": "Class PgDatabases This class manages the non-sharded SQL database connections. Inheritance System.Object DbDataStores < PgDbConnectionOptions > PgDatabases Inherited Members DbDataStores<PgDbConnectionOptions>.DbConnections System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public class PgDatabases : DbDataStores<PgDbConnectionOptions> Constructors | Improve this Doc View Source PgDatabases(IOptions<PgDbConnectionOptions>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<PgDatabases>) Declaration public PgDatabases(IOptions<PgDbConnectionOptions> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<PgDatabases> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < PgDbConnectionOptions > configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions Microsoft.Extensions.Logging.ILogger < PgDatabases > logger"
  },
  "api-sql/ArgentSea.Sql.SqlDatabases.html": {
    "href": "api-sql/ArgentSea.Sql.SqlDatabases.html",
    "title": "Class SqlDatabases | ArgentSea Docs",
    "keywords": "Class SqlDatabases This class manages the non-sharded SQL database connections. Inheritance System.Object DbDataStores < SqlDbConnectionOptions > SqlDatabases Inherited Members DbDataStores<SqlDbConnectionOptions>.DbConnections System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class SqlDatabases : DbDataStores<SqlDbConnectionOptions> Constructors | Improve this Doc View Source SqlDatabases(IOptions<SqlDbConnectionOptions>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlDatabases>) Declaration public SqlDatabases(IOptions<SqlDbConnectionOptions> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<SqlDatabases> logger) Parameters Type Name Description Microsoft.Extensions.Options.IOptions < SqlDbConnectionOptions > configOptions Microsoft.Extensions.Options.IOptions < DataSecurityOptions > securityOptions Microsoft.Extensions.Options.IOptions < DataResilienceOptions > resilienceStrategiesOptions Microsoft.Extensions.Logging.ILogger < SqlDatabases > logger"
  },
  "api-sql/ArgentSea.Sql.DataProviderServiceFactory.html": {
    "href": "api-sql/ArgentSea.Sql.DataProviderServiceFactory.html",
    "title": "Class DataProviderServiceFactory | ArgentSea Docs",
    "keywords": "Class DataProviderServiceFactory This class is a provider-specific resouce to enable provider-neutral code to execute. It is unlikely that you would reference this in consumer code. Inheritance System.Object DataProviderServiceFactory Implements IDataProviderServiceFactory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public class DataProviderServiceFactory : IDataProviderServiceFactory Methods | Improve this Doc View Source GetIsErrorTransient(Exception) Declaration public bool GetIsErrorTransient(Exception exception) Parameters Type Name Description System.Exception exception Returns Type Description System.Boolean | Improve this Doc View Source NewCommand(String, DbConnection) Declaration public DbCommand NewCommand(string storedProcedureName, DbConnection connection) Parameters Type Name Description System.String storedProcedureName System.Data.Common.DbConnection connection Returns Type Description System.Data.Common.DbCommand | Improve this Doc View Source NewConnection(String) Declaration public DbConnection NewConnection(string connectionString) Parameters Type Name Description System.String connectionString Returns Type Description System.Data.Common.DbConnection | Improve this Doc View Source SetParameters(DbCommand, DbParameterCollection) Declaration public void SetParameters(DbCommand cmd, DbParameterCollection parameters) Parameters Type Name Description System.Data.Common.DbCommand cmd System.Data.Common.DbParameterCollection parameters Implements IDataProviderServiceFactory"
  },
  "api-sql/Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.html": {
    "href": "api-sql/Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.html",
    "title": "Class SqlServiceBuilderExtensions | ArgentSea Docs",
    "keywords": "Class SqlServiceBuilderExtensions This static class adds the injectable SQL data services into the services collection. Inheritance System.Object SqlServiceBuilderExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Microsoft.Extensions.DependencyInjection Assembly : ArgentSea.Sql.dll Syntax public static class SqlServiceBuilderExtensions Methods | Improve this Doc View Source AddSqlServices(IServiceCollection, IConfiguration) Loads configuration into injectable Options and the DbDataStores service. This overload does not load ShardSets. ILogger service should have already be created. Declaration public static IServiceCollection AddSqlServices(this IServiceCollection services, IConfiguration config) Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Microsoft.Extensions.Configuration.IConfiguration config Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection | Improve this Doc View Source AddSqlServices<TShard>(IServiceCollection, IConfiguration) Loads configuration into injectable Options and the DbDataStores and ShardDataStores services. ILogger service should have already be created. Declaration public static IServiceCollection AddSqlServices<TShard>(this IServiceCollection services, IConfiguration config) where TShard : IComparable Parameters Type Name Description Microsoft.Extensions.DependencyInjection.IServiceCollection services Microsoft.Extensions.Configuration.IConfiguration config Returns Type Description Microsoft.Extensions.DependencyInjection.IServiceCollection Type Parameters Name Description TShard"
  },
  "api-sql/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api-sql/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | ArgentSea Docs",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes SqlServiceBuilderExtensions This static class adds the injectable SQL data services into the services collection."
  },
  "api-pg/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api-pg/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | ArgentSea Docs",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes PgServiceBuilderExtensions This static class adds the injectable PostgreSQL data services into the services collection."
  },
  "api-pg/ArgentSea.Pg.PgParameterCollectionExtensions.html": {
    "href": "api-pg/ArgentSea.Pg.PgParameterCollectionExtensions.html",
    "title": "Class PgParameterCollectionExtensions | ArgentSea Docs",
    "keywords": "Class PgParameterCollectionExtensions This class adds extension methods which simplify setting PostgreSQL parameter values from .NET types. Inheritance System.Object PgParameterCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg Assembly : ArgentSea.Pg.dll Syntax public static class PgParameterCollectionExtensions Methods | Improve this Doc View Source AddPgArrayInParameter<T>(DbParameterCollection, String, Array) Creates a parameter for providing a variable-sized byte array to a stored procedure. A null reference will save DBNull. Declaration public static DbParameterCollection AddPgArrayInParameter<T>(this DbParameterCollection prms, string parameterName, Array value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Array value An array, or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. Type Parameters Name Description T | Improve this Doc View Source AddPgArrayOutParameter(DbParameterCollection, String) Creates a parameter for obtaining a variable-sized byte array from a stored procedure. Declaration public static DbParameterCollection AddPgArrayOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBigintInParameter(DbParameterCollection, String, Int64) Creates a parameter for providing a 64-bit signed integer (long) to a stored procedure. Declaration public static DbParameterCollection AddPgBigintInParameter(this DbParameterCollection prms, string parameterName, long value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int64 value A 64-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBigintInParameter(DbParameterCollection, String, Nullable<Int64>) Creates a parameter for providing a 64-bit signed integer (long) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgBigintInParameter(this DbParameterCollection prms, string parameterName, long? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Int64 > value A 64-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBigintOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 64-bit signed integer (long) from a stored procedure. Declaration public static DbParameterCollection AddPgBigintOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBooleanInParameter(DbParameterCollection, String, Boolean) Creates a parameter for providing a boolean value (bool) to a stored procedure. Declaration public static DbParameterCollection AddPgBooleanInParameter(this DbParameterCollection prms, string parameterName, bool value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Boolean value A boolean value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBooleanInParameter(DbParameterCollection, String, Nullable<Boolean>) Creates a parameter for providing a boolean value (bool) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgBooleanInParameter(this DbParameterCollection prms, string parameterName, bool? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Boolean > value A boolean value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgBooleanOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a boolean value (bool) from a stored procedure. Declaration public static DbParameterCollection AddPgBooleanOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgByteaInParameter(DbParameterCollection, String, Byte[], Int32) Creates a parameter for providing a variable-sized byte array to a stored procedure. A null reference will save DBNull. Declaration public static DbParameterCollection AddPgByteaInParameter(this DbParameterCollection prms, string parameterName, byte[] value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Byte [] value An array of bytes, or null. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgByteaOutParameter(DbParameterCollection, String, Int32) Creates a parameter for obtaining a variable-sized byte array from a stored procedure. Declaration public static DbParameterCollection AddPgByteaOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgCharInParameter(DbParameterCollection, String, String, Int32) Creates parameter for providing a fixed-length string or a DBNull value to a stored procedure. Declaration public static DbParameterCollection AddPgCharInParameter(this DbParameterCollection prms, string parameterName, string value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgCharOutParameter(DbParameterCollection, String, Int32) Creates parameter for obtaining a fixed-length string from a stored procedure. Declaration public static DbParameterCollection AddPgCharOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDateInParameter(DbParameterCollection, String, DateTime) Creates a parameter for providing a date (sans time) to a stored procedure. Declaration public static DbParameterCollection AddPgDateInParameter(this DbParameterCollection prms, string parameterName, DateTime value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.DateTime value A DateTime value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDateInParameter(DbParameterCollection, String, Nullable<DateTime>) Creates a parameter for providing a date (sans time) or DbNull to a stored procedure. Declaration public static DbParameterCollection AddPgDateInParameter(this DbParameterCollection prms, string parameterName, DateTime? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.DateTime > value A DateTime value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDateOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a date (sans time) from a stored procedure. Declaration public static DbParameterCollection AddPgDateOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDoubleInParameter(DbParameterCollection, String, Double) Creates a parameter for providing a 64-bit floating-point value (double) to a stored procedure. NaN will be converted to DbNull. Declaration public static DbParameterCollection AddPgDoubleInParameter(this DbParameterCollection prms, string parameterName, double value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Double value A 64-bit floating-point value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDoubleInParameter(DbParameterCollection, String, Nullable<Double>) Creates a parameter for providing a 64-bit floating-point value (double) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgDoubleInParameter(this DbParameterCollection prms, string parameterName, double? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Double > value A 64-bit floating-point value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgDoubleOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 64-bit floating-point value (double) from a stored procedure. Declaration public static DbParameterCollection AddPgDoubleOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgHstoreInParameter(DbParameterCollection, String, IDictionary<String, String>, Int32) Creates a parameter for providing a variable-sized byte array to a stored procedure. A null reference will save DBNull. Declaration public static DbParameterCollection AddPgHstoreInParameter(this DbParameterCollection prms, string parameterName, IDictionary<string, string> value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Collections.Generic.IDictionary < System.String , System.String > value An array of bytes, or null. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgHstoreOutParameter(DbParameterCollection, String, Int32) Creates a parameter for obtaining a variable-sized byte array from a stored procedure. Declaration public static DbParameterCollection AddPgHstoreOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntegerInParameter(DbParameterCollection, String, Int32) Creates a parameter for providing a 32-bit signed integer (int) to a stored procedure. Declaration public static DbParameterCollection AddPgIntegerInParameter(this DbParameterCollection prms, string parameterName, int value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int32 value A 32-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntegerInParameter(DbParameterCollection, String, Nullable<Int32>) Creates a parameter for providing a 32-bit signed integer (int) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgIntegerInParameter(this DbParameterCollection prms, string parameterName, int? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Int32 > value A 32-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntegerOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (int) from a stored procedure. Declaration public static DbParameterCollection AddPgIntegerOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgInternalCharInParameter(DbParameterCollection, String, Byte) Creates a parameter for providing a 8-bit unsigned integer (byte) to a stored procedure. Declaration public static DbParameterCollection AddPgInternalCharInParameter(this DbParameterCollection prms, string parameterName, byte value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Byte value An unsigned 8-bit integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgInternalCharInParameter(DbParameterCollection, String, Nullable<Byte>) Creates a parameter for providing a 8-bit unsigned integer (byte) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgInternalCharInParameter(this DbParameterCollection prms, string parameterName, byte? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Byte > value An unsigned 8-bit integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgInternalCharOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (byte) from a stored procedure. Declaration public static DbParameterCollection AddPgInternalCharOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntervalInParameter(DbParameterCollection, String, Nullable<TimeSpan>) Creates a parameter for providing a time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgIntervalInParameter(this DbParameterCollection prms, string parameterName, TimeSpan? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.TimeSpan > value A time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntervalInParameter(DbParameterCollection, String, TimeSpan) Creates a parameter for providing a time value to a stored procedure. Declaration public static DbParameterCollection AddPgIntervalInParameter(this DbParameterCollection prms, string parameterName, TimeSpan value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.TimeSpan value A time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgIntervalOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a time value from a stored procedure. Declaration public static DbParameterCollection AddPgIntervalOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgMoneyInParameter(DbParameterCollection, String, Decimal) Creates a parameter for providing a decmial value to a stored procedure. Declaration public static DbParameterCollection AddPgMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Decimal value A decmial value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgMoneyInParameter(DbParameterCollection, String, Nullable<Decimal>) Creates a parameter for providing a decmial value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Decimal > value A decmial value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgMoneyOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a decmial value from a stored procedure. Declaration public static DbParameterCollection AddPgMoneyOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgNumericInParameter(DbParameterCollection, String, Decimal, Byte, Byte) Creates a parameter for providing a decmial value to a stored procedure. Declaration public static DbParameterCollection AddPgNumericInParameter(this DbParameterCollection prms, string parameterName, decimal value, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Decimal value A decmial value . System.Byte precision System.Byte scale Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgNumericInParameter(DbParameterCollection, String, Nullable<Decimal>, Byte, Byte) Creates a parameter for providing a decmial value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgNumericInParameter(this DbParameterCollection prms, string parameterName, decimal? value, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Decimal > value A decmial value or null. System.Byte precision System.Byte scale Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgNumericOutParameter(DbParameterCollection, String, Byte, Byte) Creates an output parameter for retrieving a decmial value from a stored procedure. Declaration public static DbParameterCollection AddPgNumericOutParameter(this DbParameterCollection prms, string parameterName, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Byte precision Specifies the maximum number of digits used to store the number (inclusive of both sides of the decimal point). System.Byte scale Specifies the number of digits used in the fractional portion of the number (i.e. digits to the right of the decimal point). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgRealInParameter(DbParameterCollection, String, Nullable<Single>) Creates a parameter for providing a 32-bit floating-point value (float) or DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgRealInParameter(this DbParameterCollection prms, string parameterName, float? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Single > value A 32-bit floating point value (float) or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgRealInParameter(DbParameterCollection, String, Single) Creates a parameter for providing a 32-bit floating-point value (float) to a stored procedure. NaN will be converted to DbNull. Declaration public static DbParameterCollection AddPgRealInParameter(this DbParameterCollection prms, string parameterName, float value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Single value A 32-bit floating point value (float). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgRealOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit floating-point value (float) from a stored procedure. Declaration public static DbParameterCollection AddPgRealOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgSmallintInParameter(DbParameterCollection, String, Int16) Creates a parameter for providing a 16-bit signed integer (short) to a stored procedure. Declaration public static DbParameterCollection AddPgSmallintInParameter(this DbParameterCollection prms, string parameterName, short value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int16 value A 16-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgSmallintInParameter(DbParameterCollection, String, Nullable<Int16>) Creates a parameter for providing a 16-bit signed integer (short) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgSmallintInParameter(this DbParameterCollection prms, string parameterName, short? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Int16 > value A 16-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgSmallintOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (short) from a stored procedure. Declaration public static DbParameterCollection AddPgSmallintOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTextInParameter(DbParameterCollection, String, String) Creates parameter for providing a string or a DBNull value to a stored procedure, which is converted to the target ANSI code page (if possible). Declaration public static DbParameterCollection AddPgTextInParameter(this DbParameterCollection prms, string parameterName, string value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTextOutParameter(DbParameterCollection, String) Creates parameter for obtaining a string from a stored procedure, which has been converted from the source ANSI code page. Declaration public static DbParameterCollection AddPgTextOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeInParameter(DbParameterCollection, String, Nullable<TimeSpan>) Creates a parameter for providing a time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeInParameter(this DbParameterCollection prms, string parameterName, TimeSpan? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.TimeSpan > value A time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeInParameter(DbParameterCollection, String, TimeSpan) Creates a parameter for providing a time value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeInParameter(this DbParameterCollection prms, string parameterName, TimeSpan value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.TimeSpan value A time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a time value from a stored procedure. Declaration public static DbParameterCollection AddPgTimeOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampInParameter(DbParameterCollection, String, DateTime) Creates a parameter for providing a date and time value to a stored procedure. Declaration public static DbParameterCollection AddPgTimestampInParameter(this DbParameterCollection prms, string parameterName, DateTime value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.DateTime value A date and time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampInParameter(DbParameterCollection, String, Nullable<DateTime>) Creates a parameter for providing a date and time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgTimestampInParameter(this DbParameterCollection prms, string parameterName, DateTime? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.DateTime > value A date and time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a date and time value from a stored procedure. Declaration public static DbParameterCollection AddPgTimestampOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampTZInParameter(DbParameterCollection, String, DateTimeOffset) Creates a parameter for providing a DateTimeOffset value to a stored procedure. Declaration public static DbParameterCollection AddPgTimestampTZInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.DateTimeOffset value A DateTimeOffset value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampTzInParameter(DbParameterCollection, String, Nullable<DateTimeOffset>) Creates a parameter for providing a DateTimeOffset or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgTimestampTzInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.DateTimeOffset > value A DateTimeOffset value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimestampTzOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a DateTimeOffset from a stored procedure. Declaration public static DbParameterCollection AddPgTimestampTzOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeTzInParameter(DbParameterCollection, String, DateTimeOffset) Creates a parameter for providing a time value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeTzInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.DateTimeOffset value A time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeTzInParameter(DbParameterCollection, String, Nullable<DateTimeOffset>) Creates a parameter for providing a time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeTzInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.DateTimeOffset > value A time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeTzInParameter(DbParameterCollection, String, Nullable<TimeSpan>) Creates a parameter for providing a time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeTzInParameter(this DbParameterCollection prms, string parameterName, TimeSpan? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.TimeSpan > value A time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeTzInParameter(DbParameterCollection, String, TimeSpan) Creates a parameter for providing a time value to a stored procedure. Declaration public static DbParameterCollection AddPgTimeTzInParameter(this DbParameterCollection prms, string parameterName, TimeSpan value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.TimeSpan value A time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgTimeTzOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a time value from a stored procedure. Declaration public static DbParameterCollection AddPgTimeTzOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgUuidInParameter(DbParameterCollection, String, Guid) Creates a parameter for providing a Guid or DBNull (via Guid.Empty) to a stored procedure. Declaration public static DbParameterCollection AddPgUuidInParameter(this DbParameterCollection prms, string parameterName, Guid value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Guid value A Guid value. Will convert Guild.Empty to DBNull. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgUuidInParameter(DbParameterCollection, String, Nullable<Guid>) Creates a parameter for providing a Guid or DBNull (via null value) to a stored procedure. Declaration public static DbParameterCollection AddPgUuidInParameter(this DbParameterCollection prms, string parameterName, Guid? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Nullable < System.Guid > value Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgUuidOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a Guid from a stored procedure. Declaration public static DbParameterCollection AddPgUuidOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgVarcharInParameter(DbParameterCollection, String, String, Int32) Creates parameter for providing a string or a DBNull value to a stored procedure. Declaration public static DbParameterCollection AddPgVarcharInParameter(this DbParameterCollection prms, string parameterName, string value, int maxLength) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 maxLength This should match the size of the parameter, not the size of the input string (and certainly not the number of bytes). For nvarchar(max) parameters, specify -1. Setting the value correctly will help avoid plan cache pollution (when not using stored procedures) and minimize memory buffer allocations. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddPgVarcharOutParameter(DbParameterCollection, String, Int32) Creates parameter for obtaining a string from a stored procedure. Declaration public static DbParameterCollection AddPgVarcharOutParameter(this DbParameterCollection prms, string parameterName, int maxLength) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “:”, it will be automatically pre-pended. System.Int32 maxLength Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended."
  },
  "api-pg/ArgentSea.Pg.Test.html": {
    "href": "api-pg/ArgentSea.Pg.Test.html",
    "title": "Namespace ArgentSea.Pg.Test | ArgentSea Docs",
    "keywords": "Namespace ArgentSea.Pg.Test Classes UnitTest1"
  },
  "api-sql/ArgentSea.Sql.SqlLoggingExtensions.html": {
    "href": "api-sql/ArgentSea.Sql.SqlLoggingExtensions.html",
    "title": "Class SqlLoggingExtensions | ArgentSea Docs",
    "keywords": "Class SqlLoggingExtensions This static class provides the logging extension methods for handling table-valued parameter (TVP) mapping. Inheritance System.Object SqlLoggingExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public static class SqlLoggingExtensions Methods | Improve this Doc View Source BuildTvpScope(ILogger, Type) Declaration public static IDisposable BuildTvpScope(this ILogger logger, Type model) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type model Returns Type Description System.IDisposable | Improve this Doc View Source SqlTvpCacheHit(ILogger, Type) Declaration public static void SqlTvpCacheHit(this ILogger logger, Type modelT) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type modelT | Improve this Doc View Source SqlTvpCacheMiss(ILogger, Type) Declaration public static void SqlTvpCacheMiss(this ILogger logger, Type modelT) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.Type modelT | Improve this Doc View Source TraceTvpMapperProperty(ILogger, String) Declaration public static void TraceTvpMapperProperty(this ILogger logger, string propertyName) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger System.String propertyName"
  },
  "api-sql/ArgentSea.Sql.SqlLoggingExtensions.SqlEventIdentifier.html": {
    "href": "api-sql/ArgentSea.Sql.SqlLoggingExtensions.SqlEventIdentifier.html",
    "title": "Enum SqlLoggingExtensions.SqlEventIdentifier | ArgentSea Docs",
    "keywords": "Enum SqlLoggingExtensions.SqlEventIdentifier Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public enum SqlEventIdentifier Fields Name Description MapperTvpCacheStatus MapperTvpTrace"
  },
  "api-sql/ArgentSea.Sql.Test.ConfigurationTests.html": {
    "href": "api-sql/ArgentSea.Sql.Test.ConfigurationTests.html",
    "title": "Class ConfigurationTests | ArgentSea Docs",
    "keywords": "Class ConfigurationTests Inheritance System.Object ConfigurationTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql.Test Assembly : ArgentSea.Sql.Test.dll Syntax public class ConfigurationTests Methods | Improve this Doc View Source TestConfigurationOptions() Declaration [Fact] public void TestConfigurationOptions() | Improve this Doc View Source TestServiceBuilder() Declaration [Fact] public void TestServiceBuilder()"
  },
  "api-pg/ArgentSea.Pg.Test.UnitTest1.html": {
    "href": "api-pg/ArgentSea.Pg.Test.UnitTest1.html",
    "title": "Class UnitTest1 | ArgentSea Docs",
    "keywords": "Class UnitTest1 Inheritance System.Object UnitTest1 Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Pg.Test Assembly : ArgentSea.Pg.Test.dll Syntax public class UnitTest1 Methods | Improve this Doc View Source TestMethod1() Declaration [Fact] public void TestMethod1()"
  },
  "api-sql/ArgentSea.Sql.Test.html": {
    "href": "api-sql/ArgentSea.Sql.Test.html",
    "title": "Namespace ArgentSea.Sql.Test | ArgentSea Docs",
    "keywords": "Namespace ArgentSea.Sql.Test Classes ConfigurationTests MappingTests"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to ArgentSea Docs! | ArgentSea Docs",
    "keywords": "Welcome to ArgentSea Docs! The documentation is actively being worked on. Clearly, it is currently under construction. Start with the QuickStart . You can find the most information in the APIsection . That is the area of current focus. The Getting Started tutorials will be coming next."
  },
  "api-sql/ArgentSea.Sql.Test.MappingTests.html": {
    "href": "api-sql/ArgentSea.Sql.Test.MappingTests.html",
    "title": "Class MappingTests | ArgentSea Docs",
    "keywords": "Class MappingTests Inheritance System.Object MappingTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql.Test Assembly : ArgentSea.Sql.Test.dll Syntax public class MappingTests Methods | Improve this Doc View Source ValidateInParameterMapper() Declaration [Fact] public void ValidateInParameterMapper() | Improve this Doc View Source ValidateInParameterNullMapper() Declaration [Fact] public void ValidateInParameterNullMapper() | Improve this Doc View Source ValidateNullSqlDataReader() Declaration [Fact] public void ValidateNullSqlDataReader() | Improve this Doc View Source ValidateOutNullParameterReader() Declaration [Fact] public void ValidateOutNullParameterReader() | Improve this Doc View Source ValidateOutParameterCreator() Declaration [Fact] public void ValidateOutParameterCreator() | Improve this Doc View Source ValidateOutParameterReader() Declaration [Fact] public void ValidateOutParameterReader() | Improve this Doc View Source ValidateSqlDataReader() Declaration [Fact] public void ValidateSqlDataReader() | Improve this Doc View Source ValidateSqlMetadataMapper() Declaration [Fact] public void ValidateSqlMetadataMapper() | Improve this Doc View Source ValidateSqlMetadataNullMapper() Declaration [Fact] public void ValidateSqlMetadataNullMapper()"
  },
  "tutorials/setup.html": {
    "href": "tutorials/setup.html",
    "title": "ArgentSea Setup | ArgentSea Docs",
    "keywords": "ArgentSea Setup Nuget Package The first, obvious step is to add a reference to the relevant ArgentSea nuget package. These are provider-specific. Current there are two: ArgentSea for SQL Server ArgentSea for PostgreSQL Both packages include a reference to the base ArgentSea shared package, so it is not necessary to include that separately, though you may need to referece it in your code. You may be able to include multiple provider packages in your progress (this is not a tested scenario), but you cannot have a single class that includes provider attributes from different providers. If you need to reference different database providers (i.e. both SQL Server and PostgreSQL), it would be best to use different projects. Simplifying Object References Of course, the ArgentSea framework does not know in advance the data types used in your architecture. You provide this information using generics when you compile your project. Since the ArgentSea objects are used frequently, however, this can be unnecessarily verbose. To simplify accessing the ArgentSea objects in your code, we suggest either Creating a derived class that declares your data types Or adding a using statement in each data access class Using Derived classes Using using"
  },
  "documentation/faqs.html": {
    "href": "documentation/faqs.html",
    "title": "Frequently Asked Questions | ArgentSea Docs",
    "keywords": "Frequently Asked Questions Q: What happens if ArgentSea isn’t flexible enough to do what I need it to do? A: ArgentSea is a simple layer over ADO.Net. You can easily amend its functionality by simply coding your unique requirements directly in ADO.Net (as you would have done without the framework). For example, if you are using the Mapper and the model attributes add a database parameter that you don’t want; just remove the parameter after calling the mapper! Or set the parameters yourself. Setting parameters, invoking queries, and collecting results are all separate processes, so you can skip any one that has unique requirements, and still use any of the others. You can, for example, create parameters using the Mapper and invoke a query using your own Command object. Q: Why is an approach that exclusively uses stored procedures better? A: Stored procedures offer performance, manageability, and security benefits. Stored procedures do not require the database engine to parse your SQL string, so this can have a performance benefit. In most cases, the benefit is very small, however SQL Server’s compiled procedures offer a potentially dramatic improvement. If your application only has EXECUTE permission to stored procedures, then it becomes possible for DBA to comprehensivly determine which tables/views/columns are access by the application. Knowing this allows the database to be refactored and improved much less concern about unintended consequences. With dynamic SQL, DBAs must resort to traces or logs to see what activity is being performed, which makes troubleshooting much harder. When a bad SQL plan is uncovered, the fix can be even harder. Stored procedures, on the other hand, allow the DBA to hint, rewrite, and optimize as necessary. Finally, stored procedures allow DBAs (or data access SMEs) to review and approve data access code changes, also to ensure that indexes exist to support the new queries. Q: How can I make sure that my data is secure? A: Start by hiring an knowledgable DBA. ArgentSea helps in a few ways: ArgentSea’s configuration design helps protect against unsafe storage of login passwords within connection strings. Because it uses stored procedures, users cannot run arbitrary SQL statements. This reduces the opportunity for mistaken SQL statements that corrupt data and SQL injection attacks. Because you can run your application with only EXECUTE permissions, no user would have access to operations that are not explicitly enabled by a procedure."
  },
  "reference/apis.html": {
    "href": "reference/apis.html",
    "title": "API Reference | ArgentSea Docs",
    "keywords": "API Reference Objects shared across providers ArgentSea.Shared SQL Server objects ArgentSea.Sql PostreSQL objects ArgentSea.Pg"
  },
  "api-sql/ArgentSea.Sql.SqlParameterCollectionExtensions.html": {
    "href": "api-sql/ArgentSea.Sql.SqlParameterCollectionExtensions.html",
    "title": "Class SqlParameterCollectionExtensions | ArgentSea Docs",
    "keywords": "Class SqlParameterCollectionExtensions This class adds extension methods which simplify setting SQL parameter values from .NET types. Inheritance System.Object SqlParameterCollectionExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : ArgentSea.Sql Assembly : ArgentSea.Sql.dll Syntax public static class SqlParameterCollectionExtensions Methods | Improve this Doc View Source AddSqlBigIntInParameter(DbParameterCollection, String, Int64) Creates a parameter for providing a 64-bit signed integer (long) to a stored procedure. Declaration public static DbParameterCollection AddSqlBigIntInParameter(this DbParameterCollection prms, string parameterName, long value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int64 value A 64-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBigIntInParameter(DbParameterCollection, String, Nullable<Int64>) Creates a parameter for providing a 64-bit signed integer (long) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlBigIntInParameter(this DbParameterCollection prms, string parameterName, long? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Int64 > value A 64-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBigIntOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 64-bit signed integer (long) from a stored procedure. Declaration public static DbParameterCollection AddSqlBigIntOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBinaryInParameter(DbParameterCollection, String, Byte[], Int32) Creates a parameter for providing a fixed-sized byte array to a stored procedure. A null reference will save DBNull. Declaration public static DbParameterCollection AddSqlBinaryInParameter(this DbParameterCollection prms, string parameterName, byte[] value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Byte [] value An array of bytes, or null. System.Int32 length The fixed number of bytes in the database column. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBinaryOutParameter(DbParameterCollection, String, Int32) Creates a parameter for obtaining a fixed-sized byte array from a stored procedure. Declaration public static DbParameterCollection AddSqlBinaryOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 length The fixed number of bytes in the database column. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBitInParameter(DbParameterCollection, String, Boolean) Creates a parameter for providing a boolean value (bool) to a stored procedure. Declaration public static DbParameterCollection AddSqlBitInParameter(this DbParameterCollection prms, string parameterName, bool value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Boolean value A boolean value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBitInParameter(DbParameterCollection, String, Nullable<Boolean>) Creates a parameter for providing a boolean value (bool) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlBitInParameter(this DbParameterCollection prms, string parameterName, bool? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Boolean > value A boolean value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlBitOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a boolean value (bool) from a stored procedure. Declaration public static DbParameterCollection AddSqlBitOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlCharInParameter(DbParameterCollection, String, String, Int32, Int32) Creates parameter for providing a fixed-length string or a DBNull value to a stored procedure, which is converted to the target ANSI code page (if possible). Declaration public static DbParameterCollection AddSqlCharInParameter(this DbParameterCollection prms, string parameterName, string value, int length, int localeId) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. System.Int32 localeId Specify the code page for ANSI conversions. For example, the value 1033 is U.S. English. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlCharOutParameter(DbParameterCollection, String, Int32, Int32) Creates parameter for obtaining a fixed-length string from a stored procedure, which has been converted from the source ANSI code page. Declaration public static DbParameterCollection AddSqlCharOutParameter(this DbParameterCollection prms, string parameterName, int length, int localeId) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. System.Int32 localeId Specify the code page for ANSI conversions. For example, the value 1033 is U.S. English. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateInParameter(DbParameterCollection, String, DateTime) Creates a parameter for providing a date (sans time) to a stored procedure. Declaration public static DbParameterCollection AddSqlDateInParameter(this DbParameterCollection prms, string parameterName, DateTime value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.DateTime value A DateTime value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateInParameter(DbParameterCollection, String, Nullable<DateTime>) Creates a parameter for providing a date (sans time) or DbNull to a stored procedure. Declaration public static DbParameterCollection AddSqlDateInParameter(this DbParameterCollection prms, string parameterName, DateTime? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.DateTime > value A DateTime value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a date (sans time) from a stored procedure. Declaration public static DbParameterCollection AddSqlDateOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTime2InParameter(DbParameterCollection, String, DateTime) Creates a parameter for providing a date and time value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTime2InParameter(this DbParameterCollection prms, string parameterName, DateTime value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.DateTime value A date and time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTime2InParameter(DbParameterCollection, String, Nullable<DateTime>) Creates a parameter for providing a date and time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTime2InParameter(this DbParameterCollection prms, string parameterName, DateTime? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.DateTime > value A date and time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTime2OutParameter(DbParameterCollection, String) Creates an output parameter for retrieving date and time value from a stored procedure. Declaration public static DbParameterCollection AddSqlDateTime2OutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeInParameter(DbParameterCollection, String, DateTime) Creates a parameter for providing a date and time value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeInParameter(this DbParameterCollection prms, string parameterName, DateTime value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.DateTime value A date and time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeInParameter(DbParameterCollection, String, Nullable<DateTime>) Creates a parameter for providing a date and time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeInParameter(this DbParameterCollection prms, string parameterName, DateTime? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.DateTime > value A date and time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeOffsetInParameter(DbParameterCollection, String, DateTimeOffset) Creates a parameter for providing a DateTimeOffset value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeOffsetInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.DateTimeOffset value A DateTimeOffset value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeOffsetInParameter(DbParameterCollection, String, Nullable<DateTimeOffset>) Creates a parameter for providing a DateTimeOffset or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeOffsetInParameter(this DbParameterCollection prms, string parameterName, DateTimeOffset? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.DateTimeOffset > value A DateTimeOffset value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeOffsetOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a DateTimeOffset from a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeOffsetOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDateTimeOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a date and time value from a stored procedure. Declaration public static DbParameterCollection AddSqlDateTimeOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDecimalInParameter(DbParameterCollection, String, Decimal, Byte, Byte) Creates a parameter for providing a decmial value to a stored procedure. Declaration public static DbParameterCollection AddSqlDecimalInParameter(this DbParameterCollection prms, string parameterName, decimal value, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Decimal value A decmial value . System.Byte precision System.Byte scale Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDecimalInParameter(DbParameterCollection, String, Nullable<Decimal>, Byte, Byte) Creates a parameter for providing a decmial value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlDecimalInParameter(this DbParameterCollection prms, string parameterName, decimal? value, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Decimal > value A decmial value or null. System.Byte precision System.Byte scale Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlDecimalOutParameter(DbParameterCollection, String, Byte, Byte) Creates an output parameter for retrieving a decmial value from a stored procedure. Declaration public static DbParameterCollection AddSqlDecimalOutParameter(this DbParameterCollection prms, string parameterName, byte precision, byte scale) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Byte precision Specifies the maximum number of digits used to store the number (inclusive of both sides of the decimal point). System.Byte scale Specifies the number of digits used in the fractional portion of the number (i.e. digits to the right of the decimal point). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlFloatInParameter(DbParameterCollection, String, Double) Creates a parameter for providing a 64-bit floating-point value (double) to a stored procedure. NaN will be converted to DbNull. Declaration public static DbParameterCollection AddSqlFloatInParameter(this DbParameterCollection prms, string parameterName, double value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Double value A 64-bit floating-point value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlFloatInParameter(DbParameterCollection, String, Nullable<Double>) Creates a parameter for providing a 64-bit floating-point value (double) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlFloatInParameter(this DbParameterCollection prms, string parameterName, double? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Double > value A 64-bit floating-point value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlFloatOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 64-bit floating-point value (double) from a stored procedure. Declaration public static DbParameterCollection AddSqlFloatOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlIntInParameter(DbParameterCollection, String, Int32) Creates a parameter for providing a 32-bit signed integer (int) to a stored procedure. Declaration public static DbParameterCollection AddSqlIntInParameter(this DbParameterCollection prms, string parameterName, int value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 value A 32-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlIntInParameter(DbParameterCollection, String, Nullable<Int32>) Creates a parameter for providing a 32-bit signed integer (int) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlIntInParameter(this DbParameterCollection prms, string parameterName, int? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Int32 > value A 32-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlIntOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (int) from a stored procedure. Declaration public static DbParameterCollection AddSqlIntOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlMoneyInParameter(DbParameterCollection, String, Decimal) Creates a parameter for providing a decmial value to a stored procedure. Declaration public static DbParameterCollection AddSqlMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Decimal value A decmial value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlMoneyInParameter(DbParameterCollection, String, Nullable<Decimal>) Creates a parameter for providing a decmial value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Decimal > value A decmial value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlMoneyOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a decmial value from a stored procedure. Declaration public static DbParameterCollection AddSqlMoneyOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlNCharInParameter(DbParameterCollection, String, String, Int32) Creates parameter for providing a fixed-length string or a DBNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlNCharInParameter(this DbParameterCollection prms, string parameterName, string value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlNCharOutParameter(DbParameterCollection, String, Int32) Creates parameter for obtaining a fixed-length string from a stored procedure. Declaration public static DbParameterCollection AddSqlNCharOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 length Specifies the number of characters in the string. If the original string value is smaller than this length, the returned value will be padded with spaces. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlNVarCharInParameter(DbParameterCollection, String, String, Int32) Creates parameter for providing a string or a DBNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlNVarCharInParameter(this DbParameterCollection prms, string parameterName, string value, int maxLength) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 maxLength This should match the size of the parameter, not the size of the input string (and certainly not the number of bytes). For nvarchar(max) parameters, specify -1. Setting the value correctly will help avoid plan cache pollution (when not using stored procedures) and minimize memory buffer allocations. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlNVarCharOutParameter(DbParameterCollection, String, Int32) Creates parameter for obtaining a string from a stored procedure. Declaration public static DbParameterCollection AddSqlNVarCharOutParameter(this DbParameterCollection prms, string parameterName, int maxLength) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 maxLength Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlRealInParameter(DbParameterCollection, String, Nullable<Single>) Creates a parameter for providing a 32-bit floating-point value (float) or DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlRealInParameter(this DbParameterCollection prms, string parameterName, float? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Single > value A 32-bit floating point value (float) or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlRealInParameter(DbParameterCollection, String, Single) Creates a parameter for providing a 32-bit floating-point value (float) to a stored procedure. NaN will be converted to DbNull. Declaration public static DbParameterCollection AddSqlRealInParameter(this DbParameterCollection prms, string parameterName, float value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Single value A 32-bit floating point value (float). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlRealOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit floating-point value (float) from a stored procedure. Declaration public static DbParameterCollection AddSqlRealOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallIntInParameter(DbParameterCollection, String, Int16) Creates a parameter for providing a 16-bit signed integer (short) to a stored procedure. Declaration public static DbParameterCollection AddSqlSmallIntInParameter(this DbParameterCollection prms, string parameterName, short value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int16 value A 16-bit signed integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallIntInParameter(DbParameterCollection, String, Nullable<Int16>) Creates a parameter for providing a 16-bit signed integer (short) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlSmallIntInParameter(this DbParameterCollection prms, string parameterName, short? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Int16 > value A 16-bit signed integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallIntOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (short) from a stored procedure. Declaration public static DbParameterCollection AddSqlSmallIntOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallMoneyInParameter(DbParameterCollection, String, Decimal) Creates a parameter for providing a decmial value to a stored procedure. Declaration public static DbParameterCollection AddSqlSmallMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Decimal value A decmial value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallMoneyInParameter(DbParameterCollection, String, Nullable<Decimal>) Creates a parameter for providing a decmial value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlSmallMoneyInParameter(this DbParameterCollection prms, string parameterName, decimal? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Decimal > value A decmial value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlSmallMoneyOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a decmial value from a stored procedure. Declaration public static DbParameterCollection AddSqlSmallMoneyOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTableValuedParameter(DbParameterCollection, String, IEnumerable<SqlDataRecord>) Creates a parameter for providing a user-defined table to a stored procedure. Declaration public static DbParameterCollection AddSqlTableValuedParameter(this DbParameterCollection prms, string parameterName, IEnumerable<SqlDataRecord> value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Collections.Generic.IEnumerable < Microsoft.SqlServer.Server.SqlDataRecord > value A list of SqlDataRecord objects containing the table contents. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTimeInParameter(DbParameterCollection, String, Nullable<TimeSpan>) Creates a parameter for providing a time value or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlTimeInParameter(this DbParameterCollection prms, string parameterName, TimeSpan? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.TimeSpan > value A time value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTimeInParameter(DbParameterCollection, String, TimeSpan) Creates a parameter for providing a time value to a stored procedure. Declaration public static DbParameterCollection AddSqlTimeInParameter(this DbParameterCollection prms, string parameterName, TimeSpan value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.TimeSpan value A time value . Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTimeOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a time value from a stored procedure. Declaration public static DbParameterCollection AddSqlTimeOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTinyIntInParameter(DbParameterCollection, String, Byte) Creates a parameter for providing a 8-bit unsigned integer (byte) to a stored procedure. Declaration public static DbParameterCollection AddSqlTinyIntInParameter(this DbParameterCollection prms, string parameterName, byte value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Byte value An unsigned 8-bit integer value. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTinyIntInParameter(DbParameterCollection, String, Nullable<Byte>) Creates a parameter for providing a 8-bit unsigned integer (byte) or a DbNull value to a stored procedure. Declaration public static DbParameterCollection AddSqlTinyIntInParameter(this DbParameterCollection prms, string parameterName, byte? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Byte > value An unsigned 8-bit integer value or null. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlTinyIntOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a 32-bit signed integer (byte) from a stored procedure. Declaration public static DbParameterCollection AddSqlTinyIntOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlUniqueIdentifierInParameter(DbParameterCollection, String, Guid) Creates a parameter for providing a Guid or DBNull (via Guid.Empty) to a stored procedure. Declaration public static DbParameterCollection AddSqlUniqueIdentifierInParameter(this DbParameterCollection prms, string parameterName, Guid value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Guid value A Guid value. Will convert Guild.Empty to DBNull. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlUniqueIdentifierInParameter(DbParameterCollection, String, Nullable<Guid>) Creates a parameter for providing a Guid or DBNull (via null value) to a stored procedure. Declaration public static DbParameterCollection AddSqlUniqueIdentifierInParameter(this DbParameterCollection prms, string parameterName, Guid? value) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Nullable < System.Guid > value Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlUniqueIdentifierOutParameter(DbParameterCollection, String) Creates an output parameter for retrieving a Guid from a stored procedure. Declaration public static DbParameterCollection AddSqlUniqueIdentifierOutParameter(this DbParameterCollection prms, string parameterName) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlVarBinaryInParameter(DbParameterCollection, String, Byte[], Int32) Creates a parameter for providing a variable-sized byte array to a stored procedure. A null reference will save DBNull. Declaration public static DbParameterCollection AddSqlVarBinaryInParameter(this DbParameterCollection prms, string parameterName, byte[] value, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Byte [] value An array of bytes, or null. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlVarBinaryOutParameter(DbParameterCollection, String, Int32) Creates a parameter for obtaining a variable-sized byte array from a stored procedure. Declaration public static DbParameterCollection AddSqlVarBinaryOutParameter(this DbParameterCollection prms, string parameterName, int length) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 length The maximum allowable number of bytes in the database column. Use -1 for varbinary(max). Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlVarCharInParameter(DbParameterCollection, String, String, Int32, Int32) Creates parameter for providing a string or a DBNull value to a stored procedure, which is converted to the target ANSI code page (if possible). Declaration public static DbParameterCollection AddSqlVarCharInParameter(this DbParameterCollection prms, string parameterName, string value, int maxLength, int localeId) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.String value An empty string will be saved as a zero-length string; a null string will be saved as a database null value. System.Int32 maxLength This should match the size of the parameter, not the size of the input string (and certainly not the number of bytes). For nvarchar(max) parameters, specify -1. Setting the value correctly will help avoid plan cache pollution (when not using stored procedures) and minimize memory buffer allocations. System.Int32 localeId Specify the code page for ANSI conversions. For example, the value 1033 is U.S. English. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended. | Improve this Doc View Source AddSqlVarCharOutParameter(DbParameterCollection, String, Int32, Int32) Creates parameter for obtaining a string from a stored procedure, which has been converted from the source ANSI code page. Declaration public static DbParameterCollection AddSqlVarCharOutParameter(this DbParameterCollection prms, string parameterName, int maxLength, int localeId) Parameters Type Name Description System.Data.Common.DbParameterCollection prms The existing parameter collection to which this output parameter should be added. System.String parameterName The name of the parameter. If the name doesn’t start with “@”, it will be automatically pre-pended. System.Int32 maxLength This should match the size of the parameter, not the size of the input string (and certainly not the number of bytes). For nvarchar(max) parameters, specify -1. Setting the value correctly will help avoid plan cache pollution (when not using stored procedures) and minimize memory buffer allocations. System.Int32 localeId Specify the code page for ANSI conversions. For example, the value 1033 is U.S. English. Returns Type Description System.Data.Common.DbParameterCollection The DbParameterCollection to which the parameter was appended."
  },
  "tutorials/sharding.html": {
    "href": "tutorials/sharding.html",
    "title": "Sharding | ArgentSea Docs",
    "keywords": "Sharding (documentation coming soon)"
  },
  "tutorials/configuration.html": {
    "href": "tutorials/configuration.html",
    "title": "Configuration Deep-Dive | ArgentSea Docs",
    "keywords": "Configuration Deep-Dive Introduction ArgentSea fully leverages the configuration architecture of .NET core/.NET standard. If this architecture is new to you, it essentially consists of two parts: A configuration dictionary, which can be loaded from multiple sources, one of which is a file called appsettings.json An “options” architecture, which casts the configuration entries into a strongly-typed configuration object. One of the key improvements of the configuration architecture in .NET standard is the dictionary architecture, which allows entries to be loaded from multiple sources. So, for example, you might load the account names from an appsettings.json configuration file, the passwords from a usersecrets.json file (or Key Vault), and the server names from environment variables. Properly managed, this can make deployments both easier and more secure. ArgentSea Database Connections There are two types of database connections in ArgentSea: A database connection - a data set which is hosted by a single database A shard set - a single data set spread over multiple database connections ArgentSea configuration supports any number of database connections and any number of shard sets . And of course each shard set can have many database connections. Limiting Redundancy Across Multiple Connection Definitions This creates a potentially large number of database connections. Many of these will likely have similar connection information. In many scenarios, all of the connections in a shard set would use the same login information. Likewise, in a given datacenter environment it only makes sense that all connections use the same resiliency strategy. To manage this redundancy, the ArgentSea configuration data is broken into four parts: Login credential information, which can be referenced by any connection. Data resilience strategies, any of which can be referenced by any connection. Database connection information Shard set connection information Credentials If you are using json configuration files to manage your configuration, the credentials section in your configuration might look like this: \"Credentials\": [ { \"SecurityKey\": \"0\", \"UserName\": \"webuser\", \"Password\": \"123456\" }, { \"SecurityKey\": \"1\", \"WindowsAuth\": true, }, { \"SecurityKey\": \"2\", \"UserName\": \"admin\", \"Password\": \"7890\" } ] If you prefer to set the properties of an Options class directly, you can use the ArgentSea.DataSecurityOptions class. You should put this configuration section into a secure location. In a development environment, you should consider using the UserSecrets functionality, which prevents this information from being checked into your source code repository. In other environments, you might consider using you should use AWS Secrets Manager, Azure Key Vault, or something similar. The SecurityKey property must be unique and exactly match the security string key that you specify on your connection (i.e. both must have the same casing). Resilience Strategies Resilience strategies define how ArgentSea recovers from unexpected failures, usually through some combination of retry logic and circuit breaking. Because one typically requires only a few resilience strategies across datacenters (perhaps one for local connections and another for across the WAN), to reduce redundancy we use the same keyed approach as for security. A general Resilience Strategy is implicit. If a connection does not specify a Resilience Strategy, this default one will be used. If it is defined, the corresponding connection(s) must specify the key (again, casing matters). An example resiliency configuration section might look like this: \"ResilienceStrategies\": [ { \"DataResilienceKey\": \"local\", \"RetryCount\": \"6\", \"RetryInterval\": \"150\", \"RetryLengthening\": \"Linear\", \"CircuitBreakerFailureCount\": \"10\", \"CircuitBreakerTestInterval\": \"5000\" }, { \"DataResilienceKey\": \"remote\", \"RetryCount\": \"6\", \"RetryInterval\": \"250\", \"RetryLengthening\": \"Fibonacci\", \"CircuitBreakerFailureCount\": \"20\", \"CircuitBreakerTestInterval\": \"5000\" } Retries Not that retries only occur on errors that are defined as transient . A permissions error or invalid object reference would be pointless to retry. (The list of errors defined as transient is in the provider-specific implementation of IDataProviderServiceFactory. You can view this in the source code). The RetryCount setting determines how many times the connection retries before aborting and raising an error back to the caller. The RetryInterval determines the length of time (in milliseconds) between retries. The RetryLengthening value can add an additional pause between subsequent retries. One might presume that if the system encounters a transient error, it should retry quickly. Then, if the retry is not successful, it should wait a bit longer for the error to clear before retrying again. The `RetryLengthening1 value is what determines how much longer it will pause on subsequent retries before giving up. The RetryLengthening values are: Linear - each retry is the same duration as specified in RetryInterval Fibonacci - The first retry is at RetryInterval , each subsequent retry interval pauses for the duration of the previous two combined. HalfSquare - the retry count number is squared, then divided by two, then multiplied by RetryInterval Squaring - each retry attempt doubles the duration of the previous one. You can visualize the impact of RetryLengthening with these charts: If a Resilience Strategy is not defined, ArgentSea will use a default strategy. Currently, this a is RetryCount of 6, RetryInterval of 250 milliseconds, and a RetryLengthening of Fibonacci. With these values, the default resilience strategy would take a total of five seconds to finally fail. Note that a high RetryCount could create a very long delay before a connection is allowed to ultimately fail. Circuit Breaking When a database connection is unavailable, this can cause serious downstream problems. Processes may pile-on further requests even while earlier requests are simply waiting to time out. As this continues, the queue of backlogged requests becomes so large that the caller itself can manage no more. This bottleneck can block other systems too. What started as a broken connection to a single database eventually becomes fatal to the calling system too! This is the reason to add a “circuit breaker” — a fail-fast mechanism to ensure that callers do not wait needlessly for queued connections that are unlikely to succeed, and which are blocking other processes too. When the circuit breaker is tripped, subsequent connections will fail immediately . This prevents queuing, bottleneck blocking, and downstream failures. While tripped, the circuit breaker will periodically allow a single transaction to proceed; if it successful the circuit breaker is reopened. In this way, a system restoration will automatically close the circuit breaker too so that connections can resume. The CircuitBreakerFailureCount value determines how many sequential failures will trigger the circuit breaker. The CircuitBreakerTestInterval value determines how often (in milliseconds) the circuit breaker will allow a single transaction through. Database Connections The database configuration architecure allow any number of database connections. Each connection is identified by a key, which you also use to request the connection in your code. The connection information is specific to the database provider. SQL Server PostgreSQL SQL Server Database Connections For SQL Server, the entire set of attributes would look like this: \"SqlDbConnections\": [ { \"DatabaseKey\": \"MyDb\", \"DataConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"remote\", \"ApplicationIntent\": \"ReadWrite\", \"ApplicationName\": \"MyWebApp\", \"ConnectRetryCount\": 0, \"ConnectRetryInterval\": 0, \"ConnectTimeout\": 2, \"CurrentLanguage\": \"english\", \"DataSource\": \"localhost\", \"Encrypt\": false, \"FailoverPartner\": \"\", \"InitialCatalog\": \"MyDb\", \"LoadBalanceTimeout\": 0, \"MaxPoolSize\": 100, \"MinPoolSize\": 0, \"MultipleActiveResultSets\": false, \"MultiSubnetFailover\": true, \"PacketSize\": 8000, \"PersistSecurityInfo\": false, \"Pooling\": true, \"Replication\": false, \"TrustServerCertificate\": true, \"TypeSystemVersion\": \"Latest\", \"WorkstationID\": \"\" } } ] You do not need include all of these attributes in your connection! Any value not included in your configuration will be set to the provider default — except as described in the next paragraphs. The ConnectRetryCount , ConnectRetryInterval values default to 0 because the ArgentSea retry logic duplicates this functionality. If you prefer to use the SqlClient retry functionality instead, set these to their desired values and specify a ResilienceStrategy with no retries. If you use both connection retries and ArgentSea retries, no harm will come, other than a lot of retries. The other exception to the provider default values is the ConnectTimeout value. The provider default is 15 seconds, but with the ArgentSea’s retry logic, this could create unnecessarily long connection timeouts. The ArgentSea default is 2 seconds because datacenter connections are easily resolved in that time unless something is wrong. If you have a WAN or high-latency connection (or are using ConnectRetryCount), you should consider increasing this value. If you accept the defaults, the only required parameter values are: \"SqlDbConnections\": [ { \"DatabaseKey\": 1, \"DataConnection \": { \"SecurityKey\": \"2\", \"DataResilienceKey\": \"remote\", \"DataSource\": \"localhost\", \"InitialCatalog\": \"MyDb\", } } ] PostgreSQL Database Connections For SQL Server, the entire set of attributes would look like this: \"PgDbConnections\": [ { \"DatabaseKey\": \"MyDB\", \"DataConnection\": { \"SecurityKey\": \"MyCredentials\", \"ResilienceKey\": \"local\", \"ApplicationName\": \"MyWebApp\", \"AutoPrepareMinUsages\": 5, \"CheckCertificateRevocation\": false, \"ClientEncoding\": \"UTF8\", \"CommandTimeout\": 15, \"ConnectionIdleLifetime\": 300, \"ConnectionPruningInterval\": 10, \"ConvertInfinityDateTime\": false, \"Database\": \"MyDB\", \"Encoding\": \"UTF8\", \"Enlist\": true, \"Host\": \"10.10.1.22\", \"IncludeRealm\": false, \"InternalCommandTimeout\": -1, \"KeepAlive\": 0, \"KerberosServiceName\": \"postgres\", \"MaxAutoPrepare\": 0, \"MaxPoolSize\": 100, \"MinPoolSize\": 1, \"NoResetOnClose\": false, \"PersistSecurityInfo\": true, \"Pooling\": true, \"Port\": 5432, \"ReadBufferSize\": 8192, \"SearchPath\": \"\", \"ServerCompatibilityMode\": \"Redshift\", \"SocketReceiveBufferSize\": 8192, \"SocketSendBufferSize\": 8192, \"SslMode\": \"Disable\", \"TcpKeepAliveInterval\": 0, \"TcpKeepAliveTime\": 0, \"Timeout\": 2, \"TrustServerCertificate\": false, \"UsePerfCounters\": false, \"UseSslStream\": false, \"WriteBufferSize\": 8192 } } ] You do not need include all of these attributes in your connection! Any value not included in your configuration will be set to the provider default — except as described in the next paragraph. The principal change to the provider default values is the ConnectTimeout value. The provider default is 15 seconds, but with the ArgentSea’s retry logic, this could create unnecessarily long connection timeouts. The ArgentSea default is 2 seconds because datacenter connections are easily resolved in that time unless something is wrong. If you have a WAN or high-latency connection (or are using ConnectRetryCount), you should consider increasing this value. If you accept the defaults and are running on the default port (5432), the only required parameter values are: \"PgDbConnections\": [ { \"DatabaseKey\": \"MyDB\", \"DataConnection\": { \"SecurityKey\": \"MyCredentials\", \"Host\": \"localhost\", \"Database\": \"MyDb\", } } ] Shard Set Connections A shard set represents a single set of data that is spread among multiple database servers. This structure is common for high-performance data access, since it is usually more cost effective and predictably scalable to have multiple smaller database servers than to build one massive server. Global applications might try to improve performance for their global users by distributing shards in datacenters around the globe. The ArgentSea data access components allow you to query across multiple servers or a find specific record on its corresponding host server. From a configuration perspective, sharded data introduces three concerns: Sharded data requires a larger number of database connections to manage. Scaled out data often uses different connections for read operations and write operations. Because sharded records often need to refer to related records hosted in other shards, the shard identifier become part of the record key. Managing Database Connections Sharded data sets may run to hundreds of servers. ArgentSea manages any number of distinct shard sets and any number of connections in each shard set. You could have a distinct shard set for, say, all of your subscriber information and a separate shard set for all of your operational data. You define the shard set name in your configuration; when you query a shard set, you simply specify the shard set name. Distinct Read and Write Endpoints If you are scaling-out your data access by sharding your data, you are likely also scaling-out by separating read activity from write operations. Examples of this includes SQL Availability Groups, RDS Read Replicas, Azure SQL geo-replication, Aurora reader endpoints, etc. ArgentSea shard sets have both read connections and write connections. Only one of these must be defined. If only one is defined, it will be used for both. Complicating this is the replication latency between the write/read servers. A read immediately following a write might fail because the expected data has not yet been copied to the read server. To accommodate replication latency when an expected read-only result is not retrieved, ArgentSea will immediately retry the query on the read-write connection under the following conditions: The query arguments indicate that it is read-only data fetch. The read connection is different than the write connection. The query handler returns a null object (i.e. a parameter attribute is marked required but the database value is (db) null or a custom handler returns null). The Shard Identifier Type Each database in a shard set has a shard identifier (shardId) . The shardId is used in combination with the record key to uniquely identify a record. In other words, records in the shard set are identified with a sort of virtual compound key, consisting of the shard identifier and the record key. [!INFORMATION] Records within a shard set are uniquely identified with a sort of virtual compound key — a ShardKey — consisting of the shardId and the record identifier. The data type of the ShardId is important because a record in a data shard may refer to records in other shards. Persisting the remote shard reference means saving the shard identifier too. In other words, the ShardId type is used in configuration, throughout your code, in the database, and across all shard sets. Warning Once established, the ShardId type cannot be easily changed. Technically, the ShardId can be one of the following types: byte, char, DateTime, DateTimeOffset, decimal, double, float, Guid, int, long, sbyte, short, string, TimeSpan, uint, ulong, or ushort. Practically, realistic candidates are much fewer. Avoid types without a corresponding SQL type and unnecessarily large data sizes. Essentially, this leaves byte , short , char as efficient choices; and int or string as choices if your ShardId needs to integrate with some external system with previously defined data. Your configuration must also be aware of the nature of this shard key; the ShardId value in your json configuration file must be cast to your ShardId type. ShardSet JSON SQL Server PostgreSQL For SQL Server, a simple configuration would look like this (assuming that the ShardId type is an integer value): \"SqlShardSets\": [ { \"ShardSetKey\": \"Set1\", \"Shards\": [ { \"ShardId\": 0, \"ReadConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"local\", \"DataSource\": \"LocalServer\", \"InitialCatalog\": \"dbName1\" }, \"WriteConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"remote\", \"DataSource\": \"RemoteServer\", \"InitialCatalog\": \"dbName1\" } }, { \"ShardId\": 1, \"ReadConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"remote\", \"DataSource\": \"RemoteServer\", \"InitialCatalog\": \"dbName2\" }, \"WriteConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"local\", \"ApplicationIntent\": \"ReadWrite\", \"ApplicationName\": \"MyWebApp\", \"ConnectRetryCount\": 0, \"ConnectRetryInterval\": 0, \"ConnectTimeout\": 2, \"CurrentLanguage\": \"english\", \"DataSource\": \"LocalServer\", \"Encrypt\": false, \"FailoverPartner\": \"\", \"InitialCatalog\": \"dbName2\", \"LoadBalanceTimeout\": 0, \"MaxPoolSize\": 100, \"MinPoolSize\": 0, \"MultipleActiveResultSets\": false, \"MultiSubnetFailover\": true, \"PacketSize\": 8000, \"PersistSecurityInfo\": false, \"Pooling\": true, \"Replication\": false, \"TrustServerCertificate\": true, \"TypeSystemVersion\": \"Latest\", \"WorkstationID\": \"\" } } ] } ] For PostgreSQL, a simple configuration would look like this (assuming that the ShardId type is an integer value): \"SqlShardSets\": [ { \"ShardSetKey\": \"Set1\", \"Shards\": [ { \"ShardId\": 0, \"ReadConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"local\", \"Host\": \"LocalServer\", \"Database\": \"dbName1\", }, \"WriteConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"remote\", \"Host\": \"RemoteServer\", \"Database\": \"dbName1\", } }, { \"ShardId\": 1, \"ReadConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"remote\", \"Host\": \"RemoteServer\", \"Database\": \"dbName2\", }, \"WriteConnection\": { \"SecurityKey\": \"0\", \"DataResilienceKey\": \"local\", \"ApplicationName\": \"MyWebApp\", \"AutoPrepareMinUsages\": 5, \"CheckCertificateRevocation\": false, \"ClientEncoding\": \"UTF8\", \"CommandTimeout\": 15, \"ConnectionIdleLifetime\": 300, \"ConnectionPruningInterval\": 10, \"ConvertInfinityDateTime\": false, \"Database\": \"dbName2\", \"Encoding\": \"UTF8\", \"Enlist\": true, \"Host\": \"LocalServer\", \"IncludeRealm\": false, \"InternalCommandTimeout\": -1, \"KeepAlive\": 0, \"KerberosServiceName\": \"postgres\", \"MaxAutoPrepare\": 0, \"MaxPoolSize\": 100, \"MinPoolSize\": 1, \"NoResetOnClose\": false, \"PersistSecurityInfo\": true, \"Pooling\": true, \"Port\": 5432, \"ReadBufferSize\": 8192, \"SearchPath\": \"\", \"ServerCompatibilityMode\": \"Redshift\", \"SocketReceiveBufferSize\": 8192, \"SocketSendBufferSize\": 8192, \"SslMode\": \"Disable\", \"TcpKeepAliveInterval\": 0, \"TcpKeepAliveTime\": 0, \"Timeout\": 2, \"TrustServerCertificate\": false, \"UsePerfCounters\": false, \"UseSslStream\": false, \"WriteBufferSize\": 8192 } } ] } ] The configuration file can repeat the ShardSet section (the object with ShardSetKey and Shards entries) for each shard set. Likewise, the entries in the Shards array can repeat for every data shard in the shard set. As illustrated by Shard 1’s Write Connection, any connection can include a any number of provider-specific connection attributes. Loading the Configuration ArgentSea uses the built-in Options configuration and dependency injection architecture in .NET Core. The complexity of turning a JSON configuration file into a connection object is as simple as adding the services.AddSqlServices<TShard>(Configuration) extension method to the ConfigureServices method in your Startup class. SQL Server PostgreSQL This example assumes that your shardId type is byte . If you use any other type, change the generic parameter. If you use ArgentSea database connections without sharding, simply remove the generic declaration altogether (i.e. services.AddPgServices(Configuration); only). public void ConfigureServices(IServiceCollection services) { ... // add your injectable logging provider services.AddLogging(); // add the ArgentSea SQL database connections (shardId type: byte) services.AddSqlServices<byte>(Configuration); // now add your custom data classes, which use the data components services.AddSingleton<MyDataStore>(); ... services.AddMvc(); ... } This example assumes that your shardId type is byte . If you use any other type, change the generic parameter. If you use ArgentSea database connections without sharding, simply remove the generic declaration altogether (i.e. services.AddPgServices(Configuration); only). public void ConfigureServices(IServiceCollection services) { ... // add your injectable logging provider services.AddLogging(); // add the ArgentSea SQL database connections (shardId type: byte) services.AddPgServices<byte>(Configuration); // now add your custom data classes, which use the data components services.AddSingleton<MyDataStore>(); ... services.AddMvc(); ... } public IConfiguration Configuration { get; } This code references a Configuration property. It is common practice to obtain the configuration object from the constructor of the Startup class, then use this to set the Configuration property. Simplified Data Connections In .NET Core, any data repository class can use the ArgentSea data access component by adding and argument to its constructor. if you any experience in .NET Core, requesting the database connection in any data access class is straightforward: SQL Server PostgreSQL public MyDataAccessStore(SqlDatabases dbs, ILogger<MyDataAccessStore> logger) { ... public MyDataAccessStore(PgDatabases dbs, ILogger<MyDataAccessStore> logger) { ... The injected data access component allows the class to access any connection, which means that you would need to specify the connection name. In most cases, however, the class will only access a single data source. To simplify the data access code, you can instead store only the relevant connection instance: SQL Server PostgreSQL private readonly SqlDatabases.DataConnection _data; public MyDataAccessStore(SqlDatabases dbs, ILogger<MyDataAccessStore> logger) { ... _data = dbs.DbConnections[\"MyConnectionName\"]; ... Subsequent calls to the SQL database can be on methods directly on the _data object. private readonly PgDatabases.DataConnection _data; public MyDataAccessStore(PgDatabases dbs, ILogger<MyDataAccessStore> logger) { ... _data = dbs.DbConnections[\"MyConnectionName\"]; ... Subsequent calls to the SQL database can be on methods directly on the _data object. The flexibility of the ShardSets object stands in more need of this simplification. Using the ArgentSea components requires that the generic ShardId type (which can never change) is declared redundantly. You can simplify this is two ways: Use the using statement to alias the ShardSet declaration. Declare a internal class which inherits from ShardSet To simplify calling a ShardSet within a single file , simply add: SQL Server PostgreSQL using ShardSets = ArgentSea.Sql.SqlShardSets<byte>; // and/or using ShardSet = ArgentSea.Sql.SqlShardSets<byte>.ShardDataSet; Again, the assumes a ShardId type of byte ; replace this as appropriate. using ShardSets = ArgentSea.Pg.PgShardSets<byte>; // and/or using ShardSet = ArgentSea.Pg.PgShardSets<byte>.ShardDataSet; Again, the assumes a ShardId type of byte ; replace this as appropriate. By creating a local class that inherits from then generic class, you can simplify the shard set reference throughout your project. SQL Server PostgreSQL public class ShardSets : SqlShardSets<byte> { public ShardSets( IOptions<SqlShardConnectionOptions<byte>> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<ShardSets> logger ) : base(configOptions, securityOptions, resilienceStrategiesOptions, logger) { // } } public class ShardSets : PgShardSets<byte> { public ShardSets( IOptions<SqlShardConnectionOptions<byte>> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<ShardSets> logger ) : base(configOptions, securityOptions, resilienceStrategiesOptions, logger) { // } } This approach will be helpful in reducing the number of times the generic shardId type must be specified in project."
  },
  "tutorials/index.html": {
    "href": "tutorials/index.html",
    "title": "Introduction | ArgentSea Docs",
    "keywords": "Introduction In essence, ArgentSea consists of four areas of functionality, which are complementary but still rather independent (i.e. you can use one without the others): Configuring connections - is particularly useful with the large number of connections necessary for sharded data. Querying data - in a way that supports multi-threaded concurrent queries on multiple shards. Mapping - simplifies and dramatically shortens the code required to map data (result sets and/or parameters) to or from objects. Tooling - a simple UI to generate starter model classes and/or CRUD procedures based on a table or view. Because ArgentSea enhances the familiar ADO.NET data access classes, you can still use ADO.NET to resolve any capability gaps or distinctive query requirements. Getting Started If you want to understand everything first, explore the deep dives ; if you prefer to learn by getting your hands dirty, jump into the walkthroughs . Deep Dives Installing ArgentSea. Setting up your configuration Mapping Using shards Walkthroughs QuickStart 1 - Setting up and configuring an initial project QuickStart 2 - Adding shard handling and queries"
  },
  "tutorials/mapping.html": {
    "href": "tutorials/mapping.html",
    "title": "Mapping Deep-Dive | ArgentSea Docs",
    "keywords": "Mapping Deep-Dive The Mapper make data-access coding simpler and more productive by using property attributes to map a model class’s properties to data values — parameters, reader columns, and (in the case of SQL Server) table-value parameters. This reduces and simplifies the amount of code required. Overview Using the Mapper consists of two steps: Define how each property in your model class should be mapped to a data store (if at all) using property attributes Call a Mapper method to automatically create data parameters, DataReader handler, etc. Property Attributes You use properties attributes to define the metadata that the Mapper requires. For example, given this very simple model class: using System; public class Subscriber { public int SubscriberId { get; set; } public string Name { get; set; } public DateTime Expiration { get; set; } } Adding mapping attributes to this class provides the metadata to automatically map these properties to stored procedures: SQL Server PostgreSQL using System; using ArgentSea.Sql; public class Subscriber { [MapToSqlInt(\"@SubID\", true)] public int SubscriberId { get; set; } [MapToSqlNVarChar(\"@SubscriberName\", 255)] public string Name { get; set; } [MapToSqlDateTime2(\"@EndDate\")] public DateTime Expiration { get; set; } } The “@” parameter prefix is optional — ArgentSea will add the “@” automatically for parameters and remove it automatically when reading data reader rows. using System; using ArgentSea.Pg; public class Subscriber { [MapToPgInteger(\"SubId\", true)] public int SubscriberId { get; set; } [MapToPgVarChar(\"SubscriberName\", 255)] public string Name { get; set; } [MapToPgTimestamp(\"EndDate\")] public DateTime Expiration { get; set; } } Often, due to different naming conventions or development drift, database column names and the corresponding .NET properties names do not match. That is why every attribute requires a “name” argument — which should largly correspond to the database name. The Mapper will create query parameters based on this name and reference DataReader columns with this name. Warning Database parameters and columns should be named as consistently as possible. In most cases, this means the parameters have the same name as the columns they reference. If you like to alias columns or abbreviate parameters, you will find the Mapper largely unhelpful. Attribute Types There is a mapping attribute defined for most common database types. Spatial data types, CLR types, XML, and JSON types are examples of missing attributes. These are absent because there is not a straightforward mapping between the core .NET base types and these database types. It is very possible to write custom handlers to render this from your database; indeed it is not much harder than writing the necessary custom code without this framework. The attribute itself defines the underlying database type. Naturally, the attribute type and the property type must match. For example, a long (Int64) property must map to a bigint database type. The Mapper will throw an error if these types do not match. There is no attempt to cast data to a different type, even if the cast would be successful. Many data attribute types have an additional parameters. The length argument, for example, helps optimize data access performance by ensuring that buffers are sized appropriately. Here is catalog of the current attributes, along with their arguments and corresponding .NET types: SQL Server PostgreSQL Attribute Arguments .NET types SqlType MapToSqlNVarCharAttribute length¹ String, Enum², Nullable<Enum> NVarChar MapToSqlNCharAttribute length String, Enum², Nullable<Enum> NChar MapToSqlVarCharAttribute length¹, localeid³ String, Enum², Nullable<Enum> VarChar MapToSqlCharAttribute length, localeid³ String, Enum², Nullable<Enum> Char MapToSqlBigIntAttribute Int64, Enum⁴, Nullable<Int64>, Nullable<Enum> BigInt MapToSqlIntAttribute Int32, Enum⁴, Nullable<Int32>, Nullable<Enum> Int MapToSqlSmallIntAttribute Int16, Enum⁴, Nullable<Int16>, Nullable<Enum> SmallInt MapToSqlTinyIntAttribute Byte, Enum⁴, Nullable<Byte>, Nullable<Enum> TinyInt MapToSqlBitAttribute Boolean, Nullable<Boolean> Bit MapToSqlDecimalAttribute precision, scale Decimal, Nullable<Decimal> Decimal MapToSqlMoneyAttribute Decimal, Nullable<Decimal> Money MapToSqlSmallMoneyAttribute Decimal, Nullable<Decimal> SmallMoney MapToSqlFloatAttribute Double, Nullable<Double> Float MapToSqlRealAttribute Float, Nullable<Float> Real MapToSqlDateTimeAttribute DateTime, Nullable<DateTime> DateTime MapToSqlDateTime2Attribute precision DateTime, Nullable<DateTime> DateTime2 MapToSqlDateAttribute DateTime, Nullable<DateTime> Date MapToSqlTimeAttribute TimeSpan, Nullable<TimeSpan> Time MapToSqlDateTimeOffsetAttribute DateTimeOffset, Nullable<DateTimeOffset> DateTimeOffset MapToSqlVarBinaryAttribute length¹ byte[] VarBinary MapToSqlBinaryAttribute length byte[] Binary MapToSqlUniqueIdentifierAttribute Guid, Nullable<Guid> UniqueIdentifier ¹ For “max” values (nvarchar(max), varbinary(max), etc.) use length of -1. ² The Enum name is saved as string. ³ Locale Id is the Ansi code page to use for Unicode conversion. For en-US locale, for example, use 1033. ⁴ The Enum value is saved based on its underlying numeric value. The Enum integer base type (int, short, byte, etc.) must match the attribute type. Attribute Arguments .NET types SQL Type MapToPgVarCharAttribute length String, Enum¹, Nullable<Enum> VarChar MapToPgCharAttribute length String, Enum¹, Nullable<Enum> Char MapToPgTextAttribute String, Enum¹, Nullable<Enum> VarChar MapToPgBigintAttribute Int64, Enum², Nullable<Int64>, Nullable<Enum> Bigint MapToPgIntegerAttribute Int32, Enum², Nullable<Int32>, Nullable<Enum> Integer MapToPgSmallintAttribute Int16, Enum², Nullable<Int16>, Nullable<Enum> Smallint MapToPgInternalCharAttribute Byte, Enum², Nullable<Byte>, Nullable<Enum> InternalChar MapToPgBooleanAttribute Boolean, Nullable<Boolean> Boolean MapToPgNumericAttribute precision, scale Decimal, Nullable<Decimal> Numeric MapToPgMoneyAttribute Decimal, Nullable<Decimal> Money MapToPgDoubleAttribute Double, Nullable<Double> Double MapToPgRealAttribute Float, Nullable<Float> Real MapToPgTimestampAttribute DateTime, DateTimeOffset, Nullable<DateTime>, Nullable<DateTimeOffset> Timestamp MapToPgTimestampTzAttribute DateTimeOffset, Nullable<DateTimeOffset> TimestampTz MapToPgDateAttribute DateTime, Nullable<DateTime> Date MapToPgTimeAttribute TimeSpan, Nullable<TimeSpan> Time MapToPgIntervalAttribute TimeSpan, Nullable<TimeSpan> Interval MapToPgTimeTzAttribute TimeSpan, DateTimeOffset, Nullable<TimeSpan>, Nullable<DateTimeOffset> TimeTz MapToPgArrayAttribute Array Array MapToPgByteaAttribute length byte[] Bytea MapToPgHstoreAttribute length IDictionary<string, string> Hstore MapToPgUuidAttribute Guid, Nullable<Guid> UniqueIdentifier ¹ The Enum name is saved as string. ² The Enum value is saved based on its underlying numeric value. The Enum integer base type (int, short, byte, etc.) must match the attribute type. Required Finally, the the data attributes have an optional required parameter. It defaults to false. Generally, you might set a key value to “required”; this tell the Mapper that if the value is null, then the entire record is missing and the object result should be null. For example, suppose you are using a query’s output parameters to fetch a record. A null value in the key field means that the record doesn’t exist. Returning a valid new object with a null properties isn’t the correct behavior; the Mapper should return a null object. When using replicated or mirrored data, there can be latency between the primary and cloned databases. In high-performance scenarios, you may split your reads and writes and your application can attempt reads that should be successful but fail because of this latency. In this case, the required parameter enables the system to detect an unexpectedly missing record on a clone or mirror and retry on the master or primary. When required is set to true, then: The Mapper will return a null object if this parameter or column is null. The shard set will retry a data fetch on the a Write connection. Enum Types .NET enum values can be stored with their base integer data type (int, short, etc.), or as their string name, or (PostgreSQL only) as an Enum database type. If the mapping attribute database type is a numeric database type, then the base number type is stored If the mapping attribute database type is a text-type field, the Mapper stores the name of the enum value If the mapping attribute database type is Enum (PostgreSQL only), then the Enum value is set Nullable ShardKey and ShardChild Mapping Attributes SQL Server PostgreSQL SQL Server Mapping Attributes To map a property PostgreSQL Mapping Attributes There is a mapping attribute defined for most SQL Server data types. The principals exceptions are the CLR types and complex types, like hierarchyid, geometry, geography, variant, and xml. The property type must correspond Mapping Targets The ArgentSea Mapper maps to: Query input parameters Query output parameters Data reader columns Table-value parameters (SQL Server only) The mapper does not generate dynamic SQL statements. The Mapper may be useful in situations where dynamic SQL is used, but philosophically this is not encouraged. Stored procedures are generally more secure, more performant, and offer a less tightly-coupled architecture. Mapping to Input Parameters Mapping to Output Parameters The DataReader The Implicit use of the Mapper Required Attributes Performance The ArgentSea Mapper is written to be as high-performance as optimized hand-coded data access code. However, there is a hitch. Property attributes can only be retrieved using reflection , which is relatively slow .NET code. To avoid this type of performance penalty on every data access, ArgentSea uses reflection only the first time the mapping is performed; using that metadata it then creates and compiles an “Expression Tree”to build an optimized, compiled mapping. The compiled code is cached in memory and reused for all subsequent calls. [!INFORMATION] The Mapper will be relatively slow (and CPU intensive) the first time each model class is mapped to parameters or data. The initial compilation usually takes about a second or less. Subsequent calls will execute the data to property mapping at native machine-code speeds. When the application is restarted, the memory is cleared and the compilation overhead occurs again. Instrumentation The Mapper also use"
  },
  "tutorials/quickstart2.html": {
    "href": "tutorials/quickstart2.html",
    "title": "QuickStart Two | ArgentSea Docs",
    "keywords": "QuickStart Two The previous QuickStart introduced configuration and mapping."
  },
  "tutorials/quickstart1.html": {
    "href": "tutorials/quickstart1.html",
    "title": "QuickStart One | ArgentSea Docs",
    "keywords": "QuickStart One This article will breeze you through a simple setup of ArgentSea for non-sharded data access. This presentation introduces concepts which are further elaborated in the subsequent article . It assumes that you are using .NET Core in some flavor of Visual Studio . If you get stuck or have questions, click on one of the links to the other more in-depth articles. 1. Create a Project (or use an existing one) A sample QuickStart project is here . It is based on the ASP.NET API project type. If you create an empty project, you will need to ensure that appsettings.json is added. 2. Add ArgentSea to your project Use NuGet to add ArgentSea to your project. Select the package that corresponds to your database platform. As of today, you can add one of the following NuGet packages: For SQL Server databases, use ArgentSea.Sql For PostgreSQL, use ArgentSea.Pg Both packages will automatically include the shared ArgentSea package and any other dependencies. You can learn more about adding a reference to ArgentSea here . 3. Define your Login Information There are two required configuration sections. The first of these provides security information. If you have UserSecrets set up (preferred), add the json below to your User Secrets file (right-click on the project and select Manage User Secrets ). If you are not using User Secrets, you can simply one of the json sections to your appsettings.json configuration file. Warning The sample application does use User Secrets, so if you are following along at home you will need to manually copy the credentials section below into the secrets.json file in the sample app. For a connection using username and password authentication, use: \"Credentials\": [ { \"SecurityKey\": \"SecKey1\", \"UserName\": \"webuser\", \"Password\": \"Pwd123456\" } ] Change the values, as appropriate, to represent a valid login. Alternatively, for a connection using Windows authentication, use: \"Credentials\": [ { \"SecurityKey\": \"SecKey1\", \"WindowsAuth\": true } ], Storing passwords more securely is an incidental benefit of having a separate Credentials section. The principal purpose is to simplify login management when the system has many connections across multiple shard sets. Warning In a production deployment, the Credential section could be hosted in Azure Key Vault, AWS Secrets Manager, or some other secure resource. 4. Define Your Database Settings The database settings tell ArgentSea how to build the (non-security) part of your connection string. Any attribute not specified will use a default value, so the required information is quite minimal. In your appsettings.json file, add the following section: SQL Server PostgreSQL Configure the DataSource and InitialCatalog properties below. \"SqlDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"DataSource\": \"localhost\", \"InitialCatalog\": \"MyDb\" } } ] Configure the Host and Database properties below. \"PgDbConnections\": [ { \"DatabaseKey\": \"MyDatabase\", \"SecurityKey\": \"SecKey1\", \"DataConnection\": { \"Host\": \"localhost\", \"Database\": \"MyDb\" } } ] A deep-dive into configuration settings, including a complete list of configuration attributes, is available here . Note In a production deployment, environment-specific connection information might be stored in server environment variables rather than configuration files. This make deployments much easier to manage. 6. Load ArgentSea on Application Start Open your project’s Startup class. At the top, add the following using statement: SQL Server PostgreSQL using ArgentSea.Sql; Then, in the Startup class’ ConfigureServices method, add: services.AddSqlServices(Configuration); This step creates an injectable SqlServices object that we can use in all of our data access clients. using ArgentSea.Pg; Then, in the Startup class’ ConfigureServices method, add: services.AddPgServices(Configuration); This step creates an injectable PgServices object that we can use in all of our data access clients. 7. Create a Model Class A model class has properties that correspond the the fields of a data entity. ArgentSea can automatically map these properties to input or output parameters, the columns of a datareader object, or (in SQL Server) a table-valued parameter. For example, suppose your subscriber data can be represented by a class like this: using System; public class Subscriber { public int SubscriberId { get; set; } public string Name { get; set; } public DateTime Expiration { get; set; } } We can simply add mapping attributes to this class: SQL Server PostgreSQL using System; using ArgentSea.Sql; public class Subscriber { [MapToSqlInt(\"@SubID\")] public int SubscriberId { get; set; } [MapToSqlNVarChar(\"@SubscriberName\", 255)] public string Name { get; set; } [MapToSqlDateTime2(\"@EndDate\")] public DateTime Expiration { get; set; } } The “@” parameter prefix is optional — ArgentSea will add the “@” automatically for parameters and remove it automatically when reading data reader rows. using System; using ArgentSea.Pg; public class Subscriber { [MapToPgInteger(\"SubId\")] public int SubscriberId { get; set; } [MapToPgVarChar(\"SubscriberName\", 255)] public string Name { get; set; } [MapToPgTimestamp(\"EndDate\")] public DateTime Expiration { get; set; } } Note that the property name does not need to match the parameter or column name. It is not uncommon for database naming conventions to differ from .NET property naming conventions. Warning ArgentSea assumes consistent naming in your data parameters and results. A project with consistently inconsistent parameters or column names will find the ArgentSea Mapper of little practical use. 5. Call a Stored Procedure or Function Create one more class, called SubscriberStore . This is the class that will call the database stored procedure or function and return the specified subscriber. SQL Server PostgreSQL Our very simple stored procedure can be something like this: CREATE PROCEDURE dbo.GetSubscriber (@SubscriberId int) As BEGIN SELECT Subscribers.SubscriberId, Subscribers.SubscriberName, Subscribers.EndDate FROM dbo.Subscribers WHERE Subscribers.SubscriberId = @SubscriberId; END; You can find the complete project setup SQL here . Our implementation of the data access code requires only a few lines: public class SubscriberStore { private readonly SqlDatabases _dbs; private readonly ILogger<SubscriberStore> _logger; public SubscriberStore(SqlDatabases dbs, ILogger<SubscriberStore> logger) { _dbs = dbs; _logger = logger; } public async Task<Subscriber> GetSubscriber(int subscriberId, CancellationToken cancellation) { var db = _dbs.DbConnections[\"MyDatabase\"]; var prms = new QueryParameterCollection() .AddSqlIntInParameter(\"@SubId\", subscriberId); Mapper.MapToOutParameters(prms, typeof(Subscriber), _logger); return await db.QueryAsync<Subscriber>(\"ws.GetSubscriber\", prms, cancellation); } } Our very simple PostgreSQL function can be something like this: CREATE FUNCTION ws.GetSubscriber ( _subid integer, OUT _subname varchar(255), OUT _enddate timestamp ) SECURITY DEFINER AS $$ SELECT Subscribers.SubName, Subscribers.EndDate FROM Subscribers WHERE Subscribers.SubId = _subid; $$ LANGUAGE sql; You can find the complete project setup SQL here . Our implementation of the data access code requires only a few lines: public class SubscriberStore { private readonly PgDatabases _dbs; private readonly ILogger<SubscriberStore> _logger; public SubscriberStore(PgDatabases dbs, ILogger<SubscriberStore> logger) { _dbs = dbs; _logger = logger; } public async Task<Subscriber> GetSubscriber(int subscriberId, CancellationToken cancellation) { var db = _dbs.DbConnections[\"MyDatabase\"]; var prms = new QueryParameterCollection() .AddPgIntegerInParameter(\"_subid\", subscriberId); Mapper.MapToOutParameters(prms, typeof(Subscriber), _logger); return await db.QueryAsync<Subscriber>(\"ws.GetSubscriber\", prms, cancellation); } The ArgentSea database service is injected into the SubscriberStore class. Don’t forget to add the SubscriberStore class to services.Configure() in Startup, so that it can be injected to any classes that need to access a subscriber. The code only needs to set the required input parameter value (the subscriber id to be retrieved). The Mapper sets the remaining parameters automatically. The QueryAsync method retrieves the data and creates the model instance automatically. The controller for a web API example, can be very simple: [Route(\"api/[controller]\")] [ApiController] public class SubscriberController : ControllerBase { private readonly SubscriberStore _store; private readonly ILogger<SubscriberController> _logger; public SubscriberController(SubscriberStore store, ILogger<SubscriberController> logger) { _store = store; _logger = logger; } [HttpGet(\"{id}\")] public async Task<ActionResult<Subscriber>> Get(int id, CancellationToken cancellation) { return await _store.GetSubscriber(id, cancellation); } } Due to the work of the Mapper, the controller code would not increase in complexity even if the model had a hundred properties mapped to a hundred parameters. You should be able to build and run your project. The QuickStart code has a test project that validates that the web service returns the expected results."
  }
}